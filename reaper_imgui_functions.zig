// auto generated by c2z
const std = @import("std");
//const cpp = @import("cpp");

pub const ImGui_Error = extern struct {
    vtable: *const anyopaque,

    base: std::runtime_error,

};

pub const ImGui = struct {
extern const _1_ImGui_version_: *const *const u8;
pub const version = _1_ImGui_version_;

extern fn @"_1_ImGui_init_"(plugin_getapi: ?*const fn([*c]const u8) callconv(.C) ?*anyopaque ) void;
pub const init = @"_1_ImGui_init_";

pub const details = struct {
extern const _1_ImGui_details_last_error_: *const char *(*)() noexcept;
pub const last_error = _1_ImGui_details_last_error_;

// syntax errors:
// pub inline fn check_error() void {
//  if (const err: [*c]u8 = ) err != null;
// }
// 
pub const nullopt_t = extern struct {

extern fn @"_1_ImGui_details_nullopt_t_init_"(self: *nullopt_t, __arg0: c_int) void;
pub inline fn init(__arg0: c_int) nullopt_t {
    var self: nullopt_t = undefined;
    @"_1_ImGui_details_nullopt_t_init_"(&self, __arg0);
    return self;
}

};

extern const _1_ImGui_details_nullopt_: *const nullopt_t;
pub const nullopt = _1_ImGui_details_nullopt_;

pub fn optional(comptime T: type, comptime E: type) type {
    return extern struct {
        const Self = @This();

        m_value: T,
        m_present: bool,
    };
}

pub fn param(comptime T: type) type {
    return extern struct {
        const Self = @This();

    };
}

pub fn function(comptime T: type, comptime nodiscard: bool) type {
    return extern struct {
        const Self = @This();

// syntax errors:
// pub inline fn get_enum(f: function(*anyopaque)) c_int {
// return  if (@as(bool, self.operator bool())) f.call() else 0 ;
// }
// 
};

extern var _1_ImGui_ArrowButton_: * details::function([*c]bool (ImGui_Context,[*c]const u8,*anyopaque);
pub const ArrowButton = _1_ImGui_ArrowButton_;

extern var _1_ImGui_Button_: * details::function([*c]bool (ImGui_Context,[*c]const u8, details::optional(f64), details::optional(f64)*anyopaque);
pub const Button = _1_ImGui_Button_;

extern var _1_ImGui_Checkbox_: * details::function([*c]bool (ImGui_Context,[*c]const u8,*anyopaque);
pub const Checkbox = _1_ImGui_Checkbox_;

extern var _1_ImGui_CheckboxFlags_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]c_int,*anyopaque);
pub const CheckboxFlags = _1_ImGui_CheckboxFlags_;

extern var _1_ImGui_InvisibleButton_: * details::function([*c]bool (ImGui_Context,[*c]const u8,f64,f64, details::optional(c_int)*anyopaque);
pub const InvisibleButton = _1_ImGui_InvisibleButton_;

extern var _1_ImGui_PopButtonRepeat_: * details::function(*anyopaque);
pub const PopButtonRepeat = _1_ImGui_PopButtonRepeat_;

extern var _1_ImGui_PushButtonRepeat_: * details::function([*c]void (ImGui_Context,*anyopaque);
pub const PushButtonRepeat = _1_ImGui_PushButtonRepeat_;

extern var _1_ImGui_RadioButton_: * details::function([*c]bool (ImGui_Context,[*c]const u8,*anyopaque);
pub const RadioButton = _1_ImGui_RadioButton_;

extern var _1_ImGui_RadioButtonEx_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]c_int,*anyopaque);
pub const RadioButtonEx = _1_ImGui_RadioButtonEx_;

extern var _1_ImGui_SmallButton_: * details::function([*c]bool (ImGui_Context,*anyopaque);
pub const SmallButton = _1_ImGui_SmallButton_;

extern var _1_ImGui_Dir_Down_: * c_int;
pub const Dir_Down = _1_ImGui_Dir_Down_;

extern var _1_ImGui_Dir_Left_: * c_int;
pub const Dir_Left = _1_ImGui_Dir_Left_;

extern var _1_ImGui_Dir_None_: * c_int;
pub const Dir_None = _1_ImGui_Dir_None_;

extern var _1_ImGui_Dir_Right_: * c_int;
pub const Dir_Right = _1_ImGui_Dir_Right_;

extern var _1_ImGui_Dir_Up_: * c_int;
pub const Dir_Up = _1_ImGui_Dir_Up_;

extern var _1_ImGui_ButtonFlags_MouseButtonLeft_: * c_int;
pub const ButtonFlags_MouseButtonLeft = _1_ImGui_ButtonFlags_MouseButtonLeft_;

extern var _1_ImGui_ButtonFlags_MouseButtonMiddle_: * c_int;
pub const ButtonFlags_MouseButtonMiddle = _1_ImGui_ButtonFlags_MouseButtonMiddle_;

extern var _1_ImGui_ButtonFlags_MouseButtonRight_: * c_int;
pub const ButtonFlags_MouseButtonRight = _1_ImGui_ButtonFlags_MouseButtonRight_;

extern var _1_ImGui_ButtonFlags_None_: * c_int;
pub const ButtonFlags_None = _1_ImGui_ButtonFlags_None_;

extern var _1_ImGui_ColorButton_: * details::function([*c]bool (ImGui_Context,[*c]const u8,c_int, details::optional(c_int), details::optional(f64), details::optional(f64)*anyopaque);
pub const ColorButton = _1_ImGui_ColorButton_;

extern var _1_ImGui_ColorEdit3_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]c_int, details::optional(c_int)*anyopaque);
pub const ColorEdit3 = _1_ImGui_ColorEdit3_;

extern var _1_ImGui_ColorEdit4_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]c_int, details::optional(c_int)*anyopaque);
pub const ColorEdit4 = _1_ImGui_ColorEdit4_;

extern var _1_ImGui_ColorPicker3_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]c_int, details::optional(c_int)*anyopaque);
pub const ColorPicker3 = _1_ImGui_ColorPicker3_;

extern var _1_ImGui_ColorPicker4_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]c_int, details::optional(c_int), details::optional(c_int)*anyopaque);
pub const ColorPicker4 = _1_ImGui_ColorPicker4_;

extern var _1_ImGui_SetColorEditOptions_: * details::function([*c]void (ImGui_Context,*anyopaque);
pub const SetColorEditOptions = _1_ImGui_SetColorEditOptions_;

extern var _1_ImGui_ColorEditFlags_NoAlpha_: * c_int;
pub const ColorEditFlags_NoAlpha = _1_ImGui_ColorEditFlags_NoAlpha_;

extern var _1_ImGui_ColorEditFlags_NoBorder_: * c_int;
pub const ColorEditFlags_NoBorder = _1_ImGui_ColorEditFlags_NoBorder_;

extern var _1_ImGui_ColorEditFlags_NoDragDrop_: * c_int;
pub const ColorEditFlags_NoDragDrop = _1_ImGui_ColorEditFlags_NoDragDrop_;

extern var _1_ImGui_ColorEditFlags_NoInputs_: * c_int;
pub const ColorEditFlags_NoInputs = _1_ImGui_ColorEditFlags_NoInputs_;

extern var _1_ImGui_ColorEditFlags_NoLabel_: * c_int;
pub const ColorEditFlags_NoLabel = _1_ImGui_ColorEditFlags_NoLabel_;

extern var _1_ImGui_ColorEditFlags_NoOptions_: * c_int;
pub const ColorEditFlags_NoOptions = _1_ImGui_ColorEditFlags_NoOptions_;

extern var _1_ImGui_ColorEditFlags_NoPicker_: * c_int;
pub const ColorEditFlags_NoPicker = _1_ImGui_ColorEditFlags_NoPicker_;

extern var _1_ImGui_ColorEditFlags_NoSidePreview_: * c_int;
pub const ColorEditFlags_NoSidePreview = _1_ImGui_ColorEditFlags_NoSidePreview_;

extern var _1_ImGui_ColorEditFlags_NoSmallPreview_: * c_int;
pub const ColorEditFlags_NoSmallPreview = _1_ImGui_ColorEditFlags_NoSmallPreview_;

extern var _1_ImGui_ColorEditFlags_NoTooltip_: * c_int;
pub const ColorEditFlags_NoTooltip = _1_ImGui_ColorEditFlags_NoTooltip_;

extern var _1_ImGui_ColorEditFlags_None_: * c_int;
pub const ColorEditFlags_None = _1_ImGui_ColorEditFlags_None_;

extern var _1_ImGui_ColorEditFlags_AlphaBar_: * c_int;
pub const ColorEditFlags_AlphaBar = _1_ImGui_ColorEditFlags_AlphaBar_;

extern var _1_ImGui_ColorEditFlags_AlphaPreview_: * c_int;
pub const ColorEditFlags_AlphaPreview = _1_ImGui_ColorEditFlags_AlphaPreview_;

extern var _1_ImGui_ColorEditFlags_AlphaPreviewHalf_: * c_int;
pub const ColorEditFlags_AlphaPreviewHalf = _1_ImGui_ColorEditFlags_AlphaPreviewHalf_;

extern var _1_ImGui_ColorEditFlags_DisplayHSV_: * c_int;
pub const ColorEditFlags_DisplayHSV = _1_ImGui_ColorEditFlags_DisplayHSV_;

extern var _1_ImGui_ColorEditFlags_DisplayHex_: * c_int;
pub const ColorEditFlags_DisplayHex = _1_ImGui_ColorEditFlags_DisplayHex_;

extern var _1_ImGui_ColorEditFlags_DisplayRGB_: * c_int;
pub const ColorEditFlags_DisplayRGB = _1_ImGui_ColorEditFlags_DisplayRGB_;

extern var _1_ImGui_ColorEditFlags_Float_: * c_int;
pub const ColorEditFlags_Float = _1_ImGui_ColorEditFlags_Float_;

extern var _1_ImGui_ColorEditFlags_InputHSV_: * c_int;
pub const ColorEditFlags_InputHSV = _1_ImGui_ColorEditFlags_InputHSV_;

extern var _1_ImGui_ColorEditFlags_InputRGB_: * c_int;
pub const ColorEditFlags_InputRGB = _1_ImGui_ColorEditFlags_InputRGB_;

extern var _1_ImGui_ColorEditFlags_PickerHueBar_: * c_int;
pub const ColorEditFlags_PickerHueBar = _1_ImGui_ColorEditFlags_PickerHueBar_;

extern var _1_ImGui_ColorEditFlags_PickerHueWheel_: * c_int;
pub const ColorEditFlags_PickerHueWheel = _1_ImGui_ColorEditFlags_PickerHueWheel_;

extern var _1_ImGui_ColorEditFlags_Uint8_: * c_int;
pub const ColorEditFlags_Uint8 = _1_ImGui_ColorEditFlags_Uint8_;

extern var _1_ImGui_BeginCombo_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]const u8, details::optional(c_int)*anyopaque,true);
pub const BeginCombo = _1_ImGui_BeginCombo_;

extern var _1_ImGui_Combo_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]c_int,[*c]const u8,c_int, details::optional(c_int)*anyopaque);
pub const Combo = _1_ImGui_Combo_;

extern var _1_ImGui_ComboFlags_HeightLarge_: * c_int;
pub const ComboFlags_HeightLarge = _1_ImGui_ComboFlags_HeightLarge_;

extern var _1_ImGui_ComboFlags_HeightLargest_: * c_int;
pub const ComboFlags_HeightLargest = _1_ImGui_ComboFlags_HeightLargest_;

extern var _1_ImGui_ComboFlags_HeightRegular_: * c_int;
pub const ComboFlags_HeightRegular = _1_ImGui_ComboFlags_HeightRegular_;

extern var _1_ImGui_ComboFlags_HeightSmall_: * c_int;
pub const ComboFlags_HeightSmall = _1_ImGui_ComboFlags_HeightSmall_;

extern var _1_ImGui_ComboFlags_NoArrowButton_: * c_int;
pub const ComboFlags_NoArrowButton = _1_ImGui_ComboFlags_NoArrowButton_;

extern var _1_ImGui_ComboFlags_NoPreview_: * c_int;
pub const ComboFlags_NoPreview = _1_ImGui_ComboFlags_NoPreview_;

extern var _1_ImGui_ComboFlags_None_: * c_int;
pub const ComboFlags_None = _1_ImGui_ComboFlags_None_;

extern var _1_ImGui_ComboFlags_PopupAlignLeft_: * c_int;
pub const ComboFlags_PopupAlignLeft = _1_ImGui_ComboFlags_PopupAlignLeft_;

extern var _1_ImGui_ComboFlags_WidthFitPreview_: * c_int;
pub const ComboFlags_WidthFitPreview = _1_ImGui_ComboFlags_WidthFitPreview_;

extern var _1_ImGui_EndCombo_: * details::function(*anyopaque);
pub const EndCombo = _1_ImGui_EndCombo_;

extern var _1_ImGui_BeginListBox_: * details::function([*c]bool (ImGui_Context,[*c]const u8, details::optional(f64), details::optional(f64)*anyopaque,true);
pub const BeginListBox = _1_ImGui_BeginListBox_;

extern var _1_ImGui_EndListBox_: * details::function(*anyopaque);
pub const EndListBox = _1_ImGui_EndListBox_;

extern var _1_ImGui_ListBox_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]c_int,[*c]const u8,c_int, details::optional(c_int)*anyopaque);
pub const ListBox = _1_ImGui_ListBox_;

extern var _1_ImGui_Selectable_: * details::function([*c]bool (ImGui_Context,[*c]const u8, details::optional([*c]bool), details::optional(c_int), details::optional(f64), details::optional(f64)*anyopaque);
pub const Selectable = _1_ImGui_Selectable_;

extern var _1_ImGui_SelectableFlags_AllowDoubleClick_: * c_int;
pub const SelectableFlags_AllowDoubleClick = _1_ImGui_SelectableFlags_AllowDoubleClick_;

extern var _1_ImGui_SelectableFlags_AllowOverlap_: * c_int;
pub const SelectableFlags_AllowOverlap = _1_ImGui_SelectableFlags_AllowOverlap_;

extern var _1_ImGui_SelectableFlags_Disabled_: * c_int;
pub const SelectableFlags_Disabled = _1_ImGui_SelectableFlags_Disabled_;

extern var _1_ImGui_SelectableFlags_DontClosePopups_: * c_int;
pub const SelectableFlags_DontClosePopups = _1_ImGui_SelectableFlags_DontClosePopups_;

extern var _1_ImGui_SelectableFlags_None_: * c_int;
pub const SelectableFlags_None = _1_ImGui_SelectableFlags_None_;

extern var _1_ImGui_SelectableFlags_SpanAllColumns_: * c_int;
pub const SelectableFlags_SpanAllColumns = _1_ImGui_SelectableFlags_SpanAllColumns_;

extern var _1_ImGui_Attach_: * details::function([*c]void (ImGui_Context,*anyopaque);
pub const Attach = _1_ImGui_Attach_;

extern var _1_ImGui_CreateContext_: * details::function([*c]ImGui_Context *(const char, details::optional(c_int)*anyopaque,true);
pub const CreateContext = _1_ImGui_CreateContext_;

extern var _1_ImGui_Detach_: * details::function([*c]void (ImGui_Context,*anyopaque);
pub const Detach = _1_ImGui_Detach_;

extern var _1_ImGui_GetDeltaTime_: * details::function(*anyopaque);
pub const GetDeltaTime = _1_ImGui_GetDeltaTime_;

extern var _1_ImGui_GetFrameCount_: * details::function(*anyopaque);
pub const GetFrameCount = _1_ImGui_GetFrameCount_;

extern var _1_ImGui_GetFramerate_: * details::function(*anyopaque);
pub const GetFramerate = _1_ImGui_GetFramerate_;

extern var _1_ImGui_GetTime_: * details::function(*anyopaque);
pub const GetTime = _1_ImGui_GetTime_;

extern var _1_ImGui_ConfigFlags_DockingEnable_: * c_int;
pub const ConfigFlags_DockingEnable = _1_ImGui_ConfigFlags_DockingEnable_;

extern var _1_ImGui_ConfigFlags_NavEnableKeyboard_: * c_int;
pub const ConfigFlags_NavEnableKeyboard = _1_ImGui_ConfigFlags_NavEnableKeyboard_;

extern var _1_ImGui_ConfigFlags_NavEnableSetMousePos_: * c_int;
pub const ConfigFlags_NavEnableSetMousePos = _1_ImGui_ConfigFlags_NavEnableSetMousePos_;

extern var _1_ImGui_ConfigFlags_NavNoCaptureKeyboard_: * c_int;
pub const ConfigFlags_NavNoCaptureKeyboard = _1_ImGui_ConfigFlags_NavNoCaptureKeyboard_;

extern var _1_ImGui_ConfigFlags_NoMouse_: * c_int;
pub const ConfigFlags_NoMouse = _1_ImGui_ConfigFlags_NoMouse_;

extern var _1_ImGui_ConfigFlags_NoMouseCursorChange_: * c_int;
pub const ConfigFlags_NoMouseCursorChange = _1_ImGui_ConfigFlags_NoMouseCursorChange_;

extern var _1_ImGui_ConfigFlags_NoSavedSettings_: * c_int;
pub const ConfigFlags_NoSavedSettings = _1_ImGui_ConfigFlags_NoSavedSettings_;

extern var _1_ImGui_ConfigFlags_None_: * c_int;
pub const ConfigFlags_None = _1_ImGui_ConfigFlags_None_;

extern var _1_ImGui_ConfigVar_DebugBeginReturnValueLoop_: * c_int;
pub const ConfigVar_DebugBeginReturnValueLoop = _1_ImGui_ConfigVar_DebugBeginReturnValueLoop_;

extern var _1_ImGui_ConfigVar_DebugBeginReturnValueOnce_: * c_int;
pub const ConfigVar_DebugBeginReturnValueOnce = _1_ImGui_ConfigVar_DebugBeginReturnValueOnce_;

extern var _1_ImGui_ConfigVar_DockingNoSplit_: * c_int;
pub const ConfigVar_DockingNoSplit = _1_ImGui_ConfigVar_DockingNoSplit_;

extern var _1_ImGui_ConfigVar_DockingTransparentPayload_: * c_int;
pub const ConfigVar_DockingTransparentPayload = _1_ImGui_ConfigVar_DockingTransparentPayload_;

extern var _1_ImGui_ConfigVar_DockingWithShift_: * c_int;
pub const ConfigVar_DockingWithShift = _1_ImGui_ConfigVar_DockingWithShift_;

extern var _1_ImGui_ConfigVar_DragClickToInputText_: * c_int;
pub const ConfigVar_DragClickToInputText = _1_ImGui_ConfigVar_DragClickToInputText_;

extern var _1_ImGui_ConfigVar_Flags_: * c_int;
pub const ConfigVar_Flags = _1_ImGui_ConfigVar_Flags_;

extern var _1_ImGui_ConfigVar_HoverDelayNormal_: * c_int;
pub const ConfigVar_HoverDelayNormal = _1_ImGui_ConfigVar_HoverDelayNormal_;

extern var _1_ImGui_ConfigVar_HoverDelayShort_: * c_int;
pub const ConfigVar_HoverDelayShort = _1_ImGui_ConfigVar_HoverDelayShort_;

extern var _1_ImGui_ConfigVar_HoverFlagsForTooltipMouse_: * c_int;
pub const ConfigVar_HoverFlagsForTooltipMouse = _1_ImGui_ConfigVar_HoverFlagsForTooltipMouse_;

extern var _1_ImGui_ConfigVar_HoverFlagsForTooltipNav_: * c_int;
pub const ConfigVar_HoverFlagsForTooltipNav = _1_ImGui_ConfigVar_HoverFlagsForTooltipNav_;

extern var _1_ImGui_ConfigVar_HoverStationaryDelay_: * c_int;
pub const ConfigVar_HoverStationaryDelay = _1_ImGui_ConfigVar_HoverStationaryDelay_;

extern var _1_ImGui_ConfigVar_InputTextCursorBlink_: * c_int;
pub const ConfigVar_InputTextCursorBlink = _1_ImGui_ConfigVar_InputTextCursorBlink_;

extern var _1_ImGui_ConfigVar_InputTextEnterKeepActive_: * c_int;
pub const ConfigVar_InputTextEnterKeepActive = _1_ImGui_ConfigVar_InputTextEnterKeepActive_;

extern var _1_ImGui_ConfigVar_InputTrickleEventQueue_: * c_int;
pub const ConfigVar_InputTrickleEventQueue = _1_ImGui_ConfigVar_InputTrickleEventQueue_;

extern var _1_ImGui_ConfigVar_KeyRepeatDelay_: * c_int;
pub const ConfigVar_KeyRepeatDelay = _1_ImGui_ConfigVar_KeyRepeatDelay_;

extern var _1_ImGui_ConfigVar_KeyRepeatRate_: * c_int;
pub const ConfigVar_KeyRepeatRate = _1_ImGui_ConfigVar_KeyRepeatRate_;

extern var _1_ImGui_ConfigVar_MacOSXBehaviors_: * c_int;
pub const ConfigVar_MacOSXBehaviors = _1_ImGui_ConfigVar_MacOSXBehaviors_;

extern var _1_ImGui_ConfigVar_MouseDoubleClickMaxDist_: * c_int;
pub const ConfigVar_MouseDoubleClickMaxDist = _1_ImGui_ConfigVar_MouseDoubleClickMaxDist_;

extern var _1_ImGui_ConfigVar_MouseDoubleClickTime_: * c_int;
pub const ConfigVar_MouseDoubleClickTime = _1_ImGui_ConfigVar_MouseDoubleClickTime_;

extern var _1_ImGui_ConfigVar_MouseDragThreshold_: * c_int;
pub const ConfigVar_MouseDragThreshold = _1_ImGui_ConfigVar_MouseDragThreshold_;

extern var _1_ImGui_ConfigVar_ViewportsNoDecoration_: * c_int;
pub const ConfigVar_ViewportsNoDecoration = _1_ImGui_ConfigVar_ViewportsNoDecoration_;

extern var _1_ImGui_ConfigVar_WindowsMoveFromTitleBarOnly_: * c_int;
pub const ConfigVar_WindowsMoveFromTitleBarOnly = _1_ImGui_ConfigVar_WindowsMoveFromTitleBarOnly_;

extern var _1_ImGui_ConfigVar_WindowsResizeFromEdges_: * c_int;
pub const ConfigVar_WindowsResizeFromEdges = _1_ImGui_ConfigVar_WindowsResizeFromEdges_;

extern var _1_ImGui_GetConfigVar_: * details::function([*c]double (ImGui_Context,*anyopaque);
pub const GetConfigVar = _1_ImGui_GetConfigVar_;

extern var _1_ImGui_SetConfigVar_: * details::function([*c]void (ImGui_Context,c_int,*anyopaque);
pub const SetConfigVar = _1_ImGui_SetConfigVar_;

extern var _1_ImGui_AcceptDragDropPayload_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]u8,c_int, details::optional(c_int)*anyopaque);
pub const AcceptDragDropPayload = _1_ImGui_AcceptDragDropPayload_;

extern var _1_ImGui_AcceptDragDropPayloadFiles_: * details::function([*c]bool (ImGui_Context,[*c]c_int, details::optional(c_int)*anyopaque);
pub const AcceptDragDropPayloadFiles = _1_ImGui_AcceptDragDropPayloadFiles_;

extern var _1_ImGui_AcceptDragDropPayloadRGB_: * details::function([*c]bool (ImGui_Context,[*c]c_int, details::optional(c_int)*anyopaque);
pub const AcceptDragDropPayloadRGB = _1_ImGui_AcceptDragDropPayloadRGB_;

extern var _1_ImGui_AcceptDragDropPayloadRGBA_: * details::function([*c]bool (ImGui_Context,[*c]c_int, details::optional(c_int)*anyopaque);
pub const AcceptDragDropPayloadRGBA = _1_ImGui_AcceptDragDropPayloadRGBA_;

extern var _1_ImGui_BeginDragDropSource_: * details::function([*c]bool (ImGui_Context, details::optional(c_int)*anyopaque,true);
pub const BeginDragDropSource = _1_ImGui_BeginDragDropSource_;

extern var _1_ImGui_BeginDragDropTarget_: * details::function(*anyopaque,true);
pub const BeginDragDropTarget = _1_ImGui_BeginDragDropTarget_;

extern var _1_ImGui_EndDragDropSource_: * details::function(*anyopaque);
pub const EndDragDropSource = _1_ImGui_EndDragDropSource_;

extern var _1_ImGui_EndDragDropTarget_: * details::function(*anyopaque);
pub const EndDragDropTarget = _1_ImGui_EndDragDropTarget_;

extern var _1_ImGui_GetDragDropPayload_: * details::function([*c]bool (ImGui_Context,[*c]u8,c_int,[*c]u8,c_int,[*c]bool,*anyopaque);
pub const GetDragDropPayload = _1_ImGui_GetDragDropPayload_;

extern var _1_ImGui_GetDragDropPayloadFile_: * details::function([*c]bool (ImGui_Context,c_int,[*c]u8,*anyopaque);
pub const GetDragDropPayloadFile = _1_ImGui_GetDragDropPayloadFile_;

extern var _1_ImGui_SetDragDropPayload_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]const u8, details::optional(c_int)*anyopaque);
pub const SetDragDropPayload = _1_ImGui_SetDragDropPayload_;

extern var _1_ImGui_DragDropFlags_None_: * c_int;
pub const DragDropFlags_None = _1_ImGui_DragDropFlags_None_;

extern var _1_ImGui_DragDropFlags_AcceptBeforeDelivery_: * c_int;
pub const DragDropFlags_AcceptBeforeDelivery = _1_ImGui_DragDropFlags_AcceptBeforeDelivery_;

extern var _1_ImGui_DragDropFlags_AcceptNoDrawDefaultRect_: * c_int;
pub const DragDropFlags_AcceptNoDrawDefaultRect = _1_ImGui_DragDropFlags_AcceptNoDrawDefaultRect_;

extern var _1_ImGui_DragDropFlags_AcceptNoPreviewTooltip_: * c_int;
pub const DragDropFlags_AcceptNoPreviewTooltip = _1_ImGui_DragDropFlags_AcceptNoPreviewTooltip_;

extern var _1_ImGui_DragDropFlags_AcceptPeekOnly_: * c_int;
pub const DragDropFlags_AcceptPeekOnly = _1_ImGui_DragDropFlags_AcceptPeekOnly_;

extern var _1_ImGui_DragDropFlags_SourceAllowNullID_: * c_int;
pub const DragDropFlags_SourceAllowNullID = _1_ImGui_DragDropFlags_SourceAllowNullID_;

extern var _1_ImGui_DragDropFlags_SourceAutoExpirePayload_: * c_int;
pub const DragDropFlags_SourceAutoExpirePayload = _1_ImGui_DragDropFlags_SourceAutoExpirePayload_;

extern var _1_ImGui_DragDropFlags_SourceExtern_: * c_int;
pub const DragDropFlags_SourceExtern = _1_ImGui_DragDropFlags_SourceExtern_;

extern var _1_ImGui_DragDropFlags_SourceNoDisableHover_: * c_int;
pub const DragDropFlags_SourceNoDisableHover = _1_ImGui_DragDropFlags_SourceNoDisableHover_;

extern var _1_ImGui_DragDropFlags_SourceNoHoldToOpenOthers_: * c_int;
pub const DragDropFlags_SourceNoHoldToOpenOthers = _1_ImGui_DragDropFlags_SourceNoHoldToOpenOthers_;

extern var _1_ImGui_DragDropFlags_SourceNoPreviewTooltip_: * c_int;
pub const DragDropFlags_SourceNoPreviewTooltip = _1_ImGui_DragDropFlags_SourceNoPreviewTooltip_;

extern var _1_ImGui_DragDouble_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]f64, details::optional(f64), details::optional(f64), details::optional(f64), details::optional([*c]const u8), details::optional(c_int)*anyopaque);
pub const DragDouble = _1_ImGui_DragDouble_;

extern var _1_ImGui_DragDouble2_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]f64,[*c]f64, details::optional(f64), details::optional(f64), details::optional(f64), details::optional([*c]const u8), details::optional(c_int)*anyopaque);
pub const DragDouble2 = _1_ImGui_DragDouble2_;

extern var _1_ImGui_DragDouble3_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]f64,[*c]f64,[*c]f64, details::optional(f64), details::optional(f64), details::optional(f64), details::optional([*c]const u8), details::optional(c_int)*anyopaque);
pub const DragDouble3 = _1_ImGui_DragDouble3_;

extern var _1_ImGui_DragDouble4_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]f64,[*c]f64,[*c]f64,[*c]f64, details::optional(f64), details::optional(f64), details::optional(f64), details::optional([*c]const u8), details::optional(c_int)*anyopaque);
pub const DragDouble4 = _1_ImGui_DragDouble4_;

extern var _1_ImGui_DragDoubleN_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]reaper_array, details::optional(f64), details::optional(f64), details::optional(f64), details::optional([*c]const u8), details::optional(c_int)*anyopaque);
pub const DragDoubleN = _1_ImGui_DragDoubleN_;

extern var _1_ImGui_DragFloatRange2_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]f64,[*c]f64, details::optional(f64), details::optional(f64), details::optional(f64), details::optional([*c]const u8), details::optional([*c]const u8), details::optional(c_int)*anyopaque);
pub const DragFloatRange2 = _1_ImGui_DragFloatRange2_;

extern var _1_ImGui_DragInt_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]c_int, details::optional(f64), details::optional(c_int), details::optional(c_int), details::optional([*c]const u8), details::optional(c_int)*anyopaque);
pub const DragInt = _1_ImGui_DragInt_;

extern var _1_ImGui_DragInt2_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]c_int,[*c]c_int, details::optional(f64), details::optional(c_int), details::optional(c_int), details::optional([*c]const u8), details::optional(c_int)*anyopaque);
pub const DragInt2 = _1_ImGui_DragInt2_;

extern var _1_ImGui_DragInt3_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]c_int,[*c]c_int,[*c]c_int, details::optional(f64), details::optional(c_int), details::optional(c_int), details::optional([*c]const u8), details::optional(c_int)*anyopaque);
pub const DragInt3 = _1_ImGui_DragInt3_;

extern var _1_ImGui_DragInt4_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]c_int,[*c]c_int,[*c]c_int,[*c]c_int, details::optional(f64), details::optional(c_int), details::optional(c_int), details::optional([*c]const u8), details::optional(c_int)*anyopaque);
pub const DragInt4 = _1_ImGui_DragInt4_;

extern var _1_ImGui_DragIntRange2_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]c_int,[*c]c_int, details::optional(f64), details::optional(c_int), details::optional(c_int), details::optional([*c]const u8), details::optional([*c]const u8), details::optional(c_int)*anyopaque);
pub const DragIntRange2 = _1_ImGui_DragIntRange2_;

extern var _1_ImGui_SliderFlags_AlwaysClamp_: * c_int;
pub const SliderFlags_AlwaysClamp = _1_ImGui_SliderFlags_AlwaysClamp_;

extern var _1_ImGui_SliderFlags_Logarithmic_: * c_int;
pub const SliderFlags_Logarithmic = _1_ImGui_SliderFlags_Logarithmic_;

extern var _1_ImGui_SliderFlags_NoInput_: * c_int;
pub const SliderFlags_NoInput = _1_ImGui_SliderFlags_NoInput_;

extern var _1_ImGui_SliderFlags_NoRoundToFormat_: * c_int;
pub const SliderFlags_NoRoundToFormat = _1_ImGui_SliderFlags_NoRoundToFormat_;

extern var _1_ImGui_SliderFlags_None_: * c_int;
pub const SliderFlags_None = _1_ImGui_SliderFlags_None_;

extern var _1_ImGui_SliderAngle_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]f64, details::optional(f64), details::optional(f64), details::optional([*c]const u8), details::optional(c_int)*anyopaque);
pub const SliderAngle = _1_ImGui_SliderAngle_;

extern var _1_ImGui_SliderDouble_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]f64,f64,f64, details::optional([*c]const u8), details::optional(c_int)*anyopaque);
pub const SliderDouble = _1_ImGui_SliderDouble_;

extern var _1_ImGui_SliderDouble2_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]f64,[*c]f64,f64,f64, details::optional([*c]const u8), details::optional(c_int)*anyopaque);
pub const SliderDouble2 = _1_ImGui_SliderDouble2_;

extern var _1_ImGui_SliderDouble3_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]f64,[*c]f64,[*c]f64,f64,f64, details::optional([*c]const u8), details::optional(c_int)*anyopaque);
pub const SliderDouble3 = _1_ImGui_SliderDouble3_;

extern var _1_ImGui_SliderDouble4_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]f64,[*c]f64,[*c]f64,[*c]f64,f64,f64, details::optional([*c]const u8), details::optional(c_int)*anyopaque);
pub const SliderDouble4 = _1_ImGui_SliderDouble4_;

extern var _1_ImGui_SliderDoubleN_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]reaper_array,f64,f64, details::optional([*c]const u8), details::optional(c_int)*anyopaque);
pub const SliderDoubleN = _1_ImGui_SliderDoubleN_;

extern var _1_ImGui_SliderInt_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]c_int,c_int,c_int, details::optional([*c]const u8), details::optional(c_int)*anyopaque);
pub const SliderInt = _1_ImGui_SliderInt_;

extern var _1_ImGui_SliderInt2_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]c_int,[*c]c_int,c_int,c_int, details::optional([*c]const u8), details::optional(c_int)*anyopaque);
pub const SliderInt2 = _1_ImGui_SliderInt2_;

extern var _1_ImGui_SliderInt3_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]c_int,[*c]c_int,[*c]c_int,c_int,c_int, details::optional([*c]const u8), details::optional(c_int)*anyopaque);
pub const SliderInt3 = _1_ImGui_SliderInt3_;

extern var _1_ImGui_SliderInt4_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]c_int,[*c]c_int,[*c]c_int,[*c]c_int,c_int,c_int, details::optional([*c]const u8), details::optional(c_int)*anyopaque);
pub const SliderInt4 = _1_ImGui_SliderInt4_;

extern var _1_ImGui_VSliderDouble_: * details::function([*c]bool (ImGui_Context,[*c]const u8,f64,f64,[*c]f64,f64,f64, details::optional([*c]const u8), details::optional(c_int)*anyopaque);
pub const VSliderDouble = _1_ImGui_VSliderDouble_;

extern var _1_ImGui_VSliderInt_: * details::function([*c]bool (ImGui_Context,[*c]const u8,f64,f64,[*c]c_int,c_int,c_int, details::optional([*c]const u8), details::optional(c_int)*anyopaque);
pub const VSliderInt = _1_ImGui_VSliderInt_;

extern var _1_ImGui_DrawFlags_Closed_: * c_int;
pub const DrawFlags_Closed = _1_ImGui_DrawFlags_Closed_;

extern var _1_ImGui_DrawFlags_None_: * c_int;
pub const DrawFlags_None = _1_ImGui_DrawFlags_None_;

extern var _1_ImGui_DrawFlags_RoundCornersAll_: * c_int;
pub const DrawFlags_RoundCornersAll = _1_ImGui_DrawFlags_RoundCornersAll_;

extern var _1_ImGui_DrawFlags_RoundCornersBottom_: * c_int;
pub const DrawFlags_RoundCornersBottom = _1_ImGui_DrawFlags_RoundCornersBottom_;

extern var _1_ImGui_DrawFlags_RoundCornersBottomLeft_: * c_int;
pub const DrawFlags_RoundCornersBottomLeft = _1_ImGui_DrawFlags_RoundCornersBottomLeft_;

extern var _1_ImGui_DrawFlags_RoundCornersBottomRight_: * c_int;
pub const DrawFlags_RoundCornersBottomRight = _1_ImGui_DrawFlags_RoundCornersBottomRight_;

extern var _1_ImGui_DrawFlags_RoundCornersLeft_: * c_int;
pub const DrawFlags_RoundCornersLeft = _1_ImGui_DrawFlags_RoundCornersLeft_;

extern var _1_ImGui_DrawFlags_RoundCornersNone_: * c_int;
pub const DrawFlags_RoundCornersNone = _1_ImGui_DrawFlags_RoundCornersNone_;

extern var _1_ImGui_DrawFlags_RoundCornersRight_: * c_int;
pub const DrawFlags_RoundCornersRight = _1_ImGui_DrawFlags_RoundCornersRight_;

extern var _1_ImGui_DrawFlags_RoundCornersTop_: * c_int;
pub const DrawFlags_RoundCornersTop = _1_ImGui_DrawFlags_RoundCornersTop_;

extern var _1_ImGui_DrawFlags_RoundCornersTopLeft_: * c_int;
pub const DrawFlags_RoundCornersTopLeft = _1_ImGui_DrawFlags_RoundCornersTopLeft_;

extern var _1_ImGui_DrawFlags_RoundCornersTopRight_: * c_int;
pub const DrawFlags_RoundCornersTopRight = _1_ImGui_DrawFlags_RoundCornersTopRight_;

extern var _1_ImGui_DrawList_PopClipRect_: * details::function(*anyopaque);
pub const DrawList_PopClipRect = _1_ImGui_DrawList_PopClipRect_;

extern var _1_ImGui_DrawList_PushClipRect_: * details::function([*c]void (ImGui_DrawList,f64,f64,f64,f64, details::optional(bool)*anyopaque);
pub const DrawList_PushClipRect = _1_ImGui_DrawList_PushClipRect_;

extern var _1_ImGui_DrawList_PushClipRectFullScreen_: * details::function(*anyopaque);
pub const DrawList_PushClipRectFullScreen = _1_ImGui_DrawList_PushClipRectFullScreen_;

extern var _1_ImGui_GetBackgroundDrawList_: * details::function(*anyopaque);
pub const GetBackgroundDrawList = _1_ImGui_GetBackgroundDrawList_;

extern var _1_ImGui_GetForegroundDrawList_: * details::function(*anyopaque);
pub const GetForegroundDrawList = _1_ImGui_GetForegroundDrawList_;

extern var _1_ImGui_GetWindowDrawList_: * details::function(*anyopaque);
pub const GetWindowDrawList = _1_ImGui_GetWindowDrawList_;

extern var _1_ImGui_DrawList_AddBezierCubic_: * details::function([*c]void (ImGui_DrawList,f64,f64,f64,f64,f64,f64,f64,f64,c_int,f64, details::optional(c_int)*anyopaque);
pub const DrawList_AddBezierCubic = _1_ImGui_DrawList_AddBezierCubic_;

extern var _1_ImGui_DrawList_AddBezierQuadratic_: * details::function([*c]void (ImGui_DrawList,f64,f64,f64,f64,f64,f64,c_int,f64, details::optional(c_int)*anyopaque);
pub const DrawList_AddBezierQuadratic = _1_ImGui_DrawList_AddBezierQuadratic_;

extern var _1_ImGui_DrawList_AddCircle_: * details::function([*c]void (ImGui_DrawList,f64,f64,f64,c_int, details::optional(c_int), details::optional(f64)*anyopaque);
pub const DrawList_AddCircle = _1_ImGui_DrawList_AddCircle_;

extern var _1_ImGui_DrawList_AddCircleFilled_: * details::function([*c]void (ImGui_DrawList,f64,f64,f64,c_int, details::optional(c_int)*anyopaque);
pub const DrawList_AddCircleFilled = _1_ImGui_DrawList_AddCircleFilled_;

extern var _1_ImGui_DrawList_AddConcavePolyFilled_: * details::function([*c]void (ImGui_DrawList,[*c]reaper_array,*anyopaque);
pub const DrawList_AddConcavePolyFilled = _1_ImGui_DrawList_AddConcavePolyFilled_;

extern var _1_ImGui_DrawList_AddConvexPolyFilled_: * details::function([*c]void (ImGui_DrawList,[*c]reaper_array,*anyopaque);
pub const DrawList_AddConvexPolyFilled = _1_ImGui_DrawList_AddConvexPolyFilled_;

extern var _1_ImGui_DrawList_AddEllipse_: * details::function([*c]void (ImGui_DrawList,f64,f64,f64,f64,c_int, details::optional(f64), details::optional(c_int), details::optional(f64)*anyopaque);
pub const DrawList_AddEllipse = _1_ImGui_DrawList_AddEllipse_;

extern var _1_ImGui_DrawList_AddEllipseFilled_: * details::function([*c]void (ImGui_DrawList,f64,f64,f64,f64,c_int, details::optional(f64), details::optional(c_int)*anyopaque);
pub const DrawList_AddEllipseFilled = _1_ImGui_DrawList_AddEllipseFilled_;

extern var _1_ImGui_DrawList_AddImage_: * details::function([*c]void (ImGui_DrawList,[*c]ImGui_Image,f64,f64,f64,f64, details::optional(f64), details::optional(f64), details::optional(f64), details::optional(f64), details::optional(c_int)*anyopaque);
pub const DrawList_AddImage = _1_ImGui_DrawList_AddImage_;

extern var _1_ImGui_DrawList_AddImageQuad_: * details::function([*c]void (ImGui_DrawList,[*c]ImGui_Image,f64,f64,f64,f64,f64,f64,f64,f64, details::optional(f64), details::optional(f64), details::optional(f64), details::optional(f64), details::optional(f64), details::optional(f64), details::optional(f64), details::optional(f64), details::optional(c_int)*anyopaque);
pub const DrawList_AddImageQuad = _1_ImGui_DrawList_AddImageQuad_;

extern var _1_ImGui_DrawList_AddImageRounded_: * details::function([*c]void (ImGui_DrawList,[*c]ImGui_Image,f64,f64,f64,f64,f64,f64,f64,f64,c_int,f64, details::optional(c_int)*anyopaque);
pub const DrawList_AddImageRounded = _1_ImGui_DrawList_AddImageRounded_;

extern var _1_ImGui_DrawList_AddLine_: * details::function([*c]void (ImGui_DrawList,f64,f64,f64,f64,c_int, details::optional(f64)*anyopaque);
pub const DrawList_AddLine = _1_ImGui_DrawList_AddLine_;

extern var _1_ImGui_DrawList_AddNgon_: * details::function([*c]void (ImGui_DrawList,f64,f64,f64,c_int,c_int, details::optional(f64)*anyopaque);
pub const DrawList_AddNgon = _1_ImGui_DrawList_AddNgon_;

extern var _1_ImGui_DrawList_AddNgonFilled_: * details::function([*c]void (ImGui_DrawList,f64,f64,f64,c_int,*anyopaque);
pub const DrawList_AddNgonFilled = _1_ImGui_DrawList_AddNgonFilled_;

extern var _1_ImGui_DrawList_AddPolyline_: * details::function([*c]void (ImGui_DrawList,[*c]reaper_array,c_int,c_int,*anyopaque);
pub const DrawList_AddPolyline = _1_ImGui_DrawList_AddPolyline_;

extern var _1_ImGui_DrawList_AddQuad_: * details::function([*c]void (ImGui_DrawList,f64,f64,f64,f64,f64,f64,f64,f64,c_int, details::optional(f64)*anyopaque);
pub const DrawList_AddQuad = _1_ImGui_DrawList_AddQuad_;

extern var _1_ImGui_DrawList_AddQuadFilled_: * details::function([*c]void (ImGui_DrawList,f64,f64,f64,f64,f64,f64,f64,f64,*anyopaque);
pub const DrawList_AddQuadFilled = _1_ImGui_DrawList_AddQuadFilled_;

extern var _1_ImGui_DrawList_AddRect_: * details::function([*c]void (ImGui_DrawList,f64,f64,f64,f64,c_int, details::optional(f64), details::optional(c_int), details::optional(f64)*anyopaque);
pub const DrawList_AddRect = _1_ImGui_DrawList_AddRect_;

extern var _1_ImGui_DrawList_AddRectFilled_: * details::function([*c]void (ImGui_DrawList,f64,f64,f64,f64,c_int, details::optional(f64), details::optional(c_int)*anyopaque);
pub const DrawList_AddRectFilled = _1_ImGui_DrawList_AddRectFilled_;

extern var _1_ImGui_DrawList_AddRectFilledMultiColor_: * details::function([*c]void (ImGui_DrawList,f64,f64,f64,f64,c_int,c_int,c_int,*anyopaque);
pub const DrawList_AddRectFilledMultiColor = _1_ImGui_DrawList_AddRectFilledMultiColor_;

extern var _1_ImGui_DrawList_AddText_: * details::function([*c]void (ImGui_DrawList,f64,f64,c_int,*anyopaque);
pub const DrawList_AddText = _1_ImGui_DrawList_AddText_;

extern var _1_ImGui_DrawList_AddTextEx_: * details::function([*c]void (ImGui_DrawList,[*c]ImGui_Font,f64,f64,f64,c_int,[*c]const u8, details::optional(f64), details::optional(f64), details::optional(f64), details::optional(f64), details::optional(f64)*anyopaque);
pub const DrawList_AddTextEx = _1_ImGui_DrawList_AddTextEx_;

extern var _1_ImGui_DrawList_AddTriangle_: * details::function([*c]void (ImGui_DrawList,f64,f64,f64,f64,f64,f64,c_int, details::optional(f64)*anyopaque);
pub const DrawList_AddTriangle = _1_ImGui_DrawList_AddTriangle_;

extern var _1_ImGui_DrawList_AddTriangleFilled_: * details::function([*c]void (ImGui_DrawList,f64,f64,f64,f64,f64,f64,*anyopaque);
pub const DrawList_AddTriangleFilled = _1_ImGui_DrawList_AddTriangleFilled_;

extern var _1_ImGui_CreateDrawListSplitter_: * details::function(*anyopaque,true);
pub const CreateDrawListSplitter = _1_ImGui_CreateDrawListSplitter_;

extern var _1_ImGui_DrawListSplitter_Clear_: * details::function(*anyopaque);
pub const DrawListSplitter_Clear = _1_ImGui_DrawListSplitter_Clear_;

extern var _1_ImGui_DrawListSplitter_Merge_: * details::function(*anyopaque);
pub const DrawListSplitter_Merge = _1_ImGui_DrawListSplitter_Merge_;

extern var _1_ImGui_DrawListSplitter_SetCurrentChannel_: * details::function([*c]void (ImGui_DrawListSplitter,*anyopaque);
pub const DrawListSplitter_SetCurrentChannel = _1_ImGui_DrawListSplitter_SetCurrentChannel_;

extern var _1_ImGui_DrawListSplitter_Split_: * details::function([*c]void (ImGui_DrawListSplitter,*anyopaque);
pub const DrawListSplitter_Split = _1_ImGui_DrawListSplitter_Split_;

extern var _1_ImGui_DrawList_PathArcTo_: * details::function([*c]void (ImGui_DrawList,f64,f64,f64,f64,f64, details::optional(c_int)*anyopaque);
pub const DrawList_PathArcTo = _1_ImGui_DrawList_PathArcTo_;

extern var _1_ImGui_DrawList_PathArcToFast_: * details::function([*c]void (ImGui_DrawList,f64,f64,f64,c_int,*anyopaque);
pub const DrawList_PathArcToFast = _1_ImGui_DrawList_PathArcToFast_;

extern var _1_ImGui_DrawList_PathBezierCubicCurveTo_: * details::function([*c]void (ImGui_DrawList,f64,f64,f64,f64,f64,f64, details::optional(c_int)*anyopaque);
pub const DrawList_PathBezierCubicCurveTo = _1_ImGui_DrawList_PathBezierCubicCurveTo_;

extern var _1_ImGui_DrawList_PathBezierQuadraticCurveTo_: * details::function([*c]void (ImGui_DrawList,f64,f64,f64,f64, details::optional(c_int)*anyopaque);
pub const DrawList_PathBezierQuadraticCurveTo = _1_ImGui_DrawList_PathBezierQuadraticCurveTo_;

extern var _1_ImGui_DrawList_PathClear_: * details::function(*anyopaque);
pub const DrawList_PathClear = _1_ImGui_DrawList_PathClear_;

extern var _1_ImGui_DrawList_PathEllipticalArcTo_: * details::function([*c]void (ImGui_DrawList,f64,f64,f64,f64,f64,f64,f64, details::optional(c_int)*anyopaque);
pub const DrawList_PathEllipticalArcTo = _1_ImGui_DrawList_PathEllipticalArcTo_;

extern var _1_ImGui_DrawList_PathFillConcave_: * details::function([*c]void (ImGui_DrawList,*anyopaque);
pub const DrawList_PathFillConcave = _1_ImGui_DrawList_PathFillConcave_;

extern var _1_ImGui_DrawList_PathFillConvex_: * details::function([*c]void (ImGui_DrawList,*anyopaque);
pub const DrawList_PathFillConvex = _1_ImGui_DrawList_PathFillConvex_;

extern var _1_ImGui_DrawList_PathLineTo_: * details::function([*c]void (ImGui_DrawList,f64,*anyopaque);
pub const DrawList_PathLineTo = _1_ImGui_DrawList_PathLineTo_;

extern var _1_ImGui_DrawList_PathRect_: * details::function([*c]void (ImGui_DrawList,f64,f64,f64,f64, details::optional(f64), details::optional(c_int)*anyopaque);
pub const DrawList_PathRect = _1_ImGui_DrawList_PathRect_;

extern var _1_ImGui_DrawList_PathStroke_: * details::function([*c]void (ImGui_DrawList,c_int, details::optional(c_int), details::optional(f64)*anyopaque);
pub const DrawList_PathStroke = _1_ImGui_DrawList_PathStroke_;

extern var _1_ImGui_CreateFont_: * details::function([*c]ImGui_Font *(const char,c_int, details::optional(c_int)*anyopaque,true);
pub const CreateFont = _1_ImGui_CreateFont_;

extern var _1_ImGui_FontFlags_Bold_: * c_int;
pub const FontFlags_Bold = _1_ImGui_FontFlags_Bold_;

extern var _1_ImGui_FontFlags_Italic_: * c_int;
pub const FontFlags_Italic = _1_ImGui_FontFlags_Italic_;

extern var _1_ImGui_FontFlags_None_: * c_int;
pub const FontFlags_None = _1_ImGui_FontFlags_None_;

extern var _1_ImGui_GetFont_: * details::function(*anyopaque);
pub const GetFont = _1_ImGui_GetFont_;

extern var _1_ImGui_GetFontSize_: * details::function(*anyopaque);
pub const GetFontSize = _1_ImGui_GetFontSize_;

extern var _1_ImGui_PopFont_: * details::function(*anyopaque);
pub const PopFont = _1_ImGui_PopFont_;

extern var _1_ImGui_PushFont_: * details::function([*c]void (ImGui_Context,*anyopaque);
pub const PushFont = _1_ImGui_PushFont_;

extern var _1_ImGui_CreateFunctionFromEEL_: * details::function(*anyopaque,true);
pub const CreateFunctionFromEEL = _1_ImGui_CreateFunctionFromEEL_;

extern var _1_ImGui_Function_Execute_: * details::function(*anyopaque);
pub const Function_Execute = _1_ImGui_Function_Execute_;

extern var _1_ImGui_Function_GetValue_: * details::function([*c]double (ImGui_Function,*anyopaque);
pub const Function_GetValue = _1_ImGui_Function_GetValue_;

extern var _1_ImGui_Function_GetValue_Array_: * details::function([*c]void (ImGui_Function,[*c]const u8,*anyopaque);
pub const Function_GetValue_Array = _1_ImGui_Function_GetValue_Array_;

extern var _1_ImGui_Function_GetValue_String_: * details::function([*c]void (ImGui_Function,[*c]const u8,[*c]u8,*anyopaque);
pub const Function_GetValue_String = _1_ImGui_Function_GetValue_String_;

extern var _1_ImGui_Function_SetValue_: * details::function([*c]void (ImGui_Function,[*c]const u8,*anyopaque);
pub const Function_SetValue = _1_ImGui_Function_SetValue_;

extern var _1_ImGui_Function_SetValue_Array_: * details::function([*c]void (ImGui_Function,[*c]const u8,*anyopaque);
pub const Function_SetValue_Array = _1_ImGui_Function_SetValue_Array_;

extern var _1_ImGui_Function_SetValue_String_: * details::function([*c]void (ImGui_Function,[*c]const u8,[*c]const u8,*anyopaque);
pub const Function_SetValue_String = _1_ImGui_Function_SetValue_String_;

extern var _1_ImGui_CreateImage_: * details::function([*c]ImGui_Image *(const char, details::optional(c_int)*anyopaque,true);
pub const CreateImage = _1_ImGui_CreateImage_;

extern var _1_ImGui_CreateImageFromMem_: * details::function([*c]ImGui_Image *(const char,*anyopaque,true);
pub const CreateImageFromMem = _1_ImGui_CreateImageFromMem_;

extern var _1_ImGui_Image_: * details::function([*c]void (ImGui_Context,[*c]ImGui_Image,f64,f64, details::optional(f64), details::optional(f64), details::optional(f64), details::optional(f64), details::optional(c_int), details::optional(c_int)*anyopaque);
pub const Image = _1_ImGui_Image_;

extern var _1_ImGui_ImageButton_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]ImGui_Image,f64,f64, details::optional(f64), details::optional(f64), details::optional(f64), details::optional(f64), details::optional(c_int), details::optional(c_int)*anyopaque);
pub const ImageButton = _1_ImGui_ImageButton_;

extern var _1_ImGui_Image_GetSize_: * details::function([*c]void (ImGui_Image,[*c]f64,*anyopaque);
pub const Image_GetSize = _1_ImGui_Image_GetSize_;

extern var _1_ImGui_CreateImageSet_: * details::function(*anyopaque,true);
pub const CreateImageSet = _1_ImGui_CreateImageSet_;

extern var _1_ImGui_ImageSet_Add_: * details::function([*c]void (ImGui_ImageSet,f64,*anyopaque);
pub const ImageSet_Add = _1_ImGui_ImageSet_Add_;

extern var _1_ImGui_BeginDisabled_: * details::function([*c]void (ImGui_Context, details::optional(bool)*anyopaque);
pub const BeginDisabled = _1_ImGui_BeginDisabled_;

extern var _1_ImGui_DebugStartItemPicker_: * details::function(*anyopaque);
pub const DebugStartItemPicker = _1_ImGui_DebugStartItemPicker_;

extern var _1_ImGui_EndDisabled_: * details::function(*anyopaque);
pub const EndDisabled = _1_ImGui_EndDisabled_;

extern var _1_ImGui_SetNextItemAllowOverlap_: * details::function(*anyopaque);
pub const SetNextItemAllowOverlap = _1_ImGui_SetNextItemAllowOverlap_;

extern var _1_ImGui_CalcItemWidth_: * details::function(*anyopaque);
pub const CalcItemWidth = _1_ImGui_CalcItemWidth_;

extern var _1_ImGui_GetItemRectMax_: * details::function([*c]void (ImGui_Context,[*c]f64,*anyopaque);
pub const GetItemRectMax = _1_ImGui_GetItemRectMax_;

extern var _1_ImGui_GetItemRectMin_: * details::function([*c]void (ImGui_Context,[*c]f64,*anyopaque);
pub const GetItemRectMin = _1_ImGui_GetItemRectMin_;

extern var _1_ImGui_GetItemRectSize_: * details::function([*c]void (ImGui_Context,[*c]f64,*anyopaque);
pub const GetItemRectSize = _1_ImGui_GetItemRectSize_;

extern var _1_ImGui_PopItemWidth_: * details::function(*anyopaque);
pub const PopItemWidth = _1_ImGui_PopItemWidth_;

extern var _1_ImGui_PushItemWidth_: * details::function([*c]void (ImGui_Context,*anyopaque);
pub const PushItemWidth = _1_ImGui_PushItemWidth_;

extern var _1_ImGui_SetNextItemWidth_: * details::function([*c]void (ImGui_Context,*anyopaque);
pub const SetNextItemWidth = _1_ImGui_SetNextItemWidth_;

extern var _1_ImGui_PopTabStop_: * details::function(*anyopaque);
pub const PopTabStop = _1_ImGui_PopTabStop_;

extern var _1_ImGui_PushTabStop_: * details::function([*c]void (ImGui_Context,*anyopaque);
pub const PushTabStop = _1_ImGui_PushTabStop_;

extern var _1_ImGui_SetItemDefaultFocus_: * details::function(*anyopaque);
pub const SetItemDefaultFocus = _1_ImGui_SetItemDefaultFocus_;

extern var _1_ImGui_SetKeyboardFocusHere_: * details::function([*c]void (ImGui_Context, details::optional(c_int)*anyopaque);
pub const SetKeyboardFocusHere = _1_ImGui_SetKeyboardFocusHere_;

extern var _1_ImGui_HoveredFlags_AllowWhenBlockedByActiveItem_: * c_int;
pub const HoveredFlags_AllowWhenBlockedByActiveItem = _1_ImGui_HoveredFlags_AllowWhenBlockedByActiveItem_;

extern var _1_ImGui_HoveredFlags_AllowWhenBlockedByPopup_: * c_int;
pub const HoveredFlags_AllowWhenBlockedByPopup = _1_ImGui_HoveredFlags_AllowWhenBlockedByPopup_;

extern var _1_ImGui_HoveredFlags_ForTooltip_: * c_int;
pub const HoveredFlags_ForTooltip = _1_ImGui_HoveredFlags_ForTooltip_;

extern var _1_ImGui_HoveredFlags_NoNavOverride_: * c_int;
pub const HoveredFlags_NoNavOverride = _1_ImGui_HoveredFlags_NoNavOverride_;

extern var _1_ImGui_HoveredFlags_None_: * c_int;
pub const HoveredFlags_None = _1_ImGui_HoveredFlags_None_;

extern var _1_ImGui_HoveredFlags_Stationary_: * c_int;
pub const HoveredFlags_Stationary = _1_ImGui_HoveredFlags_Stationary_;

extern var _1_ImGui_HoveredFlags_AllowWhenDisabled_: * c_int;
pub const HoveredFlags_AllowWhenDisabled = _1_ImGui_HoveredFlags_AllowWhenDisabled_;

extern var _1_ImGui_HoveredFlags_AllowWhenOverlapped_: * c_int;
pub const HoveredFlags_AllowWhenOverlapped = _1_ImGui_HoveredFlags_AllowWhenOverlapped_;

extern var _1_ImGui_HoveredFlags_AllowWhenOverlappedByItem_: * c_int;
pub const HoveredFlags_AllowWhenOverlappedByItem = _1_ImGui_HoveredFlags_AllowWhenOverlappedByItem_;

extern var _1_ImGui_HoveredFlags_AllowWhenOverlappedByWindow_: * c_int;
pub const HoveredFlags_AllowWhenOverlappedByWindow = _1_ImGui_HoveredFlags_AllowWhenOverlappedByWindow_;

extern var _1_ImGui_HoveredFlags_RectOnly_: * c_int;
pub const HoveredFlags_RectOnly = _1_ImGui_HoveredFlags_RectOnly_;

extern var _1_ImGui_HoveredFlags_DelayNone_: * c_int;
pub const HoveredFlags_DelayNone = _1_ImGui_HoveredFlags_DelayNone_;

extern var _1_ImGui_HoveredFlags_DelayNormal_: * c_int;
pub const HoveredFlags_DelayNormal = _1_ImGui_HoveredFlags_DelayNormal_;

extern var _1_ImGui_HoveredFlags_DelayShort_: * c_int;
pub const HoveredFlags_DelayShort = _1_ImGui_HoveredFlags_DelayShort_;

extern var _1_ImGui_HoveredFlags_NoSharedDelay_: * c_int;
pub const HoveredFlags_NoSharedDelay = _1_ImGui_HoveredFlags_NoSharedDelay_;

extern var _1_ImGui_HoveredFlags_AnyWindow_: * c_int;
pub const HoveredFlags_AnyWindow = _1_ImGui_HoveredFlags_AnyWindow_;

extern var _1_ImGui_HoveredFlags_ChildWindows_: * c_int;
pub const HoveredFlags_ChildWindows = _1_ImGui_HoveredFlags_ChildWindows_;

extern var _1_ImGui_HoveredFlags_DockHierarchy_: * c_int;
pub const HoveredFlags_DockHierarchy = _1_ImGui_HoveredFlags_DockHierarchy_;

extern var _1_ImGui_HoveredFlags_NoPopupHierarchy_: * c_int;
pub const HoveredFlags_NoPopupHierarchy = _1_ImGui_HoveredFlags_NoPopupHierarchy_;

extern var _1_ImGui_HoveredFlags_RootAndChildWindows_: * c_int;
pub const HoveredFlags_RootAndChildWindows = _1_ImGui_HoveredFlags_RootAndChildWindows_;

extern var _1_ImGui_HoveredFlags_RootWindow_: * c_int;
pub const HoveredFlags_RootWindow = _1_ImGui_HoveredFlags_RootWindow_;

extern var _1_ImGui_IsAnyItemActive_: * details::function(*anyopaque);
pub const IsAnyItemActive = _1_ImGui_IsAnyItemActive_;

extern var _1_ImGui_IsAnyItemFocused_: * details::function(*anyopaque);
pub const IsAnyItemFocused = _1_ImGui_IsAnyItemFocused_;

extern var _1_ImGui_IsAnyItemHovered_: * details::function(*anyopaque);
pub const IsAnyItemHovered = _1_ImGui_IsAnyItemHovered_;

extern var _1_ImGui_IsItemActivated_: * details::function(*anyopaque);
pub const IsItemActivated = _1_ImGui_IsItemActivated_;

extern var _1_ImGui_IsItemActive_: * details::function(*anyopaque);
pub const IsItemActive = _1_ImGui_IsItemActive_;

extern var _1_ImGui_IsItemClicked_: * details::function([*c]bool (ImGui_Context, details::optional(c_int)*anyopaque);
pub const IsItemClicked = _1_ImGui_IsItemClicked_;

extern var _1_ImGui_IsItemDeactivated_: * details::function(*anyopaque);
pub const IsItemDeactivated = _1_ImGui_IsItemDeactivated_;

extern var _1_ImGui_IsItemDeactivatedAfterEdit_: * details::function(*anyopaque);
pub const IsItemDeactivatedAfterEdit = _1_ImGui_IsItemDeactivatedAfterEdit_;

extern var _1_ImGui_IsItemEdited_: * details::function(*anyopaque);
pub const IsItemEdited = _1_ImGui_IsItemEdited_;

extern var _1_ImGui_IsItemFocused_: * details::function(*anyopaque);
pub const IsItemFocused = _1_ImGui_IsItemFocused_;

extern var _1_ImGui_IsItemHovered_: * details::function([*c]bool (ImGui_Context, details::optional(c_int)*anyopaque);
pub const IsItemHovered = _1_ImGui_IsItemHovered_;

extern var _1_ImGui_IsItemVisible_: * details::function(*anyopaque);
pub const IsItemVisible = _1_ImGui_IsItemVisible_;

extern var _1_ImGui_GetInputQueueCharacter_: * details::function([*c]bool (ImGui_Context,c_int,*anyopaque);
pub const GetInputQueueCharacter = _1_ImGui_GetInputQueueCharacter_;

extern var _1_ImGui_GetKeyDownDuration_: * details::function([*c]double (ImGui_Context,*anyopaque);
pub const GetKeyDownDuration = _1_ImGui_GetKeyDownDuration_;

extern var _1_ImGui_GetKeyMods_: * details::function(*anyopaque);
pub const GetKeyMods = _1_ImGui_GetKeyMods_;

extern var _1_ImGui_GetKeyPressedAmount_: * details::function([*c]int (ImGui_Context,c_int,f64,*anyopaque);
pub const GetKeyPressedAmount = _1_ImGui_GetKeyPressedAmount_;

extern var _1_ImGui_IsKeyChordPressed_: * details::function([*c]bool (ImGui_Context,*anyopaque);
pub const IsKeyChordPressed = _1_ImGui_IsKeyChordPressed_;

extern var _1_ImGui_IsKeyDown_: * details::function([*c]bool (ImGui_Context,*anyopaque);
pub const IsKeyDown = _1_ImGui_IsKeyDown_;

extern var _1_ImGui_IsKeyPressed_: * details::function([*c]bool (ImGui_Context,c_int, details::optional(bool)*anyopaque);
pub const IsKeyPressed = _1_ImGui_IsKeyPressed_;

extern var _1_ImGui_IsKeyReleased_: * details::function([*c]bool (ImGui_Context,*anyopaque);
pub const IsKeyReleased = _1_ImGui_IsKeyReleased_;

extern var _1_ImGui_SetNextFrameWantCaptureKeyboard_: * details::function([*c]void (ImGui_Context,*anyopaque);
pub const SetNextFrameWantCaptureKeyboard = _1_ImGui_SetNextFrameWantCaptureKeyboard_;

extern var _1_ImGui_Key_0_: * c_int;
pub const Key_0 = _1_ImGui_Key_0_;

extern var _1_ImGui_Key_1_: * c_int;
pub const Key_1 = _1_ImGui_Key_1_;

extern var _1_ImGui_Key_2_: * c_int;
pub const Key_2 = _1_ImGui_Key_2_;

extern var _1_ImGui_Key_3_: * c_int;
pub const Key_3 = _1_ImGui_Key_3_;

extern var _1_ImGui_Key_4_: * c_int;
pub const Key_4 = _1_ImGui_Key_4_;

extern var _1_ImGui_Key_5_: * c_int;
pub const Key_5 = _1_ImGui_Key_5_;

extern var _1_ImGui_Key_6_: * c_int;
pub const Key_6 = _1_ImGui_Key_6_;

extern var _1_ImGui_Key_7_: * c_int;
pub const Key_7 = _1_ImGui_Key_7_;

extern var _1_ImGui_Key_8_: * c_int;
pub const Key_8 = _1_ImGui_Key_8_;

extern var _1_ImGui_Key_9_: * c_int;
pub const Key_9 = _1_ImGui_Key_9_;

extern var _1_ImGui_Key_A_: * c_int;
pub const Key_A = _1_ImGui_Key_A_;

extern var _1_ImGui_Key_Apostrophe_: * c_int;
pub const Key_Apostrophe = _1_ImGui_Key_Apostrophe_;

extern var _1_ImGui_Key_AppBack_: * c_int;
pub const Key_AppBack = _1_ImGui_Key_AppBack_;

extern var _1_ImGui_Key_AppForward_: * c_int;
pub const Key_AppForward = _1_ImGui_Key_AppForward_;

extern var _1_ImGui_Key_B_: * c_int;
pub const Key_B = _1_ImGui_Key_B_;

extern var _1_ImGui_Key_Backslash_: * c_int;
pub const Key_Backslash = _1_ImGui_Key_Backslash_;

extern var _1_ImGui_Key_Backspace_: * c_int;
pub const Key_Backspace = _1_ImGui_Key_Backspace_;

extern var _1_ImGui_Key_C_: * c_int;
pub const Key_C = _1_ImGui_Key_C_;

extern var _1_ImGui_Key_CapsLock_: * c_int;
pub const Key_CapsLock = _1_ImGui_Key_CapsLock_;

extern var _1_ImGui_Key_Comma_: * c_int;
pub const Key_Comma = _1_ImGui_Key_Comma_;

extern var _1_ImGui_Key_D_: * c_int;
pub const Key_D = _1_ImGui_Key_D_;

extern var _1_ImGui_Key_Delete_: * c_int;
pub const Key_Delete = _1_ImGui_Key_Delete_;

extern var _1_ImGui_Key_DownArrow_: * c_int;
pub const Key_DownArrow = _1_ImGui_Key_DownArrow_;

extern var _1_ImGui_Key_E_: * c_int;
pub const Key_E = _1_ImGui_Key_E_;

extern var _1_ImGui_Key_End_: * c_int;
pub const Key_End = _1_ImGui_Key_End_;

extern var _1_ImGui_Key_Enter_: * c_int;
pub const Key_Enter = _1_ImGui_Key_Enter_;

extern var _1_ImGui_Key_Equal_: * c_int;
pub const Key_Equal = _1_ImGui_Key_Equal_;

extern var _1_ImGui_Key_Escape_: * c_int;
pub const Key_Escape = _1_ImGui_Key_Escape_;

extern var _1_ImGui_Key_F_: * c_int;
pub const Key_F = _1_ImGui_Key_F_;

extern var _1_ImGui_Key_F1_: * c_int;
pub const Key_F1 = _1_ImGui_Key_F1_;

extern var _1_ImGui_Key_F10_: * c_int;
pub const Key_F10 = _1_ImGui_Key_F10_;

extern var _1_ImGui_Key_F11_: * c_int;
pub const Key_F11 = _1_ImGui_Key_F11_;

extern var _1_ImGui_Key_F12_: * c_int;
pub const Key_F12 = _1_ImGui_Key_F12_;

extern var _1_ImGui_Key_F13_: * c_int;
pub const Key_F13 = _1_ImGui_Key_F13_;

extern var _1_ImGui_Key_F14_: * c_int;
pub const Key_F14 = _1_ImGui_Key_F14_;

extern var _1_ImGui_Key_F15_: * c_int;
pub const Key_F15 = _1_ImGui_Key_F15_;

extern var _1_ImGui_Key_F16_: * c_int;
pub const Key_F16 = _1_ImGui_Key_F16_;

extern var _1_ImGui_Key_F17_: * c_int;
pub const Key_F17 = _1_ImGui_Key_F17_;

extern var _1_ImGui_Key_F18_: * c_int;
pub const Key_F18 = _1_ImGui_Key_F18_;

extern var _1_ImGui_Key_F19_: * c_int;
pub const Key_F19 = _1_ImGui_Key_F19_;

extern var _1_ImGui_Key_F2_: * c_int;
pub const Key_F2 = _1_ImGui_Key_F2_;

extern var _1_ImGui_Key_F20_: * c_int;
pub const Key_F20 = _1_ImGui_Key_F20_;

extern var _1_ImGui_Key_F21_: * c_int;
pub const Key_F21 = _1_ImGui_Key_F21_;

extern var _1_ImGui_Key_F22_: * c_int;
pub const Key_F22 = _1_ImGui_Key_F22_;

extern var _1_ImGui_Key_F23_: * c_int;
pub const Key_F23 = _1_ImGui_Key_F23_;

extern var _1_ImGui_Key_F24_: * c_int;
pub const Key_F24 = _1_ImGui_Key_F24_;

extern var _1_ImGui_Key_F3_: * c_int;
pub const Key_F3 = _1_ImGui_Key_F3_;

extern var _1_ImGui_Key_F4_: * c_int;
pub const Key_F4 = _1_ImGui_Key_F4_;

extern var _1_ImGui_Key_F5_: * c_int;
pub const Key_F5 = _1_ImGui_Key_F5_;

extern var _1_ImGui_Key_F6_: * c_int;
pub const Key_F6 = _1_ImGui_Key_F6_;

extern var _1_ImGui_Key_F7_: * c_int;
pub const Key_F7 = _1_ImGui_Key_F7_;

extern var _1_ImGui_Key_F8_: * c_int;
pub const Key_F8 = _1_ImGui_Key_F8_;

extern var _1_ImGui_Key_F9_: * c_int;
pub const Key_F9 = _1_ImGui_Key_F9_;

extern var _1_ImGui_Key_G_: * c_int;
pub const Key_G = _1_ImGui_Key_G_;

extern var _1_ImGui_Key_GraveAccent_: * c_int;
pub const Key_GraveAccent = _1_ImGui_Key_GraveAccent_;

extern var _1_ImGui_Key_H_: * c_int;
pub const Key_H = _1_ImGui_Key_H_;

extern var _1_ImGui_Key_Home_: * c_int;
pub const Key_Home = _1_ImGui_Key_Home_;

extern var _1_ImGui_Key_I_: * c_int;
pub const Key_I = _1_ImGui_Key_I_;

extern var _1_ImGui_Key_Insert_: * c_int;
pub const Key_Insert = _1_ImGui_Key_Insert_;

extern var _1_ImGui_Key_J_: * c_int;
pub const Key_J = _1_ImGui_Key_J_;

extern var _1_ImGui_Key_K_: * c_int;
pub const Key_K = _1_ImGui_Key_K_;

extern var _1_ImGui_Key_Keypad0_: * c_int;
pub const Key_Keypad0 = _1_ImGui_Key_Keypad0_;

extern var _1_ImGui_Key_Keypad1_: * c_int;
pub const Key_Keypad1 = _1_ImGui_Key_Keypad1_;

extern var _1_ImGui_Key_Keypad2_: * c_int;
pub const Key_Keypad2 = _1_ImGui_Key_Keypad2_;

extern var _1_ImGui_Key_Keypad3_: * c_int;
pub const Key_Keypad3 = _1_ImGui_Key_Keypad3_;

extern var _1_ImGui_Key_Keypad4_: * c_int;
pub const Key_Keypad4 = _1_ImGui_Key_Keypad4_;

extern var _1_ImGui_Key_Keypad5_: * c_int;
pub const Key_Keypad5 = _1_ImGui_Key_Keypad5_;

extern var _1_ImGui_Key_Keypad6_: * c_int;
pub const Key_Keypad6 = _1_ImGui_Key_Keypad6_;

extern var _1_ImGui_Key_Keypad7_: * c_int;
pub const Key_Keypad7 = _1_ImGui_Key_Keypad7_;

extern var _1_ImGui_Key_Keypad8_: * c_int;
pub const Key_Keypad8 = _1_ImGui_Key_Keypad8_;

extern var _1_ImGui_Key_Keypad9_: * c_int;
pub const Key_Keypad9 = _1_ImGui_Key_Keypad9_;

extern var _1_ImGui_Key_KeypadAdd_: * c_int;
pub const Key_KeypadAdd = _1_ImGui_Key_KeypadAdd_;

extern var _1_ImGui_Key_KeypadDecimal_: * c_int;
pub const Key_KeypadDecimal = _1_ImGui_Key_KeypadDecimal_;

extern var _1_ImGui_Key_KeypadDivide_: * c_int;
pub const Key_KeypadDivide = _1_ImGui_Key_KeypadDivide_;

extern var _1_ImGui_Key_KeypadEnter_: * c_int;
pub const Key_KeypadEnter = _1_ImGui_Key_KeypadEnter_;

extern var _1_ImGui_Key_KeypadEqual_: * c_int;
pub const Key_KeypadEqual = _1_ImGui_Key_KeypadEqual_;

extern var _1_ImGui_Key_KeypadMultiply_: * c_int;
pub const Key_KeypadMultiply = _1_ImGui_Key_KeypadMultiply_;

extern var _1_ImGui_Key_KeypadSubtract_: * c_int;
pub const Key_KeypadSubtract = _1_ImGui_Key_KeypadSubtract_;

extern var _1_ImGui_Key_L_: * c_int;
pub const Key_L = _1_ImGui_Key_L_;

extern var _1_ImGui_Key_LeftAlt_: * c_int;
pub const Key_LeftAlt = _1_ImGui_Key_LeftAlt_;

extern var _1_ImGui_Key_LeftArrow_: * c_int;
pub const Key_LeftArrow = _1_ImGui_Key_LeftArrow_;

extern var _1_ImGui_Key_LeftBracket_: * c_int;
pub const Key_LeftBracket = _1_ImGui_Key_LeftBracket_;

extern var _1_ImGui_Key_LeftCtrl_: * c_int;
pub const Key_LeftCtrl = _1_ImGui_Key_LeftCtrl_;

extern var _1_ImGui_Key_LeftShift_: * c_int;
pub const Key_LeftShift = _1_ImGui_Key_LeftShift_;

extern var _1_ImGui_Key_LeftSuper_: * c_int;
pub const Key_LeftSuper = _1_ImGui_Key_LeftSuper_;

extern var _1_ImGui_Key_M_: * c_int;
pub const Key_M = _1_ImGui_Key_M_;

extern var _1_ImGui_Key_Menu_: * c_int;
pub const Key_Menu = _1_ImGui_Key_Menu_;

extern var _1_ImGui_Key_Minus_: * c_int;
pub const Key_Minus = _1_ImGui_Key_Minus_;

extern var _1_ImGui_Key_N_: * c_int;
pub const Key_N = _1_ImGui_Key_N_;

extern var _1_ImGui_Key_NumLock_: * c_int;
pub const Key_NumLock = _1_ImGui_Key_NumLock_;

extern var _1_ImGui_Key_O_: * c_int;
pub const Key_O = _1_ImGui_Key_O_;

extern var _1_ImGui_Key_P_: * c_int;
pub const Key_P = _1_ImGui_Key_P_;

extern var _1_ImGui_Key_PageDown_: * c_int;
pub const Key_PageDown = _1_ImGui_Key_PageDown_;

extern var _1_ImGui_Key_PageUp_: * c_int;
pub const Key_PageUp = _1_ImGui_Key_PageUp_;

extern var _1_ImGui_Key_Pause_: * c_int;
pub const Key_Pause = _1_ImGui_Key_Pause_;

extern var _1_ImGui_Key_Period_: * c_int;
pub const Key_Period = _1_ImGui_Key_Period_;

extern var _1_ImGui_Key_PrintScreen_: * c_int;
pub const Key_PrintScreen = _1_ImGui_Key_PrintScreen_;

extern var _1_ImGui_Key_Q_: * c_int;
pub const Key_Q = _1_ImGui_Key_Q_;

extern var _1_ImGui_Key_R_: * c_int;
pub const Key_R = _1_ImGui_Key_R_;

extern var _1_ImGui_Key_RightAlt_: * c_int;
pub const Key_RightAlt = _1_ImGui_Key_RightAlt_;

extern var _1_ImGui_Key_RightArrow_: * c_int;
pub const Key_RightArrow = _1_ImGui_Key_RightArrow_;

extern var _1_ImGui_Key_RightBracket_: * c_int;
pub const Key_RightBracket = _1_ImGui_Key_RightBracket_;

extern var _1_ImGui_Key_RightCtrl_: * c_int;
pub const Key_RightCtrl = _1_ImGui_Key_RightCtrl_;

extern var _1_ImGui_Key_RightShift_: * c_int;
pub const Key_RightShift = _1_ImGui_Key_RightShift_;

extern var _1_ImGui_Key_RightSuper_: * c_int;
pub const Key_RightSuper = _1_ImGui_Key_RightSuper_;

extern var _1_ImGui_Key_S_: * c_int;
pub const Key_S = _1_ImGui_Key_S_;

extern var _1_ImGui_Key_ScrollLock_: * c_int;
pub const Key_ScrollLock = _1_ImGui_Key_ScrollLock_;

extern var _1_ImGui_Key_Semicolon_: * c_int;
pub const Key_Semicolon = _1_ImGui_Key_Semicolon_;

extern var _1_ImGui_Key_Slash_: * c_int;
pub const Key_Slash = _1_ImGui_Key_Slash_;

extern var _1_ImGui_Key_Space_: * c_int;
pub const Key_Space = _1_ImGui_Key_Space_;

extern var _1_ImGui_Key_T_: * c_int;
pub const Key_T = _1_ImGui_Key_T_;

extern var _1_ImGui_Key_Tab_: * c_int;
pub const Key_Tab = _1_ImGui_Key_Tab_;

extern var _1_ImGui_Key_U_: * c_int;
pub const Key_U = _1_ImGui_Key_U_;

extern var _1_ImGui_Key_UpArrow_: * c_int;
pub const Key_UpArrow = _1_ImGui_Key_UpArrow_;

extern var _1_ImGui_Key_V_: * c_int;
pub const Key_V = _1_ImGui_Key_V_;

extern var _1_ImGui_Key_W_: * c_int;
pub const Key_W = _1_ImGui_Key_W_;

extern var _1_ImGui_Key_X_: * c_int;
pub const Key_X = _1_ImGui_Key_X_;

extern var _1_ImGui_Key_Y_: * c_int;
pub const Key_Y = _1_ImGui_Key_Y_;

extern var _1_ImGui_Key_Z_: * c_int;
pub const Key_Z = _1_ImGui_Key_Z_;

extern var _1_ImGui_Mod_Alt_: * c_int;
pub const Mod_Alt = _1_ImGui_Mod_Alt_;

extern var _1_ImGui_Mod_Ctrl_: * c_int;
pub const Mod_Ctrl = _1_ImGui_Mod_Ctrl_;

extern var _1_ImGui_Mod_None_: * c_int;
pub const Mod_None = _1_ImGui_Mod_None_;

extern var _1_ImGui_Mod_Shift_: * c_int;
pub const Mod_Shift = _1_ImGui_Mod_Shift_;

extern var _1_ImGui_Mod_Shortcut_: * c_int;
pub const Mod_Shortcut = _1_ImGui_Mod_Shortcut_;

extern var _1_ImGui_Mod_Super_: * c_int;
pub const Mod_Super = _1_ImGui_Mod_Super_;

extern var _1_ImGui_Key_MouseLeft_: * c_int;
pub const Key_MouseLeft = _1_ImGui_Key_MouseLeft_;

extern var _1_ImGui_Key_MouseMiddle_: * c_int;
pub const Key_MouseMiddle = _1_ImGui_Key_MouseMiddle_;

extern var _1_ImGui_Key_MouseRight_: * c_int;
pub const Key_MouseRight = _1_ImGui_Key_MouseRight_;

extern var _1_ImGui_Key_MouseWheelX_: * c_int;
pub const Key_MouseWheelX = _1_ImGui_Key_MouseWheelX_;

extern var _1_ImGui_Key_MouseWheelY_: * c_int;
pub const Key_MouseWheelY = _1_ImGui_Key_MouseWheelY_;

extern var _1_ImGui_Key_MouseX1_: * c_int;
pub const Key_MouseX1 = _1_ImGui_Key_MouseX1_;

extern var _1_ImGui_Key_MouseX2_: * c_int;
pub const Key_MouseX2 = _1_ImGui_Key_MouseX2_;

extern var _1_ImGui_GetMouseClickedCount_: * details::function([*c]int (ImGui_Context,*anyopaque);
pub const GetMouseClickedCount = _1_ImGui_GetMouseClickedCount_;

extern var _1_ImGui_GetMouseClickedPos_: * details::function([*c]void (ImGui_Context,c_int,[*c]f64,*anyopaque);
pub const GetMouseClickedPos = _1_ImGui_GetMouseClickedPos_;

extern var _1_ImGui_GetMouseDelta_: * details::function([*c]void (ImGui_Context,[*c]f64,*anyopaque);
pub const GetMouseDelta = _1_ImGui_GetMouseDelta_;

extern var _1_ImGui_GetMouseDownDuration_: * details::function([*c]double (ImGui_Context,*anyopaque);
pub const GetMouseDownDuration = _1_ImGui_GetMouseDownDuration_;

extern var _1_ImGui_GetMouseDragDelta_: * details::function([*c]void (ImGui_Context,[*c]f64,[*c]f64, details::optional(c_int), details::optional(f64)*anyopaque);
pub const GetMouseDragDelta = _1_ImGui_GetMouseDragDelta_;

extern var _1_ImGui_GetMousePos_: * details::function([*c]void (ImGui_Context,[*c]f64,*anyopaque);
pub const GetMousePos = _1_ImGui_GetMousePos_;

extern var _1_ImGui_GetMousePosOnOpeningCurrentPopup_: * details::function([*c]void (ImGui_Context,[*c]f64,*anyopaque);
pub const GetMousePosOnOpeningCurrentPopup = _1_ImGui_GetMousePosOnOpeningCurrentPopup_;

extern var _1_ImGui_GetMouseWheel_: * details::function([*c]void (ImGui_Context,[*c]f64,*anyopaque);
pub const GetMouseWheel = _1_ImGui_GetMouseWheel_;

extern var _1_ImGui_IsAnyMouseDown_: * details::function(*anyopaque);
pub const IsAnyMouseDown = _1_ImGui_IsAnyMouseDown_;

extern var _1_ImGui_IsMouseClicked_: * details::function([*c]bool (ImGui_Context,c_int, details::optional(bool)*anyopaque);
pub const IsMouseClicked = _1_ImGui_IsMouseClicked_;

extern var _1_ImGui_IsMouseDoubleClicked_: * details::function([*c]bool (ImGui_Context,*anyopaque);
pub const IsMouseDoubleClicked = _1_ImGui_IsMouseDoubleClicked_;

extern var _1_ImGui_IsMouseDown_: * details::function([*c]bool (ImGui_Context,*anyopaque);
pub const IsMouseDown = _1_ImGui_IsMouseDown_;

extern var _1_ImGui_IsMouseDragging_: * details::function([*c]bool (ImGui_Context,c_int, details::optional(f64)*anyopaque);
pub const IsMouseDragging = _1_ImGui_IsMouseDragging_;

extern var _1_ImGui_IsMouseHoveringRect_: * details::function([*c]bool (ImGui_Context,f64,f64,f64,f64, details::optional(bool)*anyopaque);
pub const IsMouseHoveringRect = _1_ImGui_IsMouseHoveringRect_;

extern var _1_ImGui_IsMousePosValid_: * details::function([*c]bool (ImGui_Context, details::optional(f64), details::optional(f64)*anyopaque);
pub const IsMousePosValid = _1_ImGui_IsMousePosValid_;

extern var _1_ImGui_IsMouseReleased_: * details::function([*c]bool (ImGui_Context,*anyopaque);
pub const IsMouseReleased = _1_ImGui_IsMouseReleased_;

extern var _1_ImGui_MouseButton_Left_: * c_int;
pub const MouseButton_Left = _1_ImGui_MouseButton_Left_;

extern var _1_ImGui_MouseButton_Middle_: * c_int;
pub const MouseButton_Middle = _1_ImGui_MouseButton_Middle_;

extern var _1_ImGui_MouseButton_Right_: * c_int;
pub const MouseButton_Right = _1_ImGui_MouseButton_Right_;

extern var _1_ImGui_ResetMouseDragDelta_: * details::function([*c]void (ImGui_Context, details::optional(c_int)*anyopaque);
pub const ResetMouseDragDelta = _1_ImGui_ResetMouseDragDelta_;

extern var _1_ImGui_GetMouseCursor_: * details::function(*anyopaque);
pub const GetMouseCursor = _1_ImGui_GetMouseCursor_;

extern var _1_ImGui_MouseCursor_Arrow_: * c_int;
pub const MouseCursor_Arrow = _1_ImGui_MouseCursor_Arrow_;

extern var _1_ImGui_MouseCursor_Hand_: * c_int;
pub const MouseCursor_Hand = _1_ImGui_MouseCursor_Hand_;

extern var _1_ImGui_MouseCursor_None_: * c_int;
pub const MouseCursor_None = _1_ImGui_MouseCursor_None_;

extern var _1_ImGui_MouseCursor_NotAllowed_: * c_int;
pub const MouseCursor_NotAllowed = _1_ImGui_MouseCursor_NotAllowed_;

extern var _1_ImGui_MouseCursor_ResizeAll_: * c_int;
pub const MouseCursor_ResizeAll = _1_ImGui_MouseCursor_ResizeAll_;

extern var _1_ImGui_MouseCursor_ResizeEW_: * c_int;
pub const MouseCursor_ResizeEW = _1_ImGui_MouseCursor_ResizeEW_;

extern var _1_ImGui_MouseCursor_ResizeNESW_: * c_int;
pub const MouseCursor_ResizeNESW = _1_ImGui_MouseCursor_ResizeNESW_;

extern var _1_ImGui_MouseCursor_ResizeNS_: * c_int;
pub const MouseCursor_ResizeNS = _1_ImGui_MouseCursor_ResizeNS_;

extern var _1_ImGui_MouseCursor_ResizeNWSE_: * c_int;
pub const MouseCursor_ResizeNWSE = _1_ImGui_MouseCursor_ResizeNWSE_;

extern var _1_ImGui_MouseCursor_TextInput_: * c_int;
pub const MouseCursor_TextInput = _1_ImGui_MouseCursor_TextInput_;

extern var _1_ImGui_SetMouseCursor_: * details::function([*c]void (ImGui_Context,*anyopaque);
pub const SetMouseCursor = _1_ImGui_SetMouseCursor_;

extern var _1_ImGui_BeginGroup_: * details::function(*anyopaque);
pub const BeginGroup = _1_ImGui_BeginGroup_;

extern var _1_ImGui_Dummy_: * details::function([*c]void (ImGui_Context,f64,*anyopaque);
pub const Dummy = _1_ImGui_Dummy_;

extern var _1_ImGui_EndGroup_: * details::function(*anyopaque);
pub const EndGroup = _1_ImGui_EndGroup_;

extern var _1_ImGui_Indent_: * details::function([*c]void (ImGui_Context, details::optional(f64)*anyopaque);
pub const Indent = _1_ImGui_Indent_;

extern var _1_ImGui_NewLine_: * details::function(*anyopaque);
pub const NewLine = _1_ImGui_NewLine_;

extern var _1_ImGui_SameLine_: * details::function([*c]void (ImGui_Context, details::optional(f64), details::optional(f64)*anyopaque);
pub const SameLine = _1_ImGui_SameLine_;

extern var _1_ImGui_Separator_: * details::function(*anyopaque);
pub const Separator = _1_ImGui_Separator_;

extern var _1_ImGui_SeparatorText_: * details::function([*c]void (ImGui_Context,*anyopaque);
pub const SeparatorText = _1_ImGui_SeparatorText_;

extern var _1_ImGui_Spacing_: * details::function(*anyopaque);
pub const Spacing = _1_ImGui_Spacing_;

extern var _1_ImGui_Unindent_: * details::function([*c]void (ImGui_Context, details::optional(f64)*anyopaque);
pub const Unindent = _1_ImGui_Unindent_;

extern var _1_ImGui_IsRectVisible_: * details::function([*c]bool (ImGui_Context,f64,*anyopaque);
pub const IsRectVisible = _1_ImGui_IsRectVisible_;

extern var _1_ImGui_IsRectVisibleEx_: * details::function([*c]bool (ImGui_Context,f64,f64,f64,*anyopaque);
pub const IsRectVisibleEx = _1_ImGui_IsRectVisibleEx_;

extern var _1_ImGui_PopClipRect_: * details::function(*anyopaque);
pub const PopClipRect = _1_ImGui_PopClipRect_;

extern var _1_ImGui_PushClipRect_: * details::function([*c]void (ImGui_Context,f64,f64,f64,f64,*anyopaque);
pub const PushClipRect = _1_ImGui_PushClipRect_;

extern var _1_ImGui_GetCursorPos_: * details::function([*c]void (ImGui_Context,[*c]f64,*anyopaque);
pub const GetCursorPos = _1_ImGui_GetCursorPos_;

extern var _1_ImGui_GetCursorPosX_: * details::function(*anyopaque);
pub const GetCursorPosX = _1_ImGui_GetCursorPosX_;

extern var _1_ImGui_GetCursorPosY_: * details::function(*anyopaque);
pub const GetCursorPosY = _1_ImGui_GetCursorPosY_;

extern var _1_ImGui_GetCursorScreenPos_: * details::function([*c]void (ImGui_Context,[*c]f64,*anyopaque);
pub const GetCursorScreenPos = _1_ImGui_GetCursorScreenPos_;

extern var _1_ImGui_GetCursorStartPos_: * details::function([*c]void (ImGui_Context,[*c]f64,*anyopaque);
pub const GetCursorStartPos = _1_ImGui_GetCursorStartPos_;

extern var _1_ImGui_SetCursorPos_: * details::function([*c]void (ImGui_Context,f64,*anyopaque);
pub const SetCursorPos = _1_ImGui_SetCursorPos_;

extern var _1_ImGui_SetCursorPosX_: * details::function([*c]void (ImGui_Context,*anyopaque);
pub const SetCursorPosX = _1_ImGui_SetCursorPosX_;

extern var _1_ImGui_SetCursorPosY_: * details::function([*c]void (ImGui_Context,*anyopaque);
pub const SetCursorPosY = _1_ImGui_SetCursorPosY_;

extern var _1_ImGui_SetCursorScreenPos_: * details::function([*c]void (ImGui_Context,f64,*anyopaque);
pub const SetCursorScreenPos = _1_ImGui_SetCursorScreenPos_;

extern var _1_ImGui_CreateListClipper_: * details::function(*anyopaque,true);
pub const CreateListClipper = _1_ImGui_CreateListClipper_;

extern var _1_ImGui_ListClipper_Begin_: * details::function([*c]void (ImGui_ListClipper,c_int, details::optional(f64)*anyopaque);
pub const ListClipper_Begin = _1_ImGui_ListClipper_Begin_;

extern var _1_ImGui_ListClipper_End_: * details::function(*anyopaque);
pub const ListClipper_End = _1_ImGui_ListClipper_End_;

extern var _1_ImGui_ListClipper_GetDisplayRange_: * details::function([*c]void (ImGui_ListClipper,[*c]c_int,*anyopaque);
pub const ListClipper_GetDisplayRange = _1_ImGui_ListClipper_GetDisplayRange_;

extern var _1_ImGui_ListClipper_IncludeItemByIndex_: * details::function([*c]void (ImGui_ListClipper,*anyopaque);
pub const ListClipper_IncludeItemByIndex = _1_ImGui_ListClipper_IncludeItemByIndex_;

extern var _1_ImGui_ListClipper_IncludeItemsByIndex_: * details::function([*c]void (ImGui_ListClipper,c_int,*anyopaque);
pub const ListClipper_IncludeItemsByIndex = _1_ImGui_ListClipper_IncludeItemsByIndex_;

extern var _1_ImGui_ListClipper_Step_: * details::function(*anyopaque);
pub const ListClipper_Step = _1_ImGui_ListClipper_Step_;

extern var _1_ImGui_BeginMenu_: * details::function([*c]bool (ImGui_Context,[*c]const u8, details::optional(bool)*anyopaque,true);
pub const BeginMenu = _1_ImGui_BeginMenu_;

extern var _1_ImGui_BeginMenuBar_: * details::function(*anyopaque,true);
pub const BeginMenuBar = _1_ImGui_BeginMenuBar_;

extern var _1_ImGui_EndMenu_: * details::function(*anyopaque);
pub const EndMenu = _1_ImGui_EndMenu_;

extern var _1_ImGui_EndMenuBar_: * details::function(*anyopaque);
pub const EndMenuBar = _1_ImGui_EndMenuBar_;

extern var _1_ImGui_MenuItem_: * details::function([*c]bool (ImGui_Context,[*c]const u8, details::optional([*c]const u8), details::optional([*c]bool), details::optional(bool)*anyopaque);
pub const MenuItem = _1_ImGui_MenuItem_;

extern var _1_ImGui_PlotHistogram_: * details::function([*c]void (ImGui_Context,[*c]const u8,[*c]reaper_array, details::optional(c_int), details::optional([*c]const u8), details::optional(f64), details::optional(f64), details::optional(f64), details::optional(f64)*anyopaque);
pub const PlotHistogram = _1_ImGui_PlotHistogram_;

extern var _1_ImGui_PlotLines_: * details::function([*c]void (ImGui_Context,[*c]const u8,[*c]reaper_array, details::optional(c_int), details::optional([*c]const u8), details::optional(f64), details::optional(f64), details::optional(f64), details::optional(f64)*anyopaque);
pub const PlotLines = _1_ImGui_PlotLines_;

extern var _1_ImGui_BeginPopup_: * details::function([*c]bool (ImGui_Context,[*c]const u8, details::optional(c_int)*anyopaque,true);
pub const BeginPopup = _1_ImGui_BeginPopup_;

extern var _1_ImGui_BeginPopupModal_: * details::function([*c]bool (ImGui_Context,[*c]const u8, details::optional([*c]bool), details::optional(c_int)*anyopaque,true);
pub const BeginPopupModal = _1_ImGui_BeginPopupModal_;

extern var _1_ImGui_CloseCurrentPopup_: * details::function(*anyopaque);
pub const CloseCurrentPopup = _1_ImGui_CloseCurrentPopup_;

extern var _1_ImGui_EndPopup_: * details::function(*anyopaque);
pub const EndPopup = _1_ImGui_EndPopup_;

extern var _1_ImGui_IsPopupOpen_: * details::function([*c]bool (ImGui_Context,[*c]const u8, details::optional(c_int)*anyopaque);
pub const IsPopupOpen = _1_ImGui_IsPopupOpen_;

extern var _1_ImGui_OpenPopup_: * details::function([*c]void (ImGui_Context,[*c]const u8, details::optional(c_int)*anyopaque);
pub const OpenPopup = _1_ImGui_OpenPopup_;

extern var _1_ImGui_OpenPopupOnItemClick_: * details::function([*c]void (ImGui_Context, details::optional([*c]const u8), details::optional(c_int)*anyopaque);
pub const OpenPopupOnItemClick = _1_ImGui_OpenPopupOnItemClick_;

extern var _1_ImGui_PopupFlags_None_: * c_int;
pub const PopupFlags_None = _1_ImGui_PopupFlags_None_;

extern var _1_ImGui_PopupFlags_MouseButtonLeft_: * c_int;
pub const PopupFlags_MouseButtonLeft = _1_ImGui_PopupFlags_MouseButtonLeft_;

extern var _1_ImGui_PopupFlags_MouseButtonMiddle_: * c_int;
pub const PopupFlags_MouseButtonMiddle = _1_ImGui_PopupFlags_MouseButtonMiddle_;

extern var _1_ImGui_PopupFlags_MouseButtonRight_: * c_int;
pub const PopupFlags_MouseButtonRight = _1_ImGui_PopupFlags_MouseButtonRight_;

extern var _1_ImGui_PopupFlags_NoOpenOverItems_: * c_int;
pub const PopupFlags_NoOpenOverItems = _1_ImGui_PopupFlags_NoOpenOverItems_;

extern var _1_ImGui_PopupFlags_AnyPopup_: * c_int;
pub const PopupFlags_AnyPopup = _1_ImGui_PopupFlags_AnyPopup_;

extern var _1_ImGui_PopupFlags_AnyPopupId_: * c_int;
pub const PopupFlags_AnyPopupId = _1_ImGui_PopupFlags_AnyPopupId_;

extern var _1_ImGui_PopupFlags_AnyPopupLevel_: * c_int;
pub const PopupFlags_AnyPopupLevel = _1_ImGui_PopupFlags_AnyPopupLevel_;

extern var _1_ImGui_PopupFlags_NoOpenOverExistingPopup_: * c_int;
pub const PopupFlags_NoOpenOverExistingPopup = _1_ImGui_PopupFlags_NoOpenOverExistingPopup_;

extern var _1_ImGui_PopupFlags_NoReopen_: * c_int;
pub const PopupFlags_NoReopen = _1_ImGui_PopupFlags_NoReopen_;

extern var _1_ImGui_BeginPopupContextItem_: * details::function([*c]bool (ImGui_Context, details::optional([*c]const u8), details::optional(c_int)*anyopaque,true);
pub const BeginPopupContextItem = _1_ImGui_BeginPopupContextItem_;

extern var _1_ImGui_BeginPopupContextWindow_: * details::function([*c]bool (ImGui_Context, details::optional([*c]const u8), details::optional(c_int)*anyopaque,true);
pub const BeginPopupContextWindow = _1_ImGui_BeginPopupContextWindow_;

extern var _1_ImGui_BeginItemTooltip_: * details::function(*anyopaque,true);
pub const BeginItemTooltip = _1_ImGui_BeginItemTooltip_;

extern var _1_ImGui_BeginTooltip_: * details::function(*anyopaque,true);
pub const BeginTooltip = _1_ImGui_BeginTooltip_;

extern var _1_ImGui_EndTooltip_: * details::function(*anyopaque);
pub const EndTooltip = _1_ImGui_EndTooltip_;

extern var _1_ImGui_SetItemTooltip_: * details::function([*c]void (ImGui_Context,*anyopaque);
pub const SetItemTooltip = _1_ImGui_SetItemTooltip_;

extern var _1_ImGui_SetTooltip_: * details::function([*c]void (ImGui_Context,*anyopaque);
pub const SetTooltip = _1_ImGui_SetTooltip_;

extern var _1_ImGui_Col_Border_: * c_int;
pub const Col_Border = _1_ImGui_Col_Border_;

extern var _1_ImGui_Col_BorderShadow_: * c_int;
pub const Col_BorderShadow = _1_ImGui_Col_BorderShadow_;

extern var _1_ImGui_Col_Button_: * c_int;
pub const Col_Button = _1_ImGui_Col_Button_;

extern var _1_ImGui_Col_ButtonActive_: * c_int;
pub const Col_ButtonActive = _1_ImGui_Col_ButtonActive_;

extern var _1_ImGui_Col_ButtonHovered_: * c_int;
pub const Col_ButtonHovered = _1_ImGui_Col_ButtonHovered_;

extern var _1_ImGui_Col_CheckMark_: * c_int;
pub const Col_CheckMark = _1_ImGui_Col_CheckMark_;

extern var _1_ImGui_Col_ChildBg_: * c_int;
pub const Col_ChildBg = _1_ImGui_Col_ChildBg_;

extern var _1_ImGui_Col_DockingEmptyBg_: * c_int;
pub const Col_DockingEmptyBg = _1_ImGui_Col_DockingEmptyBg_;

extern var _1_ImGui_Col_DockingPreview_: * c_int;
pub const Col_DockingPreview = _1_ImGui_Col_DockingPreview_;

extern var _1_ImGui_Col_DragDropTarget_: * c_int;
pub const Col_DragDropTarget = _1_ImGui_Col_DragDropTarget_;

extern var _1_ImGui_Col_FrameBg_: * c_int;
pub const Col_FrameBg = _1_ImGui_Col_FrameBg_;

extern var _1_ImGui_Col_FrameBgActive_: * c_int;
pub const Col_FrameBgActive = _1_ImGui_Col_FrameBgActive_;

extern var _1_ImGui_Col_FrameBgHovered_: * c_int;
pub const Col_FrameBgHovered = _1_ImGui_Col_FrameBgHovered_;

extern var _1_ImGui_Col_Header_: * c_int;
pub const Col_Header = _1_ImGui_Col_Header_;

extern var _1_ImGui_Col_HeaderActive_: * c_int;
pub const Col_HeaderActive = _1_ImGui_Col_HeaderActive_;

extern var _1_ImGui_Col_HeaderHovered_: * c_int;
pub const Col_HeaderHovered = _1_ImGui_Col_HeaderHovered_;

extern var _1_ImGui_Col_MenuBarBg_: * c_int;
pub const Col_MenuBarBg = _1_ImGui_Col_MenuBarBg_;

extern var _1_ImGui_Col_ModalWindowDimBg_: * c_int;
pub const Col_ModalWindowDimBg = _1_ImGui_Col_ModalWindowDimBg_;

extern var _1_ImGui_Col_NavHighlight_: * c_int;
pub const Col_NavHighlight = _1_ImGui_Col_NavHighlight_;

extern var _1_ImGui_Col_NavWindowingDimBg_: * c_int;
pub const Col_NavWindowingDimBg = _1_ImGui_Col_NavWindowingDimBg_;

extern var _1_ImGui_Col_NavWindowingHighlight_: * c_int;
pub const Col_NavWindowingHighlight = _1_ImGui_Col_NavWindowingHighlight_;

extern var _1_ImGui_Col_PlotHistogram_: * c_int;
pub const Col_PlotHistogram = _1_ImGui_Col_PlotHistogram_;

extern var _1_ImGui_Col_PlotHistogramHovered_: * c_int;
pub const Col_PlotHistogramHovered = _1_ImGui_Col_PlotHistogramHovered_;

extern var _1_ImGui_Col_PlotLines_: * c_int;
pub const Col_PlotLines = _1_ImGui_Col_PlotLines_;

extern var _1_ImGui_Col_PlotLinesHovered_: * c_int;
pub const Col_PlotLinesHovered = _1_ImGui_Col_PlotLinesHovered_;

extern var _1_ImGui_Col_PopupBg_: * c_int;
pub const Col_PopupBg = _1_ImGui_Col_PopupBg_;

extern var _1_ImGui_Col_ResizeGrip_: * c_int;
pub const Col_ResizeGrip = _1_ImGui_Col_ResizeGrip_;

extern var _1_ImGui_Col_ResizeGripActive_: * c_int;
pub const Col_ResizeGripActive = _1_ImGui_Col_ResizeGripActive_;

extern var _1_ImGui_Col_ResizeGripHovered_: * c_int;
pub const Col_ResizeGripHovered = _1_ImGui_Col_ResizeGripHovered_;

extern var _1_ImGui_Col_ScrollbarBg_: * c_int;
pub const Col_ScrollbarBg = _1_ImGui_Col_ScrollbarBg_;

extern var _1_ImGui_Col_ScrollbarGrab_: * c_int;
pub const Col_ScrollbarGrab = _1_ImGui_Col_ScrollbarGrab_;

extern var _1_ImGui_Col_ScrollbarGrabActive_: * c_int;
pub const Col_ScrollbarGrabActive = _1_ImGui_Col_ScrollbarGrabActive_;

extern var _1_ImGui_Col_ScrollbarGrabHovered_: * c_int;
pub const Col_ScrollbarGrabHovered = _1_ImGui_Col_ScrollbarGrabHovered_;

extern var _1_ImGui_Col_Separator_: * c_int;
pub const Col_Separator = _1_ImGui_Col_Separator_;

extern var _1_ImGui_Col_SeparatorActive_: * c_int;
pub const Col_SeparatorActive = _1_ImGui_Col_SeparatorActive_;

extern var _1_ImGui_Col_SeparatorHovered_: * c_int;
pub const Col_SeparatorHovered = _1_ImGui_Col_SeparatorHovered_;

extern var _1_ImGui_Col_SliderGrab_: * c_int;
pub const Col_SliderGrab = _1_ImGui_Col_SliderGrab_;

extern var _1_ImGui_Col_SliderGrabActive_: * c_int;
pub const Col_SliderGrabActive = _1_ImGui_Col_SliderGrabActive_;

extern var _1_ImGui_Col_Tab_: * c_int;
pub const Col_Tab = _1_ImGui_Col_Tab_;

extern var _1_ImGui_Col_TabActive_: * c_int;
pub const Col_TabActive = _1_ImGui_Col_TabActive_;

extern var _1_ImGui_Col_TabHovered_: * c_int;
pub const Col_TabHovered = _1_ImGui_Col_TabHovered_;

extern var _1_ImGui_Col_TabUnfocused_: * c_int;
pub const Col_TabUnfocused = _1_ImGui_Col_TabUnfocused_;

extern var _1_ImGui_Col_TabUnfocusedActive_: * c_int;
pub const Col_TabUnfocusedActive = _1_ImGui_Col_TabUnfocusedActive_;

extern var _1_ImGui_Col_TableBorderLight_: * c_int;
pub const Col_TableBorderLight = _1_ImGui_Col_TableBorderLight_;

extern var _1_ImGui_Col_TableBorderStrong_: * c_int;
pub const Col_TableBorderStrong = _1_ImGui_Col_TableBorderStrong_;

extern var _1_ImGui_Col_TableHeaderBg_: * c_int;
pub const Col_TableHeaderBg = _1_ImGui_Col_TableHeaderBg_;

extern var _1_ImGui_Col_TableRowBg_: * c_int;
pub const Col_TableRowBg = _1_ImGui_Col_TableRowBg_;

extern var _1_ImGui_Col_TableRowBgAlt_: * c_int;
pub const Col_TableRowBgAlt = _1_ImGui_Col_TableRowBgAlt_;

extern var _1_ImGui_Col_Text_: * c_int;
pub const Col_Text = _1_ImGui_Col_Text_;

extern var _1_ImGui_Col_TextDisabled_: * c_int;
pub const Col_TextDisabled = _1_ImGui_Col_TextDisabled_;

extern var _1_ImGui_Col_TextSelectedBg_: * c_int;
pub const Col_TextSelectedBg = _1_ImGui_Col_TextSelectedBg_;

extern var _1_ImGui_Col_TitleBg_: * c_int;
pub const Col_TitleBg = _1_ImGui_Col_TitleBg_;

extern var _1_ImGui_Col_TitleBgActive_: * c_int;
pub const Col_TitleBgActive = _1_ImGui_Col_TitleBgActive_;

extern var _1_ImGui_Col_TitleBgCollapsed_: * c_int;
pub const Col_TitleBgCollapsed = _1_ImGui_Col_TitleBgCollapsed_;

extern var _1_ImGui_Col_WindowBg_: * c_int;
pub const Col_WindowBg = _1_ImGui_Col_WindowBg_;

extern var _1_ImGui_DebugFlashStyleColor_: * details::function([*c]void (ImGui_Context,*anyopaque);
pub const DebugFlashStyleColor = _1_ImGui_DebugFlashStyleColor_;

extern var _1_ImGui_GetColor_: * details::function([*c]int (ImGui_Context,c_int, details::optional(f64)*anyopaque);
pub const GetColor = _1_ImGui_GetColor_;

extern var _1_ImGui_GetColorEx_: * details::function([*c]int (ImGui_Context,c_int, details::optional(f64)*anyopaque);
pub const GetColorEx = _1_ImGui_GetColorEx_;

extern var _1_ImGui_GetStyleColor_: * details::function([*c]int (ImGui_Context,*anyopaque);
pub const GetStyleColor = _1_ImGui_GetStyleColor_;

extern var _1_ImGui_PopStyleColor_: * details::function([*c]void (ImGui_Context, details::optional(c_int)*anyopaque);
pub const PopStyleColor = _1_ImGui_PopStyleColor_;

extern var _1_ImGui_PushStyleColor_: * details::function([*c]void (ImGui_Context,c_int,*anyopaque);
pub const PushStyleColor = _1_ImGui_PushStyleColor_;

extern var _1_ImGui_GetStyleVar_: * details::function([*c]void (ImGui_Context,c_int,[*c]f64,*anyopaque);
pub const GetStyleVar = _1_ImGui_GetStyleVar_;

extern var _1_ImGui_PopStyleVar_: * details::function([*c]void (ImGui_Context, details::optional(c_int)*anyopaque);
pub const PopStyleVar = _1_ImGui_PopStyleVar_;

extern var _1_ImGui_PushStyleVar_: * details::function([*c]void (ImGui_Context,c_int,f64, details::optional(f64)*anyopaque);
pub const PushStyleVar = _1_ImGui_PushStyleVar_;

extern var _1_ImGui_StyleVar_Alpha_: * c_int;
pub const StyleVar_Alpha = _1_ImGui_StyleVar_Alpha_;

extern var _1_ImGui_StyleVar_ButtonTextAlign_: * c_int;
pub const StyleVar_ButtonTextAlign = _1_ImGui_StyleVar_ButtonTextAlign_;

extern var _1_ImGui_StyleVar_CellPadding_: * c_int;
pub const StyleVar_CellPadding = _1_ImGui_StyleVar_CellPadding_;

extern var _1_ImGui_StyleVar_ChildBorderSize_: * c_int;
pub const StyleVar_ChildBorderSize = _1_ImGui_StyleVar_ChildBorderSize_;

extern var _1_ImGui_StyleVar_ChildRounding_: * c_int;
pub const StyleVar_ChildRounding = _1_ImGui_StyleVar_ChildRounding_;

extern var _1_ImGui_StyleVar_DisabledAlpha_: * c_int;
pub const StyleVar_DisabledAlpha = _1_ImGui_StyleVar_DisabledAlpha_;

extern var _1_ImGui_StyleVar_FrameBorderSize_: * c_int;
pub const StyleVar_FrameBorderSize = _1_ImGui_StyleVar_FrameBorderSize_;

extern var _1_ImGui_StyleVar_FramePadding_: * c_int;
pub const StyleVar_FramePadding = _1_ImGui_StyleVar_FramePadding_;

extern var _1_ImGui_StyleVar_FrameRounding_: * c_int;
pub const StyleVar_FrameRounding = _1_ImGui_StyleVar_FrameRounding_;

extern var _1_ImGui_StyleVar_GrabMinSize_: * c_int;
pub const StyleVar_GrabMinSize = _1_ImGui_StyleVar_GrabMinSize_;

extern var _1_ImGui_StyleVar_GrabRounding_: * c_int;
pub const StyleVar_GrabRounding = _1_ImGui_StyleVar_GrabRounding_;

extern var _1_ImGui_StyleVar_IndentSpacing_: * c_int;
pub const StyleVar_IndentSpacing = _1_ImGui_StyleVar_IndentSpacing_;

extern var _1_ImGui_StyleVar_ItemInnerSpacing_: * c_int;
pub const StyleVar_ItemInnerSpacing = _1_ImGui_StyleVar_ItemInnerSpacing_;

extern var _1_ImGui_StyleVar_ItemSpacing_: * c_int;
pub const StyleVar_ItemSpacing = _1_ImGui_StyleVar_ItemSpacing_;

extern var _1_ImGui_StyleVar_PopupBorderSize_: * c_int;
pub const StyleVar_PopupBorderSize = _1_ImGui_StyleVar_PopupBorderSize_;

extern var _1_ImGui_StyleVar_PopupRounding_: * c_int;
pub const StyleVar_PopupRounding = _1_ImGui_StyleVar_PopupRounding_;

extern var _1_ImGui_StyleVar_ScrollbarRounding_: * c_int;
pub const StyleVar_ScrollbarRounding = _1_ImGui_StyleVar_ScrollbarRounding_;

extern var _1_ImGui_StyleVar_ScrollbarSize_: * c_int;
pub const StyleVar_ScrollbarSize = _1_ImGui_StyleVar_ScrollbarSize_;

extern var _1_ImGui_StyleVar_SelectableTextAlign_: * c_int;
pub const StyleVar_SelectableTextAlign = _1_ImGui_StyleVar_SelectableTextAlign_;

extern var _1_ImGui_StyleVar_SeparatorTextAlign_: * c_int;
pub const StyleVar_SeparatorTextAlign = _1_ImGui_StyleVar_SeparatorTextAlign_;

extern var _1_ImGui_StyleVar_SeparatorTextBorderSize_: * c_int;
pub const StyleVar_SeparatorTextBorderSize = _1_ImGui_StyleVar_SeparatorTextBorderSize_;

extern var _1_ImGui_StyleVar_SeparatorTextPadding_: * c_int;
pub const StyleVar_SeparatorTextPadding = _1_ImGui_StyleVar_SeparatorTextPadding_;

extern var _1_ImGui_StyleVar_TabBarBorderSize_: * c_int;
pub const StyleVar_TabBarBorderSize = _1_ImGui_StyleVar_TabBarBorderSize_;

extern var _1_ImGui_StyleVar_TabBorderSize_: * c_int;
pub const StyleVar_TabBorderSize = _1_ImGui_StyleVar_TabBorderSize_;

extern var _1_ImGui_StyleVar_TabRounding_: * c_int;
pub const StyleVar_TabRounding = _1_ImGui_StyleVar_TabRounding_;

extern var _1_ImGui_StyleVar_TableAngledHeadersAngle_: * c_int;
pub const StyleVar_TableAngledHeadersAngle = _1_ImGui_StyleVar_TableAngledHeadersAngle_;

extern var _1_ImGui_StyleVar_TableAngledHeadersTextAlign_: * c_int;
pub const StyleVar_TableAngledHeadersTextAlign = _1_ImGui_StyleVar_TableAngledHeadersTextAlign_;

extern var _1_ImGui_StyleVar_WindowBorderSize_: * c_int;
pub const StyleVar_WindowBorderSize = _1_ImGui_StyleVar_WindowBorderSize_;

extern var _1_ImGui_StyleVar_WindowMinSize_: * c_int;
pub const StyleVar_WindowMinSize = _1_ImGui_StyleVar_WindowMinSize_;

extern var _1_ImGui_StyleVar_WindowPadding_: * c_int;
pub const StyleVar_WindowPadding = _1_ImGui_StyleVar_WindowPadding_;

extern var _1_ImGui_StyleVar_WindowRounding_: * c_int;
pub const StyleVar_WindowRounding = _1_ImGui_StyleVar_WindowRounding_;

extern var _1_ImGui_StyleVar_WindowTitleAlign_: * c_int;
pub const StyleVar_WindowTitleAlign = _1_ImGui_StyleVar_WindowTitleAlign_;

extern var _1_ImGui_BeginTabBar_: * details::function([*c]bool (ImGui_Context,[*c]const u8, details::optional(c_int)*anyopaque,true);
pub const BeginTabBar = _1_ImGui_BeginTabBar_;

extern var _1_ImGui_EndTabBar_: * details::function(*anyopaque);
pub const EndTabBar = _1_ImGui_EndTabBar_;

extern var _1_ImGui_TabBarFlags_AutoSelectNewTabs_: * c_int;
pub const TabBarFlags_AutoSelectNewTabs = _1_ImGui_TabBarFlags_AutoSelectNewTabs_;

extern var _1_ImGui_TabBarFlags_FittingPolicyResizeDown_: * c_int;
pub const TabBarFlags_FittingPolicyResizeDown = _1_ImGui_TabBarFlags_FittingPolicyResizeDown_;

extern var _1_ImGui_TabBarFlags_FittingPolicyScroll_: * c_int;
pub const TabBarFlags_FittingPolicyScroll = _1_ImGui_TabBarFlags_FittingPolicyScroll_;

extern var _1_ImGui_TabBarFlags_NoCloseWithMiddleMouseButton_: * c_int;
pub const TabBarFlags_NoCloseWithMiddleMouseButton = _1_ImGui_TabBarFlags_NoCloseWithMiddleMouseButton_;

extern var _1_ImGui_TabBarFlags_NoTabListScrollingButtons_: * c_int;
pub const TabBarFlags_NoTabListScrollingButtons = _1_ImGui_TabBarFlags_NoTabListScrollingButtons_;

extern var _1_ImGui_TabBarFlags_NoTooltip_: * c_int;
pub const TabBarFlags_NoTooltip = _1_ImGui_TabBarFlags_NoTooltip_;

extern var _1_ImGui_TabBarFlags_None_: * c_int;
pub const TabBarFlags_None = _1_ImGui_TabBarFlags_None_;

extern var _1_ImGui_TabBarFlags_Reorderable_: * c_int;
pub const TabBarFlags_Reorderable = _1_ImGui_TabBarFlags_Reorderable_;

extern var _1_ImGui_TabBarFlags_TabListPopupButton_: * c_int;
pub const TabBarFlags_TabListPopupButton = _1_ImGui_TabBarFlags_TabListPopupButton_;

extern var _1_ImGui_BeginTabItem_: * details::function([*c]bool (ImGui_Context,[*c]const u8, details::optional([*c]bool), details::optional(c_int)*anyopaque,true);
pub const BeginTabItem = _1_ImGui_BeginTabItem_;

extern var _1_ImGui_EndTabItem_: * details::function(*anyopaque);
pub const EndTabItem = _1_ImGui_EndTabItem_;

extern var _1_ImGui_SetTabItemClosed_: * details::function([*c]void (ImGui_Context,*anyopaque);
pub const SetTabItemClosed = _1_ImGui_SetTabItemClosed_;

extern var _1_ImGui_TabItemButton_: * details::function([*c]bool (ImGui_Context,[*c]const u8, details::optional(c_int)*anyopaque);
pub const TabItemButton = _1_ImGui_TabItemButton_;

extern var _1_ImGui_TabItemFlags_Leading_: * c_int;
pub const TabItemFlags_Leading = _1_ImGui_TabItemFlags_Leading_;

extern var _1_ImGui_TabItemFlags_NoAssumedClosure_: * c_int;
pub const TabItemFlags_NoAssumedClosure = _1_ImGui_TabItemFlags_NoAssumedClosure_;

extern var _1_ImGui_TabItemFlags_NoCloseWithMiddleMouseButton_: * c_int;
pub const TabItemFlags_NoCloseWithMiddleMouseButton = _1_ImGui_TabItemFlags_NoCloseWithMiddleMouseButton_;

extern var _1_ImGui_TabItemFlags_NoPushId_: * c_int;
pub const TabItemFlags_NoPushId = _1_ImGui_TabItemFlags_NoPushId_;

extern var _1_ImGui_TabItemFlags_NoReorder_: * c_int;
pub const TabItemFlags_NoReorder = _1_ImGui_TabItemFlags_NoReorder_;

extern var _1_ImGui_TabItemFlags_NoTooltip_: * c_int;
pub const TabItemFlags_NoTooltip = _1_ImGui_TabItemFlags_NoTooltip_;

extern var _1_ImGui_TabItemFlags_None_: * c_int;
pub const TabItemFlags_None = _1_ImGui_TabItemFlags_None_;

extern var _1_ImGui_TabItemFlags_SetSelected_: * c_int;
pub const TabItemFlags_SetSelected = _1_ImGui_TabItemFlags_SetSelected_;

extern var _1_ImGui_TabItemFlags_Trailing_: * c_int;
pub const TabItemFlags_Trailing = _1_ImGui_TabItemFlags_Trailing_;

extern var _1_ImGui_TabItemFlags_UnsavedDocument_: * c_int;
pub const TabItemFlags_UnsavedDocument = _1_ImGui_TabItemFlags_UnsavedDocument_;

extern var _1_ImGui_BeginTable_: * details::function([*c]bool (ImGui_Context,[*c]const u8,c_int, details::optional(c_int), details::optional(f64), details::optional(f64), details::optional(f64)*anyopaque,true);
pub const BeginTable = _1_ImGui_BeginTable_;

extern var _1_ImGui_EndTable_: * details::function(*anyopaque);
pub const EndTable = _1_ImGui_EndTable_;

extern var _1_ImGui_TableGetColumnCount_: * details::function(*anyopaque);
pub const TableGetColumnCount = _1_ImGui_TableGetColumnCount_;

extern var _1_ImGui_TableGetColumnIndex_: * details::function(*anyopaque);
pub const TableGetColumnIndex = _1_ImGui_TableGetColumnIndex_;

extern var _1_ImGui_TableGetRowIndex_: * details::function(*anyopaque);
pub const TableGetRowIndex = _1_ImGui_TableGetRowIndex_;

extern var _1_ImGui_TableNextColumn_: * details::function(*anyopaque);
pub const TableNextColumn = _1_ImGui_TableNextColumn_;

extern var _1_ImGui_TableNextRow_: * details::function([*c]void (ImGui_Context, details::optional(c_int), details::optional(f64)*anyopaque);
pub const TableNextRow = _1_ImGui_TableNextRow_;

extern var _1_ImGui_TableRowFlags_Headers_: * c_int;
pub const TableRowFlags_Headers = _1_ImGui_TableRowFlags_Headers_;

extern var _1_ImGui_TableRowFlags_None_: * c_int;
pub const TableRowFlags_None = _1_ImGui_TableRowFlags_None_;

extern var _1_ImGui_TableSetColumnIndex_: * details::function([*c]bool (ImGui_Context,*anyopaque);
pub const TableSetColumnIndex = _1_ImGui_TableSetColumnIndex_;

extern var _1_ImGui_TableBgTarget_CellBg_: * c_int;
pub const TableBgTarget_CellBg = _1_ImGui_TableBgTarget_CellBg_;

extern var _1_ImGui_TableBgTarget_None_: * c_int;
pub const TableBgTarget_None = _1_ImGui_TableBgTarget_None_;

extern var _1_ImGui_TableBgTarget_RowBg0_: * c_int;
pub const TableBgTarget_RowBg0 = _1_ImGui_TableBgTarget_RowBg0_;

extern var _1_ImGui_TableBgTarget_RowBg1_: * c_int;
pub const TableBgTarget_RowBg1 = _1_ImGui_TableBgTarget_RowBg1_;

extern var _1_ImGui_TableSetBgColor_: * details::function([*c]void (ImGui_Context,c_int,c_int, details::optional(c_int)*anyopaque);
pub const TableSetBgColor = _1_ImGui_TableSetBgColor_;

extern var _1_ImGui_TableAngledHeadersRow_: * details::function(*anyopaque);
pub const TableAngledHeadersRow = _1_ImGui_TableAngledHeadersRow_;

extern var _1_ImGui_TableGetColumnFlags_: * details::function([*c]int (ImGui_Context, details::optional(c_int)*anyopaque);
pub const TableGetColumnFlags = _1_ImGui_TableGetColumnFlags_;

extern var _1_ImGui_TableGetColumnName_: * details::function([*c]const char *(ImGui_Context, details::optional(c_int)*anyopaque);
pub const TableGetColumnName = _1_ImGui_TableGetColumnName_;

extern var _1_ImGui_TableHeader_: * details::function([*c]void (ImGui_Context,*anyopaque);
pub const TableHeader = _1_ImGui_TableHeader_;

extern var _1_ImGui_TableHeadersRow_: * details::function(*anyopaque);
pub const TableHeadersRow = _1_ImGui_TableHeadersRow_;

extern var _1_ImGui_TableSetColumnEnabled_: * details::function([*c]void (ImGui_Context,c_int,*anyopaque);
pub const TableSetColumnEnabled = _1_ImGui_TableSetColumnEnabled_;

extern var _1_ImGui_TableSetupColumn_: * details::function([*c]void (ImGui_Context,[*c]const u8, details::optional(c_int), details::optional(f64), details::optional(c_int)*anyopaque);
pub const TableSetupColumn = _1_ImGui_TableSetupColumn_;

extern var _1_ImGui_TableSetupScrollFreeze_: * details::function([*c]void (ImGui_Context,c_int,*anyopaque);
pub const TableSetupScrollFreeze = _1_ImGui_TableSetupScrollFreeze_;

extern var _1_ImGui_TableColumnFlags_None_: * c_int;
pub const TableColumnFlags_None = _1_ImGui_TableColumnFlags_None_;

extern var _1_ImGui_TableColumnFlags_AngledHeader_: * c_int;
pub const TableColumnFlags_AngledHeader = _1_ImGui_TableColumnFlags_AngledHeader_;

extern var _1_ImGui_TableColumnFlags_DefaultHide_: * c_int;
pub const TableColumnFlags_DefaultHide = _1_ImGui_TableColumnFlags_DefaultHide_;

extern var _1_ImGui_TableColumnFlags_DefaultSort_: * c_int;
pub const TableColumnFlags_DefaultSort = _1_ImGui_TableColumnFlags_DefaultSort_;

extern var _1_ImGui_TableColumnFlags_Disabled_: * c_int;
pub const TableColumnFlags_Disabled = _1_ImGui_TableColumnFlags_Disabled_;

extern var _1_ImGui_TableColumnFlags_IndentDisable_: * c_int;
pub const TableColumnFlags_IndentDisable = _1_ImGui_TableColumnFlags_IndentDisable_;

extern var _1_ImGui_TableColumnFlags_IndentEnable_: * c_int;
pub const TableColumnFlags_IndentEnable = _1_ImGui_TableColumnFlags_IndentEnable_;

extern var _1_ImGui_TableColumnFlags_NoClip_: * c_int;
pub const TableColumnFlags_NoClip = _1_ImGui_TableColumnFlags_NoClip_;

extern var _1_ImGui_TableColumnFlags_NoHeaderLabel_: * c_int;
pub const TableColumnFlags_NoHeaderLabel = _1_ImGui_TableColumnFlags_NoHeaderLabel_;

extern var _1_ImGui_TableColumnFlags_NoHeaderWidth_: * c_int;
pub const TableColumnFlags_NoHeaderWidth = _1_ImGui_TableColumnFlags_NoHeaderWidth_;

extern var _1_ImGui_TableColumnFlags_NoHide_: * c_int;
pub const TableColumnFlags_NoHide = _1_ImGui_TableColumnFlags_NoHide_;

extern var _1_ImGui_TableColumnFlags_NoReorder_: * c_int;
pub const TableColumnFlags_NoReorder = _1_ImGui_TableColumnFlags_NoReorder_;

extern var _1_ImGui_TableColumnFlags_NoResize_: * c_int;
pub const TableColumnFlags_NoResize = _1_ImGui_TableColumnFlags_NoResize_;

extern var _1_ImGui_TableColumnFlags_NoSort_: * c_int;
pub const TableColumnFlags_NoSort = _1_ImGui_TableColumnFlags_NoSort_;

extern var _1_ImGui_TableColumnFlags_NoSortAscending_: * c_int;
pub const TableColumnFlags_NoSortAscending = _1_ImGui_TableColumnFlags_NoSortAscending_;

extern var _1_ImGui_TableColumnFlags_NoSortDescending_: * c_int;
pub const TableColumnFlags_NoSortDescending = _1_ImGui_TableColumnFlags_NoSortDescending_;

extern var _1_ImGui_TableColumnFlags_PreferSortAscending_: * c_int;
pub const TableColumnFlags_PreferSortAscending = _1_ImGui_TableColumnFlags_PreferSortAscending_;

extern var _1_ImGui_TableColumnFlags_PreferSortDescending_: * c_int;
pub const TableColumnFlags_PreferSortDescending = _1_ImGui_TableColumnFlags_PreferSortDescending_;

extern var _1_ImGui_TableColumnFlags_WidthFixed_: * c_int;
pub const TableColumnFlags_WidthFixed = _1_ImGui_TableColumnFlags_WidthFixed_;

extern var _1_ImGui_TableColumnFlags_WidthStretch_: * c_int;
pub const TableColumnFlags_WidthStretch = _1_ImGui_TableColumnFlags_WidthStretch_;

extern var _1_ImGui_TableColumnFlags_IsEnabled_: * c_int;
pub const TableColumnFlags_IsEnabled = _1_ImGui_TableColumnFlags_IsEnabled_;

extern var _1_ImGui_TableColumnFlags_IsHovered_: * c_int;
pub const TableColumnFlags_IsHovered = _1_ImGui_TableColumnFlags_IsHovered_;

extern var _1_ImGui_TableColumnFlags_IsSorted_: * c_int;
pub const TableColumnFlags_IsSorted = _1_ImGui_TableColumnFlags_IsSorted_;

extern var _1_ImGui_TableColumnFlags_IsVisible_: * c_int;
pub const TableColumnFlags_IsVisible = _1_ImGui_TableColumnFlags_IsVisible_;

extern var _1_ImGui_SortDirection_Ascending_: * c_int;
pub const SortDirection_Ascending = _1_ImGui_SortDirection_Ascending_;

extern var _1_ImGui_SortDirection_Descending_: * c_int;
pub const SortDirection_Descending = _1_ImGui_SortDirection_Descending_;

extern var _1_ImGui_SortDirection_None_: * c_int;
pub const SortDirection_None = _1_ImGui_SortDirection_None_;

extern var _1_ImGui_TableGetColumnSortSpecs_: * details::function([*c]bool (ImGui_Context,c_int,[*c]c_int,[*c]c_int,*anyopaque);
pub const TableGetColumnSortSpecs = _1_ImGui_TableGetColumnSortSpecs_;

extern var _1_ImGui_TableNeedSort_: * details::function([*c]bool (ImGui_Context,*anyopaque);
pub const TableNeedSort = _1_ImGui_TableNeedSort_;

extern var _1_ImGui_TableFlags_None_: * c_int;
pub const TableFlags_None = _1_ImGui_TableFlags_None_;

extern var _1_ImGui_TableFlags_NoClip_: * c_int;
pub const TableFlags_NoClip = _1_ImGui_TableFlags_NoClip_;

extern var _1_ImGui_TableFlags_Borders_: * c_int;
pub const TableFlags_Borders = _1_ImGui_TableFlags_Borders_;

extern var _1_ImGui_TableFlags_BordersH_: * c_int;
pub const TableFlags_BordersH = _1_ImGui_TableFlags_BordersH_;

extern var _1_ImGui_TableFlags_BordersInner_: * c_int;
pub const TableFlags_BordersInner = _1_ImGui_TableFlags_BordersInner_;

extern var _1_ImGui_TableFlags_BordersInnerH_: * c_int;
pub const TableFlags_BordersInnerH = _1_ImGui_TableFlags_BordersInnerH_;

extern var _1_ImGui_TableFlags_BordersInnerV_: * c_int;
pub const TableFlags_BordersInnerV = _1_ImGui_TableFlags_BordersInnerV_;

extern var _1_ImGui_TableFlags_BordersOuter_: * c_int;
pub const TableFlags_BordersOuter = _1_ImGui_TableFlags_BordersOuter_;

extern var _1_ImGui_TableFlags_BordersOuterH_: * c_int;
pub const TableFlags_BordersOuterH = _1_ImGui_TableFlags_BordersOuterH_;

extern var _1_ImGui_TableFlags_BordersOuterV_: * c_int;
pub const TableFlags_BordersOuterV = _1_ImGui_TableFlags_BordersOuterV_;

extern var _1_ImGui_TableFlags_BordersV_: * c_int;
pub const TableFlags_BordersV = _1_ImGui_TableFlags_BordersV_;

extern var _1_ImGui_TableFlags_RowBg_: * c_int;
pub const TableFlags_RowBg = _1_ImGui_TableFlags_RowBg_;

extern var _1_ImGui_TableFlags_ContextMenuInBody_: * c_int;
pub const TableFlags_ContextMenuInBody = _1_ImGui_TableFlags_ContextMenuInBody_;

extern var _1_ImGui_TableFlags_Hideable_: * c_int;
pub const TableFlags_Hideable = _1_ImGui_TableFlags_Hideable_;

extern var _1_ImGui_TableFlags_NoSavedSettings_: * c_int;
pub const TableFlags_NoSavedSettings = _1_ImGui_TableFlags_NoSavedSettings_;

extern var _1_ImGui_TableFlags_Reorderable_: * c_int;
pub const TableFlags_Reorderable = _1_ImGui_TableFlags_Reorderable_;

extern var _1_ImGui_TableFlags_Resizable_: * c_int;
pub const TableFlags_Resizable = _1_ImGui_TableFlags_Resizable_;

extern var _1_ImGui_TableFlags_Sortable_: * c_int;
pub const TableFlags_Sortable = _1_ImGui_TableFlags_Sortable_;

extern var _1_ImGui_TableFlags_HighlightHoveredColumn_: * c_int;
pub const TableFlags_HighlightHoveredColumn = _1_ImGui_TableFlags_HighlightHoveredColumn_;

extern var _1_ImGui_TableFlags_NoPadInnerX_: * c_int;
pub const TableFlags_NoPadInnerX = _1_ImGui_TableFlags_NoPadInnerX_;

extern var _1_ImGui_TableFlags_NoPadOuterX_: * c_int;
pub const TableFlags_NoPadOuterX = _1_ImGui_TableFlags_NoPadOuterX_;

extern var _1_ImGui_TableFlags_PadOuterX_: * c_int;
pub const TableFlags_PadOuterX = _1_ImGui_TableFlags_PadOuterX_;

extern var _1_ImGui_TableFlags_ScrollX_: * c_int;
pub const TableFlags_ScrollX = _1_ImGui_TableFlags_ScrollX_;

extern var _1_ImGui_TableFlags_ScrollY_: * c_int;
pub const TableFlags_ScrollY = _1_ImGui_TableFlags_ScrollY_;

extern var _1_ImGui_TableFlags_NoHostExtendX_: * c_int;
pub const TableFlags_NoHostExtendX = _1_ImGui_TableFlags_NoHostExtendX_;

extern var _1_ImGui_TableFlags_NoHostExtendY_: * c_int;
pub const TableFlags_NoHostExtendY = _1_ImGui_TableFlags_NoHostExtendY_;

extern var _1_ImGui_TableFlags_NoKeepColumnsVisible_: * c_int;
pub const TableFlags_NoKeepColumnsVisible = _1_ImGui_TableFlags_NoKeepColumnsVisible_;

extern var _1_ImGui_TableFlags_PreciseWidths_: * c_int;
pub const TableFlags_PreciseWidths = _1_ImGui_TableFlags_PreciseWidths_;

extern var _1_ImGui_TableFlags_SizingFixedFit_: * c_int;
pub const TableFlags_SizingFixedFit = _1_ImGui_TableFlags_SizingFixedFit_;

extern var _1_ImGui_TableFlags_SizingFixedSame_: * c_int;
pub const TableFlags_SizingFixedSame = _1_ImGui_TableFlags_SizingFixedSame_;

extern var _1_ImGui_TableFlags_SizingStretchProp_: * c_int;
pub const TableFlags_SizingStretchProp = _1_ImGui_TableFlags_SizingStretchProp_;

extern var _1_ImGui_TableFlags_SizingStretchSame_: * c_int;
pub const TableFlags_SizingStretchSame = _1_ImGui_TableFlags_SizingStretchSame_;

extern var _1_ImGui_TableFlags_SortMulti_: * c_int;
pub const TableFlags_SortMulti = _1_ImGui_TableFlags_SortMulti_;

extern var _1_ImGui_TableFlags_SortTristate_: * c_int;
pub const TableFlags_SortTristate = _1_ImGui_TableFlags_SortTristate_;

extern var _1_ImGui_AlignTextToFramePadding_: * details::function(*anyopaque);
pub const AlignTextToFramePadding = _1_ImGui_AlignTextToFramePadding_;

extern var _1_ImGui_Bullet_: * details::function(*anyopaque);
pub const Bullet = _1_ImGui_Bullet_;

extern var _1_ImGui_BulletText_: * details::function([*c]void (ImGui_Context,*anyopaque);
pub const BulletText = _1_ImGui_BulletText_;

extern var _1_ImGui_CalcTextSize_: * details::function([*c]void (ImGui_Context,[*c]const u8,[*c]f64,[*c]f64, details::optional(bool), details::optional(f64)*anyopaque);
pub const CalcTextSize = _1_ImGui_CalcTextSize_;

extern var _1_ImGui_DebugTextEncoding_: * details::function([*c]void (ImGui_Context,*anyopaque);
pub const DebugTextEncoding = _1_ImGui_DebugTextEncoding_;

extern var _1_ImGui_GetFrameHeight_: * details::function(*anyopaque);
pub const GetFrameHeight = _1_ImGui_GetFrameHeight_;

extern var _1_ImGui_GetFrameHeightWithSpacing_: * details::function(*anyopaque);
pub const GetFrameHeightWithSpacing = _1_ImGui_GetFrameHeightWithSpacing_;

extern var _1_ImGui_GetTextLineHeight_: * details::function(*anyopaque);
pub const GetTextLineHeight = _1_ImGui_GetTextLineHeight_;

extern var _1_ImGui_GetTextLineHeightWithSpacing_: * details::function(*anyopaque);
pub const GetTextLineHeightWithSpacing = _1_ImGui_GetTextLineHeightWithSpacing_;

extern var _1_ImGui_LabelText_: * details::function([*c]void (ImGui_Context,[*c]const u8,*anyopaque);
pub const LabelText = _1_ImGui_LabelText_;

extern var _1_ImGui_PopTextWrapPos_: * details::function(*anyopaque);
pub const PopTextWrapPos = _1_ImGui_PopTextWrapPos_;

extern var _1_ImGui_PushTextWrapPos_: * details::function([*c]void (ImGui_Context, details::optional(f64)*anyopaque);
pub const PushTextWrapPos = _1_ImGui_PushTextWrapPos_;

extern var _1_ImGui_Text_: * details::function([*c]void (ImGui_Context,*anyopaque);
pub const Text = _1_ImGui_Text_;

extern var _1_ImGui_TextColored_: * details::function([*c]void (ImGui_Context,c_int,*anyopaque);
pub const TextColored = _1_ImGui_TextColored_;

extern var _1_ImGui_TextDisabled_: * details::function([*c]void (ImGui_Context,*anyopaque);
pub const TextDisabled = _1_ImGui_TextDisabled_;

extern var _1_ImGui_TextWrapped_: * details::function([*c]void (ImGui_Context,*anyopaque);
pub const TextWrapped = _1_ImGui_TextWrapped_;

extern var _1_ImGui_InputDouble_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]f64, details::optional(f64), details::optional(f64), details::optional([*c]const u8), details::optional(c_int)*anyopaque);
pub const InputDouble = _1_ImGui_InputDouble_;

extern var _1_ImGui_InputDouble2_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]f64,[*c]f64, details::optional([*c]const u8), details::optional(c_int)*anyopaque);
pub const InputDouble2 = _1_ImGui_InputDouble2_;

extern var _1_ImGui_InputDouble3_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]f64,[*c]f64,[*c]f64, details::optional([*c]const u8), details::optional(c_int)*anyopaque);
pub const InputDouble3 = _1_ImGui_InputDouble3_;

extern var _1_ImGui_InputDouble4_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]f64,[*c]f64,[*c]f64,[*c]f64, details::optional([*c]const u8), details::optional(c_int)*anyopaque);
pub const InputDouble4 = _1_ImGui_InputDouble4_;

extern var _1_ImGui_InputDoubleN_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]reaper_array, details::optional(f64), details::optional(f64), details::optional([*c]const u8), details::optional(c_int)*anyopaque);
pub const InputDoubleN = _1_ImGui_InputDoubleN_;

extern var _1_ImGui_InputInt_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]c_int, details::optional(c_int), details::optional(c_int), details::optional(c_int)*anyopaque);
pub const InputInt = _1_ImGui_InputInt_;

extern var _1_ImGui_InputInt2_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]c_int,[*c]c_int, details::optional(c_int)*anyopaque);
pub const InputInt2 = _1_ImGui_InputInt2_;

extern var _1_ImGui_InputInt3_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]c_int,[*c]c_int,[*c]c_int, details::optional(c_int)*anyopaque);
pub const InputInt3 = _1_ImGui_InputInt3_;

extern var _1_ImGui_InputInt4_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]c_int,[*c]c_int,[*c]c_int,[*c]c_int, details::optional(c_int)*anyopaque);
pub const InputInt4 = _1_ImGui_InputInt4_;

extern var _1_ImGui_InputText_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]u8,c_int, details::optional(c_int), details::optional([*c]ImGui_Function)*anyopaque);
pub const InputText = _1_ImGui_InputText_;

extern var _1_ImGui_InputTextMultiline_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]u8,c_int, details::optional(f64), details::optional(f64), details::optional(c_int), details::optional([*c]ImGui_Function)*anyopaque);
pub const InputTextMultiline = _1_ImGui_InputTextMultiline_;

extern var _1_ImGui_InputTextWithHint_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]const u8,[*c]u8,c_int, details::optional(c_int), details::optional([*c]ImGui_Function)*anyopaque);
pub const InputTextWithHint = _1_ImGui_InputTextWithHint_;

extern var _1_ImGui_InputTextFlags_AllowTabInput_: * c_int;
pub const InputTextFlags_AllowTabInput = _1_ImGui_InputTextFlags_AllowTabInput_;

extern var _1_ImGui_InputTextFlags_AlwaysOverwrite_: * c_int;
pub const InputTextFlags_AlwaysOverwrite = _1_ImGui_InputTextFlags_AlwaysOverwrite_;

extern var _1_ImGui_InputTextFlags_AutoSelectAll_: * c_int;
pub const InputTextFlags_AutoSelectAll = _1_ImGui_InputTextFlags_AutoSelectAll_;

extern var _1_ImGui_InputTextFlags_CallbackAlways_: * c_int;
pub const InputTextFlags_CallbackAlways = _1_ImGui_InputTextFlags_CallbackAlways_;

extern var _1_ImGui_InputTextFlags_CallbackCharFilter_: * c_int;
pub const InputTextFlags_CallbackCharFilter = _1_ImGui_InputTextFlags_CallbackCharFilter_;

extern var _1_ImGui_InputTextFlags_CallbackCompletion_: * c_int;
pub const InputTextFlags_CallbackCompletion = _1_ImGui_InputTextFlags_CallbackCompletion_;

extern var _1_ImGui_InputTextFlags_CallbackEdit_: * c_int;
pub const InputTextFlags_CallbackEdit = _1_ImGui_InputTextFlags_CallbackEdit_;

extern var _1_ImGui_InputTextFlags_CallbackHistory_: * c_int;
pub const InputTextFlags_CallbackHistory = _1_ImGui_InputTextFlags_CallbackHistory_;

extern var _1_ImGui_InputTextFlags_CharsDecimal_: * c_int;
pub const InputTextFlags_CharsDecimal = _1_ImGui_InputTextFlags_CharsDecimal_;

extern var _1_ImGui_InputTextFlags_CharsHexadecimal_: * c_int;
pub const InputTextFlags_CharsHexadecimal = _1_ImGui_InputTextFlags_CharsHexadecimal_;

extern var _1_ImGui_InputTextFlags_CharsNoBlank_: * c_int;
pub const InputTextFlags_CharsNoBlank = _1_ImGui_InputTextFlags_CharsNoBlank_;

extern var _1_ImGui_InputTextFlags_CharsScientific_: * c_int;
pub const InputTextFlags_CharsScientific = _1_ImGui_InputTextFlags_CharsScientific_;

extern var _1_ImGui_InputTextFlags_CharsUppercase_: * c_int;
pub const InputTextFlags_CharsUppercase = _1_ImGui_InputTextFlags_CharsUppercase_;

extern var _1_ImGui_InputTextFlags_CtrlEnterForNewLine_: * c_int;
pub const InputTextFlags_CtrlEnterForNewLine = _1_ImGui_InputTextFlags_CtrlEnterForNewLine_;

extern var _1_ImGui_InputTextFlags_EnterReturnsTrue_: * c_int;
pub const InputTextFlags_EnterReturnsTrue = _1_ImGui_InputTextFlags_EnterReturnsTrue_;

extern var _1_ImGui_InputTextFlags_EscapeClearsAll_: * c_int;
pub const InputTextFlags_EscapeClearsAll = _1_ImGui_InputTextFlags_EscapeClearsAll_;

extern var _1_ImGui_InputTextFlags_NoHorizontalScroll_: * c_int;
pub const InputTextFlags_NoHorizontalScroll = _1_ImGui_InputTextFlags_NoHorizontalScroll_;

extern var _1_ImGui_InputTextFlags_NoUndoRedo_: * c_int;
pub const InputTextFlags_NoUndoRedo = _1_ImGui_InputTextFlags_NoUndoRedo_;

extern var _1_ImGui_InputTextFlags_None_: * c_int;
pub const InputTextFlags_None = _1_ImGui_InputTextFlags_None_;

extern var _1_ImGui_InputTextFlags_Password_: * c_int;
pub const InputTextFlags_Password = _1_ImGui_InputTextFlags_Password_;

extern var _1_ImGui_InputTextFlags_ReadOnly_: * c_int;
pub const InputTextFlags_ReadOnly = _1_ImGui_InputTextFlags_ReadOnly_;

extern var _1_ImGui_CreateTextFilter_: * details::function(ImGui_TextFilter *(details::optional([*c]const u8)*anyopaque,true);
pub const CreateTextFilter = _1_ImGui_CreateTextFilter_;

extern var _1_ImGui_TextFilter_Clear_: * details::function(*anyopaque);
pub const TextFilter_Clear = _1_ImGui_TextFilter_Clear_;

extern var _1_ImGui_TextFilter_Draw_: * details::function([*c]bool (ImGui_TextFilter,[*c]ImGui_Context, details::optional([*c]const u8), details::optional(f64)*anyopaque);
pub const TextFilter_Draw = _1_ImGui_TextFilter_Draw_;

extern var _1_ImGui_TextFilter_Get_: * details::function(*anyopaque);
pub const TextFilter_Get = _1_ImGui_TextFilter_Get_;

extern var _1_ImGui_TextFilter_IsActive_: * details::function(*anyopaque);
pub const TextFilter_IsActive = _1_ImGui_TextFilter_IsActive_;

extern var _1_ImGui_TextFilter_PassFilter_: * details::function([*c]bool (ImGui_TextFilter,*anyopaque);
pub const TextFilter_PassFilter = _1_ImGui_TextFilter_PassFilter_;

extern var _1_ImGui_TextFilter_Set_: * details::function([*c]void (ImGui_TextFilter,*anyopaque);
pub const TextFilter_Set = _1_ImGui_TextFilter_Set_;

extern var _1_ImGui_CollapsingHeader_: * details::function([*c]bool (ImGui_Context,[*c]const u8, details::optional([*c]bool), details::optional(c_int)*anyopaque);
pub const CollapsingHeader = _1_ImGui_CollapsingHeader_;

extern var _1_ImGui_GetTreeNodeToLabelSpacing_: * details::function(*anyopaque);
pub const GetTreeNodeToLabelSpacing = _1_ImGui_GetTreeNodeToLabelSpacing_;

extern var _1_ImGui_IsItemToggledOpen_: * details::function(*anyopaque);
pub const IsItemToggledOpen = _1_ImGui_IsItemToggledOpen_;

extern var _1_ImGui_SetNextItemOpen_: * details::function([*c]void (ImGui_Context,bool, details::optional(c_int)*anyopaque);
pub const SetNextItemOpen = _1_ImGui_SetNextItemOpen_;

extern var _1_ImGui_TreeNode_: * details::function([*c]bool (ImGui_Context,[*c]const u8, details::optional(c_int)*anyopaque);
pub const TreeNode = _1_ImGui_TreeNode_;

extern var _1_ImGui_TreeNodeEx_: * details::function([*c]bool (ImGui_Context,[*c]const u8,[*c]const u8, details::optional(c_int)*anyopaque);
pub const TreeNodeEx = _1_ImGui_TreeNodeEx_;

extern var _1_ImGui_TreePop_: * details::function(*anyopaque);
pub const TreePop = _1_ImGui_TreePop_;

extern var _1_ImGui_TreePush_: * details::function([*c]void (ImGui_Context,*anyopaque);
pub const TreePush = _1_ImGui_TreePush_;

extern var _1_ImGui_TreeNodeFlags_AllowOverlap_: * c_int;
pub const TreeNodeFlags_AllowOverlap = _1_ImGui_TreeNodeFlags_AllowOverlap_;

extern var _1_ImGui_TreeNodeFlags_Bullet_: * c_int;
pub const TreeNodeFlags_Bullet = _1_ImGui_TreeNodeFlags_Bullet_;

extern var _1_ImGui_TreeNodeFlags_CollapsingHeader_: * c_int;
pub const TreeNodeFlags_CollapsingHeader = _1_ImGui_TreeNodeFlags_CollapsingHeader_;

extern var _1_ImGui_TreeNodeFlags_DefaultOpen_: * c_int;
pub const TreeNodeFlags_DefaultOpen = _1_ImGui_TreeNodeFlags_DefaultOpen_;

extern var _1_ImGui_TreeNodeFlags_FramePadding_: * c_int;
pub const TreeNodeFlags_FramePadding = _1_ImGui_TreeNodeFlags_FramePadding_;

extern var _1_ImGui_TreeNodeFlags_Framed_: * c_int;
pub const TreeNodeFlags_Framed = _1_ImGui_TreeNodeFlags_Framed_;

extern var _1_ImGui_TreeNodeFlags_Leaf_: * c_int;
pub const TreeNodeFlags_Leaf = _1_ImGui_TreeNodeFlags_Leaf_;

extern var _1_ImGui_TreeNodeFlags_NoAutoOpenOnLog_: * c_int;
pub const TreeNodeFlags_NoAutoOpenOnLog = _1_ImGui_TreeNodeFlags_NoAutoOpenOnLog_;

extern var _1_ImGui_TreeNodeFlags_NoTreePushOnOpen_: * c_int;
pub const TreeNodeFlags_NoTreePushOnOpen = _1_ImGui_TreeNodeFlags_NoTreePushOnOpen_;

extern var _1_ImGui_TreeNodeFlags_None_: * c_int;
pub const TreeNodeFlags_None = _1_ImGui_TreeNodeFlags_None_;

extern var _1_ImGui_TreeNodeFlags_OpenOnArrow_: * c_int;
pub const TreeNodeFlags_OpenOnArrow = _1_ImGui_TreeNodeFlags_OpenOnArrow_;

extern var _1_ImGui_TreeNodeFlags_OpenOnDoubleClick_: * c_int;
pub const TreeNodeFlags_OpenOnDoubleClick = _1_ImGui_TreeNodeFlags_OpenOnDoubleClick_;

extern var _1_ImGui_TreeNodeFlags_Selected_: * c_int;
pub const TreeNodeFlags_Selected = _1_ImGui_TreeNodeFlags_Selected_;

extern var _1_ImGui_TreeNodeFlags_SpanAllColumns_: * c_int;
pub const TreeNodeFlags_SpanAllColumns = _1_ImGui_TreeNodeFlags_SpanAllColumns_;

extern var _1_ImGui_TreeNodeFlags_SpanAvailWidth_: * c_int;
pub const TreeNodeFlags_SpanAvailWidth = _1_ImGui_TreeNodeFlags_SpanAvailWidth_;

extern var _1_ImGui_TreeNodeFlags_SpanFullWidth_: * c_int;
pub const TreeNodeFlags_SpanFullWidth = _1_ImGui_TreeNodeFlags_SpanFullWidth_;

extern var _1_ImGui_TreeNodeFlags_SpanTextWidth_: * c_int;
pub const TreeNodeFlags_SpanTextWidth = _1_ImGui_TreeNodeFlags_SpanTextWidth_;

extern var _1_ImGui_GetBuiltinPath_: * details::function(*anyopaque);
pub const GetBuiltinPath = _1_ImGui_GetBuiltinPath_;

extern var _1_ImGui_GetVersion_: * details::function([*c]void (char,c_int,[*c]c_int,[*c]u8,*anyopaque);
pub const GetVersion = _1_ImGui_GetVersion_;

extern var _1_ImGui_NumericLimits_Double_: * details::function([*c]void (double,*anyopaque);
pub const NumericLimits_Double = _1_ImGui_NumericLimits_Double_;

extern var _1_ImGui_NumericLimits_Float_: * details::function([*c]void (double,*anyopaque);
pub const NumericLimits_Float = _1_ImGui_NumericLimits_Float_;

extern var _1_ImGui_NumericLimits_Int_: * details::function([*c]void (int,*anyopaque);
pub const NumericLimits_Int = _1_ImGui_NumericLimits_Int_;

extern var _1_ImGui_PointConvertNative_: * details::function([*c]void (ImGui_Context,[*c]f64,[*c]f64, details::optional(bool)*anyopaque);
pub const PointConvertNative = _1_ImGui_PointConvertNative_;

extern var _1_ImGui_ProgressBar_: * details::function([*c]void (ImGui_Context,f64, details::optional(f64), details::optional(f64), details::optional([*c]const u8)*anyopaque);
pub const ProgressBar = _1_ImGui_ProgressBar_;

extern var _1_ImGui_ValidatePtr_: * details::function([*c]bool (void,*anyopaque);
pub const ValidatePtr = _1_ImGui_ValidatePtr_;

extern var _1_ImGui_GetClipboardText_: * details::function(*anyopaque);
pub const GetClipboardText = _1_ImGui_GetClipboardText_;

extern var _1_ImGui_SetClipboardText_: * details::function([*c]void (ImGui_Context,*anyopaque);
pub const SetClipboardText = _1_ImGui_SetClipboardText_;

extern var _1_ImGui_ColorConvertDouble4ToU32_: * details::function(int (double,f64,f64,*anyopaque);
pub const ColorConvertDouble4ToU32 = _1_ImGui_ColorConvertDouble4ToU32_;

extern var _1_ImGui_ColorConvertHSVtoRGB_: * details::function(void (double,f64,f64,[*c]f64,[*c]f64,*anyopaque);
pub const ColorConvertHSVtoRGB = _1_ImGui_ColorConvertHSVtoRGB_;

extern var _1_ImGui_ColorConvertNative_: * details::function(*anyopaque);
pub const ColorConvertNative = _1_ImGui_ColorConvertNative_;

extern var _1_ImGui_ColorConvertRGBtoHSV_: * details::function(void (double,f64,f64,[*c]f64,[*c]f64,*anyopaque);
pub const ColorConvertRGBtoHSV = _1_ImGui_ColorConvertRGBtoHSV_;

extern var _1_ImGui_ColorConvertU32ToDouble4_: * details::function(void (int,[*c]f64,[*c]f64,[*c]f64,*anyopaque);
pub const ColorConvertU32ToDouble4 = _1_ImGui_ColorConvertU32ToDouble4_;

extern var _1_ImGui_Cond_Always_: * c_int;
pub const Cond_Always = _1_ImGui_Cond_Always_;

extern var _1_ImGui_Cond_Appearing_: * c_int;
pub const Cond_Appearing = _1_ImGui_Cond_Appearing_;

extern var _1_ImGui_Cond_FirstUseEver_: * c_int;
pub const Cond_FirstUseEver = _1_ImGui_Cond_FirstUseEver_;

extern var _1_ImGui_Cond_Once_: * c_int;
pub const Cond_Once = _1_ImGui_Cond_Once_;

extern var _1_ImGui_PopID_: * details::function(*anyopaque);
pub const PopID = _1_ImGui_PopID_;

extern var _1_ImGui_PushID_: * details::function([*c]void (ImGui_Context,*anyopaque);
pub const PushID = _1_ImGui_PushID_;

extern var _1_ImGui_LogFinish_: * details::function(*anyopaque);
pub const LogFinish = _1_ImGui_LogFinish_;

extern var _1_ImGui_LogText_: * details::function([*c]void (ImGui_Context,*anyopaque);
pub const LogText = _1_ImGui_LogText_;

extern var _1_ImGui_LogToClipboard_: * details::function([*c]void (ImGui_Context, details::optional(c_int)*anyopaque);
pub const LogToClipboard = _1_ImGui_LogToClipboard_;

extern var _1_ImGui_LogToFile_: * details::function([*c]void (ImGui_Context, details::optional(c_int), details::optional([*c]const u8)*anyopaque);
pub const LogToFile = _1_ImGui_LogToFile_;

extern var _1_ImGui_LogToTTY_: * details::function([*c]void (ImGui_Context, details::optional(c_int)*anyopaque);
pub const LogToTTY = _1_ImGui_LogToTTY_;

extern var _1_ImGui_GetMainViewport_: * details::function(*anyopaque);
pub const GetMainViewport = _1_ImGui_GetMainViewport_;

extern var _1_ImGui_GetWindowViewport_: * details::function(*anyopaque);
pub const GetWindowViewport = _1_ImGui_GetWindowViewport_;

extern var _1_ImGui_Viewport_GetCenter_: * details::function([*c]void (ImGui_Viewport,[*c]f64,*anyopaque);
pub const Viewport_GetCenter = _1_ImGui_Viewport_GetCenter_;

extern var _1_ImGui_Viewport_GetPos_: * details::function([*c]void (ImGui_Viewport,[*c]f64,*anyopaque);
pub const Viewport_GetPos = _1_ImGui_Viewport_GetPos_;

extern var _1_ImGui_Viewport_GetSize_: * details::function([*c]void (ImGui_Viewport,[*c]f64,*anyopaque);
pub const Viewport_GetSize = _1_ImGui_Viewport_GetSize_;

extern var _1_ImGui_Viewport_GetWorkCenter_: * details::function([*c]void (ImGui_Viewport,[*c]f64,*anyopaque);
pub const Viewport_GetWorkCenter = _1_ImGui_Viewport_GetWorkCenter_;

extern var _1_ImGui_Viewport_GetWorkPos_: * details::function([*c]void (ImGui_Viewport,[*c]f64,*anyopaque);
pub const Viewport_GetWorkPos = _1_ImGui_Viewport_GetWorkPos_;

extern var _1_ImGui_Viewport_GetWorkSize_: * details::function([*c]void (ImGui_Viewport,[*c]f64,*anyopaque);
pub const Viewport_GetWorkSize = _1_ImGui_Viewport_GetWorkSize_;

extern var _1_ImGui_Begin_: * details::function([*c]bool (ImGui_Context,[*c]const u8, details::optional([*c]bool), details::optional(c_int)*anyopaque,true);
pub const Begin = _1_ImGui_Begin_;

extern var _1_ImGui_End_: * details::function(*anyopaque);
pub const End = _1_ImGui_End_;

extern var _1_ImGui_BeginChild_: * details::function([*c]bool (ImGui_Context,[*c]const u8, details::optional(f64), details::optional(f64), details::optional(c_int), details::optional(c_int)*anyopaque,true);
pub const BeginChild = _1_ImGui_BeginChild_;

extern var _1_ImGui_EndChild_: * details::function(*anyopaque);
pub const EndChild = _1_ImGui_EndChild_;

extern var _1_ImGui_ChildFlags_AlwaysAutoResize_: * c_int;
pub const ChildFlags_AlwaysAutoResize = _1_ImGui_ChildFlags_AlwaysAutoResize_;

extern var _1_ImGui_ChildFlags_AlwaysUseWindowPadding_: * c_int;
pub const ChildFlags_AlwaysUseWindowPadding = _1_ImGui_ChildFlags_AlwaysUseWindowPadding_;

extern var _1_ImGui_ChildFlags_AutoResizeX_: * c_int;
pub const ChildFlags_AutoResizeX = _1_ImGui_ChildFlags_AutoResizeX_;

extern var _1_ImGui_ChildFlags_AutoResizeY_: * c_int;
pub const ChildFlags_AutoResizeY = _1_ImGui_ChildFlags_AutoResizeY_;

extern var _1_ImGui_ChildFlags_Border_: * c_int;
pub const ChildFlags_Border = _1_ImGui_ChildFlags_Border_;

extern var _1_ImGui_ChildFlags_FrameStyle_: * c_int;
pub const ChildFlags_FrameStyle = _1_ImGui_ChildFlags_FrameStyle_;

extern var _1_ImGui_ChildFlags_None_: * c_int;
pub const ChildFlags_None = _1_ImGui_ChildFlags_None_;

extern var _1_ImGui_ChildFlags_ResizeX_: * c_int;
pub const ChildFlags_ResizeX = _1_ImGui_ChildFlags_ResizeX_;

extern var _1_ImGui_ChildFlags_ResizeY_: * c_int;
pub const ChildFlags_ResizeY = _1_ImGui_ChildFlags_ResizeY_;

extern var _1_ImGui_GetContentRegionAvail_: * details::function([*c]void (ImGui_Context,[*c]f64,*anyopaque);
pub const GetContentRegionAvail = _1_ImGui_GetContentRegionAvail_;

extern var _1_ImGui_GetContentRegionMax_: * details::function([*c]void (ImGui_Context,[*c]f64,*anyopaque);
pub const GetContentRegionMax = _1_ImGui_GetContentRegionMax_;

extern var _1_ImGui_GetWindowContentRegionMax_: * details::function([*c]void (ImGui_Context,[*c]f64,*anyopaque);
pub const GetWindowContentRegionMax = _1_ImGui_GetWindowContentRegionMax_;

extern var _1_ImGui_GetWindowContentRegionMin_: * details::function([*c]void (ImGui_Context,[*c]f64,*anyopaque);
pub const GetWindowContentRegionMin = _1_ImGui_GetWindowContentRegionMin_;

extern var _1_ImGui_ShowAboutWindow_: * details::function([*c]void (ImGui_Context, details::optional([*c]bool)*anyopaque);
pub const ShowAboutWindow = _1_ImGui_ShowAboutWindow_;

extern var _1_ImGui_ShowDebugLogWindow_: * details::function([*c]void (ImGui_Context, details::optional([*c]bool)*anyopaque);
pub const ShowDebugLogWindow = _1_ImGui_ShowDebugLogWindow_;

extern var _1_ImGui_ShowIDStackToolWindow_: * details::function([*c]void (ImGui_Context, details::optional([*c]bool)*anyopaque);
pub const ShowIDStackToolWindow = _1_ImGui_ShowIDStackToolWindow_;

extern var _1_ImGui_ShowMetricsWindow_: * details::function([*c]void (ImGui_Context, details::optional([*c]bool)*anyopaque);
pub const ShowMetricsWindow = _1_ImGui_ShowMetricsWindow_;

extern var _1_ImGui_GetWindowDockID_: * details::function(*anyopaque);
pub const GetWindowDockID = _1_ImGui_GetWindowDockID_;

extern var _1_ImGui_IsWindowDocked_: * details::function(*anyopaque);
pub const IsWindowDocked = _1_ImGui_IsWindowDocked_;

extern var _1_ImGui_SetNextWindowDockID_: * details::function([*c]void (ImGui_Context,c_int, details::optional(c_int)*anyopaque);
pub const SetNextWindowDockID = _1_ImGui_SetNextWindowDockID_;

extern var _1_ImGui_WindowFlags_AlwaysAutoResize_: * c_int;
pub const WindowFlags_AlwaysAutoResize = _1_ImGui_WindowFlags_AlwaysAutoResize_;

extern var _1_ImGui_WindowFlags_AlwaysHorizontalScrollbar_: * c_int;
pub const WindowFlags_AlwaysHorizontalScrollbar = _1_ImGui_WindowFlags_AlwaysHorizontalScrollbar_;

extern var _1_ImGui_WindowFlags_AlwaysVerticalScrollbar_: * c_int;
pub const WindowFlags_AlwaysVerticalScrollbar = _1_ImGui_WindowFlags_AlwaysVerticalScrollbar_;

extern var _1_ImGui_WindowFlags_HorizontalScrollbar_: * c_int;
pub const WindowFlags_HorizontalScrollbar = _1_ImGui_WindowFlags_HorizontalScrollbar_;

extern var _1_ImGui_WindowFlags_MenuBar_: * c_int;
pub const WindowFlags_MenuBar = _1_ImGui_WindowFlags_MenuBar_;

extern var _1_ImGui_WindowFlags_NoBackground_: * c_int;
pub const WindowFlags_NoBackground = _1_ImGui_WindowFlags_NoBackground_;

extern var _1_ImGui_WindowFlags_NoCollapse_: * c_int;
pub const WindowFlags_NoCollapse = _1_ImGui_WindowFlags_NoCollapse_;

extern var _1_ImGui_WindowFlags_NoDecoration_: * c_int;
pub const WindowFlags_NoDecoration = _1_ImGui_WindowFlags_NoDecoration_;

extern var _1_ImGui_WindowFlags_NoDocking_: * c_int;
pub const WindowFlags_NoDocking = _1_ImGui_WindowFlags_NoDocking_;

extern var _1_ImGui_WindowFlags_NoFocusOnAppearing_: * c_int;
pub const WindowFlags_NoFocusOnAppearing = _1_ImGui_WindowFlags_NoFocusOnAppearing_;

extern var _1_ImGui_WindowFlags_NoInputs_: * c_int;
pub const WindowFlags_NoInputs = _1_ImGui_WindowFlags_NoInputs_;

extern var _1_ImGui_WindowFlags_NoMouseInputs_: * c_int;
pub const WindowFlags_NoMouseInputs = _1_ImGui_WindowFlags_NoMouseInputs_;

extern var _1_ImGui_WindowFlags_NoMove_: * c_int;
pub const WindowFlags_NoMove = _1_ImGui_WindowFlags_NoMove_;

extern var _1_ImGui_WindowFlags_NoNav_: * c_int;
pub const WindowFlags_NoNav = _1_ImGui_WindowFlags_NoNav_;

extern var _1_ImGui_WindowFlags_NoNavFocus_: * c_int;
pub const WindowFlags_NoNavFocus = _1_ImGui_WindowFlags_NoNavFocus_;

extern var _1_ImGui_WindowFlags_NoNavInputs_: * c_int;
pub const WindowFlags_NoNavInputs = _1_ImGui_WindowFlags_NoNavInputs_;

extern var _1_ImGui_WindowFlags_NoResize_: * c_int;
pub const WindowFlags_NoResize = _1_ImGui_WindowFlags_NoResize_;

extern var _1_ImGui_WindowFlags_NoSavedSettings_: * c_int;
pub const WindowFlags_NoSavedSettings = _1_ImGui_WindowFlags_NoSavedSettings_;

extern var _1_ImGui_WindowFlags_NoScrollWithMouse_: * c_int;
pub const WindowFlags_NoScrollWithMouse = _1_ImGui_WindowFlags_NoScrollWithMouse_;

extern var _1_ImGui_WindowFlags_NoScrollbar_: * c_int;
pub const WindowFlags_NoScrollbar = _1_ImGui_WindowFlags_NoScrollbar_;

extern var _1_ImGui_WindowFlags_NoTitleBar_: * c_int;
pub const WindowFlags_NoTitleBar = _1_ImGui_WindowFlags_NoTitleBar_;

extern var _1_ImGui_WindowFlags_None_: * c_int;
pub const WindowFlags_None = _1_ImGui_WindowFlags_None_;

extern var _1_ImGui_WindowFlags_TopMost_: * c_int;
pub const WindowFlags_TopMost = _1_ImGui_WindowFlags_TopMost_;

extern var _1_ImGui_WindowFlags_UnsavedDocument_: * c_int;
pub const WindowFlags_UnsavedDocument = _1_ImGui_WindowFlags_UnsavedDocument_;

extern var _1_ImGui_GetWindowDpiScale_: * details::function(*anyopaque);
pub const GetWindowDpiScale = _1_ImGui_GetWindowDpiScale_;

extern var _1_ImGui_GetWindowHeight_: * details::function(*anyopaque);
pub const GetWindowHeight = _1_ImGui_GetWindowHeight_;

extern var _1_ImGui_GetWindowPos_: * details::function([*c]void (ImGui_Context,[*c]f64,*anyopaque);
pub const GetWindowPos = _1_ImGui_GetWindowPos_;

extern var _1_ImGui_GetWindowSize_: * details::function([*c]void (ImGui_Context,[*c]f64,*anyopaque);
pub const GetWindowSize = _1_ImGui_GetWindowSize_;

extern var _1_ImGui_GetWindowWidth_: * details::function(*anyopaque);
pub const GetWindowWidth = _1_ImGui_GetWindowWidth_;

extern var _1_ImGui_IsWindowAppearing_: * details::function(*anyopaque);
pub const IsWindowAppearing = _1_ImGui_IsWindowAppearing_;

extern var _1_ImGui_IsWindowFocused_: * details::function([*c]bool (ImGui_Context, details::optional(c_int)*anyopaque);
pub const IsWindowFocused = _1_ImGui_IsWindowFocused_;

extern var _1_ImGui_IsWindowHovered_: * details::function([*c]bool (ImGui_Context, details::optional(c_int)*anyopaque);
pub const IsWindowHovered = _1_ImGui_IsWindowHovered_;

extern var _1_ImGui_SetNextWindowBgAlpha_: * details::function([*c]void (ImGui_Context,*anyopaque);
pub const SetNextWindowBgAlpha = _1_ImGui_SetNextWindowBgAlpha_;

extern var _1_ImGui_SetNextWindowCollapsed_: * details::function([*c]void (ImGui_Context,bool, details::optional(c_int)*anyopaque);
pub const SetNextWindowCollapsed = _1_ImGui_SetNextWindowCollapsed_;

extern var _1_ImGui_SetNextWindowContentSize_: * details::function([*c]void (ImGui_Context,f64,*anyopaque);
pub const SetNextWindowContentSize = _1_ImGui_SetNextWindowContentSize_;

extern var _1_ImGui_SetNextWindowFocus_: * details::function(*anyopaque);
pub const SetNextWindowFocus = _1_ImGui_SetNextWindowFocus_;

extern var _1_ImGui_SetNextWindowPos_: * details::function([*c]void (ImGui_Context,f64,f64, details::optional(c_int), details::optional(f64), details::optional(f64)*anyopaque);
pub const SetNextWindowPos = _1_ImGui_SetNextWindowPos_;

extern var _1_ImGui_SetNextWindowScroll_: * details::function([*c]void (ImGui_Context,f64,*anyopaque);
pub const SetNextWindowScroll = _1_ImGui_SetNextWindowScroll_;

extern var _1_ImGui_SetNextWindowSize_: * details::function([*c]void (ImGui_Context,f64,f64, details::optional(c_int)*anyopaque);
pub const SetNextWindowSize = _1_ImGui_SetNextWindowSize_;

extern var _1_ImGui_SetNextWindowSizeConstraints_: * details::function([*c]void (ImGui_Context,f64,f64,f64,f64, details::optional([*c]ImGui_Function)*anyopaque);
pub const SetNextWindowSizeConstraints = _1_ImGui_SetNextWindowSizeConstraints_;

extern var _1_ImGui_SetWindowCollapsed_: * details::function([*c]void (ImGui_Context,bool, details::optional(c_int)*anyopaque);
pub const SetWindowCollapsed = _1_ImGui_SetWindowCollapsed_;

extern var _1_ImGui_SetWindowCollapsedEx_: * details::function([*c]void (ImGui_Context,[*c]const u8,bool, details::optional(c_int)*anyopaque);
pub const SetWindowCollapsedEx = _1_ImGui_SetWindowCollapsedEx_;

extern var _1_ImGui_SetWindowFocus_: * details::function(*anyopaque);
pub const SetWindowFocus = _1_ImGui_SetWindowFocus_;

extern var _1_ImGui_SetWindowFocusEx_: * details::function([*c]void (ImGui_Context,*anyopaque);
pub const SetWindowFocusEx = _1_ImGui_SetWindowFocusEx_;

extern var _1_ImGui_SetWindowPos_: * details::function([*c]void (ImGui_Context,f64,f64, details::optional(c_int)*anyopaque);
pub const SetWindowPos = _1_ImGui_SetWindowPos_;

extern var _1_ImGui_SetWindowPosEx_: * details::function([*c]void (ImGui_Context,[*c]const u8,f64,f64, details::optional(c_int)*anyopaque);
pub const SetWindowPosEx = _1_ImGui_SetWindowPosEx_;

extern var _1_ImGui_SetWindowSize_: * details::function([*c]void (ImGui_Context,f64,f64, details::optional(c_int)*anyopaque);
pub const SetWindowSize = _1_ImGui_SetWindowSize_;

extern var _1_ImGui_SetWindowSizeEx_: * details::function([*c]void (ImGui_Context,[*c]const u8,f64,f64, details::optional(c_int)*anyopaque);
pub const SetWindowSizeEx = _1_ImGui_SetWindowSizeEx_;

extern var _1_ImGui_FocusedFlags_AnyWindow_: * c_int;
pub const FocusedFlags_AnyWindow = _1_ImGui_FocusedFlags_AnyWindow_;

extern var _1_ImGui_FocusedFlags_ChildWindows_: * c_int;
pub const FocusedFlags_ChildWindows = _1_ImGui_FocusedFlags_ChildWindows_;

extern var _1_ImGui_FocusedFlags_DockHierarchy_: * c_int;
pub const FocusedFlags_DockHierarchy = _1_ImGui_FocusedFlags_DockHierarchy_;

extern var _1_ImGui_FocusedFlags_NoPopupHierarchy_: * c_int;
pub const FocusedFlags_NoPopupHierarchy = _1_ImGui_FocusedFlags_NoPopupHierarchy_;

extern var _1_ImGui_FocusedFlags_None_: * c_int;
pub const FocusedFlags_None = _1_ImGui_FocusedFlags_None_;

extern var _1_ImGui_FocusedFlags_RootAndChildWindows_: * c_int;
pub const FocusedFlags_RootAndChildWindows = _1_ImGui_FocusedFlags_RootAndChildWindows_;

extern var _1_ImGui_FocusedFlags_RootWindow_: * c_int;
pub const FocusedFlags_RootWindow = _1_ImGui_FocusedFlags_RootWindow_;

extern var _1_ImGui_GetScrollMaxX_: * details::function(*anyopaque);
pub const GetScrollMaxX = _1_ImGui_GetScrollMaxX_;

extern var _1_ImGui_GetScrollMaxY_: * details::function(*anyopaque);
pub const GetScrollMaxY = _1_ImGui_GetScrollMaxY_;

extern var _1_ImGui_GetScrollX_: * details::function(*anyopaque);
pub const GetScrollX = _1_ImGui_GetScrollX_;

extern var _1_ImGui_GetScrollY_: * details::function(*anyopaque);
pub const GetScrollY = _1_ImGui_GetScrollY_;

extern var _1_ImGui_SetScrollFromPosX_: * details::function([*c]void (ImGui_Context,f64, details::optional(f64)*anyopaque);
pub const SetScrollFromPosX = _1_ImGui_SetScrollFromPosX_;

extern var _1_ImGui_SetScrollFromPosY_: * details::function([*c]void (ImGui_Context,f64, details::optional(f64)*anyopaque);
pub const SetScrollFromPosY = _1_ImGui_SetScrollFromPosY_;

extern var _1_ImGui_SetScrollHereX_: * details::function([*c]void (ImGui_Context, details::optional(f64)*anyopaque);
pub const SetScrollHereX = _1_ImGui_SetScrollHereX_;

extern var _1_ImGui_SetScrollHereY_: * details::function([*c]void (ImGui_Context, details::optional(f64)*anyopaque);
pub const SetScrollHereY = _1_ImGui_SetScrollHereY_;

extern var _1_ImGui_SetScrollX_: * details::function([*c]void (ImGui_Context,*anyopaque);
pub const SetScrollX = _1_ImGui_SetScrollX_;

extern var _1_ImGui_SetScrollY_: * details::function([*c]void (ImGui_Context,*anyopaque);
pub const SetScrollY = _1_ImGui_SetScrollY_;

};



// opaques

const ImGui_Context = anyopaque;
const ImGui_DrawList = anyopaque;
const ImGui_DrawListSplitter = anyopaque;
const ImGui_Font = anyopaque;
const ImGui_Function = anyopaque;
const ImGui_Image = anyopaque;
const ImGui_ImageSet = anyopaque;
const ImGui_ListClipper = anyopaque;
const ImGui_Resource = anyopaque;
const ImGui_TextFilter = anyopaque;
const ImGui_Viewport = anyopaque;
const reaper_array = anyopaque;
