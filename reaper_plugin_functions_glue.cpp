// auto generated by c2z
#include <new>
#include "reaper_plugin_functions.h"

extern "C" const void* _1___mergesort_ = (void*)& ::__mergesort;
extern "C" const void* _1_AddCustomizableMenu_ = (void*)& ::AddCustomizableMenu;
extern "C" const void* _1_AddExtensionsMainMenu_ = (void*)& ::AddExtensionsMainMenu;
extern "C" const void* _1_AddMediaItemToTrack_ = (void*)& ::AddMediaItemToTrack;
extern "C" const void* _1_AddProjectMarker_ = (void*)& ::AddProjectMarker;
extern "C" const void* _1_AddProjectMarker2_ = (void*)& ::AddProjectMarker2;
extern "C" const void* _1_AddRemoveReaScript_ = (void*)& ::AddRemoveReaScript;
extern "C" const void* _1_AddTakeToMediaItem_ = (void*)& ::AddTakeToMediaItem;
extern "C" const void* _1_AddTempoTimeSigMarker_ = (void*)& ::AddTempoTimeSigMarker;
extern "C" const void* _1_adjustZoom_ = (void*)& ::adjustZoom;
extern "C" const void* _1_AnyTrackSolo_ = (void*)& ::AnyTrackSolo;
extern "C" const void* _1_APIExists_ = (void*)& ::APIExists;
extern "C" const void* _1_APITest_ = (void*)& ::APITest;
extern "C" const void* _1_ApplyNudge_ = (void*)& ::ApplyNudge;
extern "C" const void* _1_ArmCommand_ = (void*)& ::ArmCommand;
extern "C" const void* _1_Audio_Init_ = (void*)& ::Audio_Init;
extern "C" const void* _1_Audio_IsPreBuffer_ = (void*)& ::Audio_IsPreBuffer;
extern "C" const void* _1_Audio_IsRunning_ = (void*)& ::Audio_IsRunning;
extern "C" const void* _1_Audio_Quit_ = (void*)& ::Audio_Quit;
extern "C" const void* _1_Audio_RegHardwareHook_ = (void*)& ::Audio_RegHardwareHook;
extern "C" const void* _1_AudioAccessorStateChanged_ = (void*)& ::AudioAccessorStateChanged;
extern "C" const void* _1_AudioAccessorUpdate_ = (void*)& ::AudioAccessorUpdate;
extern "C" const void* _1_AudioAccessorValidateState_ = (void*)& ::AudioAccessorValidateState;
extern "C" const void* _1_BypassFxAllTracks_ = (void*)& ::BypassFxAllTracks;
extern "C" const void* _1_CalculatePeaks_ = (void*)& ::CalculatePeaks;
extern "C" const void* _1_CalculatePeaksFloatSrcPtr_ = (void*)& ::CalculatePeaksFloatSrcPtr;
extern "C" const void* _1_ClearAllRecArmed_ = (void*)& ::ClearAllRecArmed;
extern "C" const void* _1_ClearConsole_ = (void*)& ::ClearConsole;
extern "C" const void* _1_ClearPeakCache_ = (void*)& ::ClearPeakCache;
extern "C" const void* _1_ColorFromNative_ = (void*)& ::ColorFromNative;
extern "C" const void* _1_ColorToNative_ = (void*)& ::ColorToNative;
extern "C" const void* _1_CountActionShortcuts_ = (void*)& ::CountActionShortcuts;
extern "C" const void* _1_CountAutomationItems_ = (void*)& ::CountAutomationItems;
extern "C" const void* _1_CountEnvelopePoints_ = (void*)& ::CountEnvelopePoints;
extern "C" const void* _1_CountEnvelopePointsEx_ = (void*)& ::CountEnvelopePointsEx;
extern "C" const void* _1_CountMediaItems_ = (void*)& ::CountMediaItems;
extern "C" const void* _1_CountProjectMarkers_ = (void*)& ::CountProjectMarkers;
extern "C" const void* _1_CountSelectedMediaItems_ = (void*)& ::CountSelectedMediaItems;
extern "C" const void* _1_CountSelectedTracks_ = (void*)& ::CountSelectedTracks;
extern "C" const void* _1_CountSelectedTracks2_ = (void*)& ::CountSelectedTracks2;
extern "C" const void* _1_CountTakeEnvelopes_ = (void*)& ::CountTakeEnvelopes;
extern "C" const void* _1_CountTakes_ = (void*)& ::CountTakes;
extern "C" const void* _1_CountTCPFXParms_ = (void*)& ::CountTCPFXParms;
extern "C" const void* _1_CountTempoTimeSigMarkers_ = (void*)& ::CountTempoTimeSigMarkers;
extern "C" const void* _1_CountTrackEnvelopes_ = (void*)& ::CountTrackEnvelopes;
extern "C" const void* _1_CountTrackMediaItems_ = (void*)& ::CountTrackMediaItems;
extern "C" const void* _1_CountTracks_ = (void*)& ::CountTracks;
extern "C" const void* _1_CreateLocalOscHandler_ = (void*)& ::CreateLocalOscHandler;
extern "C" const void* _1_CreateMIDIInput_ = (void*)& ::CreateMIDIInput;
extern "C" const void* _1_CreateMIDIOutput_ = (void*)& ::CreateMIDIOutput;
extern "C" const void* _1_CreateNewMIDIItemInProj_ = (void*)& ::CreateNewMIDIItemInProj;
extern "C" const void* _1_CreateTakeAudioAccessor_ = (void*)& ::CreateTakeAudioAccessor;
extern "C" const void* _1_CreateTrackAudioAccessor_ = (void*)& ::CreateTrackAudioAccessor;
extern "C" const void* _1_CreateTrackSend_ = (void*)& ::CreateTrackSend;
extern "C" const void* _1_CSurf_FlushUndo_ = (void*)& ::CSurf_FlushUndo;
extern "C" const void* _1_CSurf_GetTouchState_ = (void*)& ::CSurf_GetTouchState;
extern "C" const void* _1_CSurf_GoEnd_ = (void*)& ::CSurf_GoEnd;
extern "C" const void* _1_CSurf_GoStart_ = (void*)& ::CSurf_GoStart;
extern "C" const void* _1_CSurf_NumTracks_ = (void*)& ::CSurf_NumTracks;
extern "C" const void* _1_CSurf_OnArrow_ = (void*)& ::CSurf_OnArrow;
extern "C" const void* _1_CSurf_OnFwd_ = (void*)& ::CSurf_OnFwd;
extern "C" const void* _1_CSurf_OnFXChange_ = (void*)& ::CSurf_OnFXChange;
extern "C" const void* _1_CSurf_OnInputMonitorChange_ = (void*)& ::CSurf_OnInputMonitorChange;
extern "C" const void* _1_CSurf_OnInputMonitorChangeEx_ = (void*)& ::CSurf_OnInputMonitorChangeEx;
extern "C" const void* _1_CSurf_OnMuteChange_ = (void*)& ::CSurf_OnMuteChange;
extern "C" const void* _1_CSurf_OnMuteChangeEx_ = (void*)& ::CSurf_OnMuteChangeEx;
extern "C" const void* _1_CSurf_OnOscControlMessage_ = (void*)& ::CSurf_OnOscControlMessage;
extern "C" const void* _1_CSurf_OnPanChange_ = (void*)& ::CSurf_OnPanChange;
extern "C" const void* _1_CSurf_OnPanChangeEx_ = (void*)& ::CSurf_OnPanChangeEx;
extern "C" const void* _1_CSurf_OnPause_ = (void*)& ::CSurf_OnPause;
extern "C" const void* _1_CSurf_OnPlay_ = (void*)& ::CSurf_OnPlay;
extern "C" const void* _1_CSurf_OnPlayRateChange_ = (void*)& ::CSurf_OnPlayRateChange;
extern "C" const void* _1_CSurf_OnRecArmChange_ = (void*)& ::CSurf_OnRecArmChange;
extern "C" const void* _1_CSurf_OnRecArmChangeEx_ = (void*)& ::CSurf_OnRecArmChangeEx;
extern "C" const void* _1_CSurf_OnRecord_ = (void*)& ::CSurf_OnRecord;
extern "C" const void* _1_CSurf_OnRecvPanChange_ = (void*)& ::CSurf_OnRecvPanChange;
extern "C" const void* _1_CSurf_OnRecvVolumeChange_ = (void*)& ::CSurf_OnRecvVolumeChange;
extern "C" const void* _1_CSurf_OnRew_ = (void*)& ::CSurf_OnRew;
extern "C" const void* _1_CSurf_OnRewFwd_ = (void*)& ::CSurf_OnRewFwd;
extern "C" const void* _1_CSurf_OnScroll_ = (void*)& ::CSurf_OnScroll;
extern "C" const void* _1_CSurf_OnSelectedChange_ = (void*)& ::CSurf_OnSelectedChange;
extern "C" const void* _1_CSurf_OnSendPanChange_ = (void*)& ::CSurf_OnSendPanChange;
extern "C" const void* _1_CSurf_OnSendVolumeChange_ = (void*)& ::CSurf_OnSendVolumeChange;
extern "C" const void* _1_CSurf_OnSoloChange_ = (void*)& ::CSurf_OnSoloChange;
extern "C" const void* _1_CSurf_OnSoloChangeEx_ = (void*)& ::CSurf_OnSoloChangeEx;
extern "C" const void* _1_CSurf_OnStop_ = (void*)& ::CSurf_OnStop;
extern "C" const void* _1_CSurf_OnTempoChange_ = (void*)& ::CSurf_OnTempoChange;
extern "C" const void* _1_CSurf_OnTrackSelection_ = (void*)& ::CSurf_OnTrackSelection;
extern "C" const void* _1_CSurf_OnVolumeChange_ = (void*)& ::CSurf_OnVolumeChange;
extern "C" const void* _1_CSurf_OnVolumeChangeEx_ = (void*)& ::CSurf_OnVolumeChangeEx;
extern "C" const void* _1_CSurf_OnWidthChange_ = (void*)& ::CSurf_OnWidthChange;
extern "C" const void* _1_CSurf_OnWidthChangeEx_ = (void*)& ::CSurf_OnWidthChangeEx;
extern "C" const void* _1_CSurf_OnZoom_ = (void*)& ::CSurf_OnZoom;
extern "C" const void* _1_CSurf_ResetAllCachedVolPanStates_ = (void*)& ::CSurf_ResetAllCachedVolPanStates;
extern "C" const void* _1_CSurf_ScrubAmt_ = (void*)& ::CSurf_ScrubAmt;
extern "C" const void* _1_CSurf_SetAutoMode_ = (void*)& ::CSurf_SetAutoMode;
extern "C" const void* _1_CSurf_SetPlayState_ = (void*)& ::CSurf_SetPlayState;
extern "C" const void* _1_CSurf_SetRepeatState_ = (void*)& ::CSurf_SetRepeatState;
extern "C" const void* _1_CSurf_SetSurfaceMute_ = (void*)& ::CSurf_SetSurfaceMute;
extern "C" const void* _1_CSurf_SetSurfacePan_ = (void*)& ::CSurf_SetSurfacePan;
extern "C" const void* _1_CSurf_SetSurfaceRecArm_ = (void*)& ::CSurf_SetSurfaceRecArm;
extern "C" const void* _1_CSurf_SetSurfaceSelected_ = (void*)& ::CSurf_SetSurfaceSelected;
extern "C" const void* _1_CSurf_SetSurfaceSolo_ = (void*)& ::CSurf_SetSurfaceSolo;
extern "C" const void* _1_CSurf_SetSurfaceVolume_ = (void*)& ::CSurf_SetSurfaceVolume;
extern "C" const void* _1_CSurf_SetTrackListChange_ = (void*)& ::CSurf_SetTrackListChange;
extern "C" const void* _1_CSurf_TrackFromID_ = (void*)& ::CSurf_TrackFromID;
extern "C" const void* _1_CSurf_TrackToID_ = (void*)& ::CSurf_TrackToID;
extern "C" const void* _1_DB2SLIDER_ = (void*)& ::DB2SLIDER;
extern "C" const void* _1_DeleteActionShortcut_ = (void*)& ::DeleteActionShortcut;
extern "C" const void* _1_DeleteEnvelopePointEx_ = (void*)& ::DeleteEnvelopePointEx;
extern "C" const void* _1_DeleteEnvelopePointRange_ = (void*)& ::DeleteEnvelopePointRange;
extern "C" const void* _1_DeleteEnvelopePointRangeEx_ = (void*)& ::DeleteEnvelopePointRangeEx;
extern "C" const void* _1_DeleteExtState_ = (void*)& ::DeleteExtState;
extern "C" const void* _1_DeleteProjectMarker_ = (void*)& ::DeleteProjectMarker;
extern "C" const void* _1_DeleteProjectMarkerByIndex_ = (void*)& ::DeleteProjectMarkerByIndex;
extern "C" const void* _1_DeleteTakeMarker_ = (void*)& ::DeleteTakeMarker;
extern "C" const void* _1_DeleteTakeStretchMarkers_ = (void*)& ::DeleteTakeStretchMarkers;
extern "C" const void* _1_DeleteTempoTimeSigMarker_ = (void*)& ::DeleteTempoTimeSigMarker;
extern "C" const void* _1_DeleteTrack_ = (void*)& ::DeleteTrack;
extern "C" const void* _1_DeleteTrackMediaItem_ = (void*)& ::DeleteTrackMediaItem;
extern "C" const void* _1_DestroyAudioAccessor_ = (void*)& ::DestroyAudioAccessor;
extern "C" const void* _1_DestroyLocalOscHandler_ = (void*)& ::DestroyLocalOscHandler;
extern "C" const void* _1_DoActionShortcutDialog_ = (void*)& ::DoActionShortcutDialog;
extern "C" const void* _1_Dock_UpdateDockID_ = (void*)& ::Dock_UpdateDockID;
extern "C" const void* _1_DockGetPosition_ = (void*)& ::DockGetPosition;
extern "C" const void* _1_DockIsChildOfDock_ = (void*)& ::DockIsChildOfDock;
extern "C" const void* _1_DockWindowActivate_ = (void*)& ::DockWindowActivate;
extern "C" const void* _1_DockWindowAdd_ = (void*)& ::DockWindowAdd;
extern "C" const void* _1_DockWindowAddEx_ = (void*)& ::DockWindowAddEx;
extern "C" const void* _1_DockWindowRefresh_ = (void*)& ::DockWindowRefresh;
extern "C" const void* _1_DockWindowRefreshForHWND_ = (void*)& ::DockWindowRefreshForHWND;
extern "C" const void* _1_DockWindowRemove_ = (void*)& ::DockWindowRemove;
extern "C" const void* _1_DuplicateCustomizableMenu_ = (void*)& ::DuplicateCustomizableMenu;
extern "C" const void* _1_EditTempoTimeSigMarker_ = (void*)& ::EditTempoTimeSigMarker;
extern "C" const void* _1_EnsureNotCompletelyOffscreen_ = (void*)& ::EnsureNotCompletelyOffscreen;
extern "C" const void* _1_EnumerateFiles_ = (void*)& ::EnumerateFiles;
extern "C" const void* _1_EnumerateSubdirectories_ = (void*)& ::EnumerateSubdirectories;
extern "C" const void* _1_EnumPitchShiftModes_ = (void*)& ::EnumPitchShiftModes;
extern "C" const void* _1_EnumPitchShiftSubModes_ = (void*)& ::EnumPitchShiftSubModes;
extern "C" const void* _1_EnumProjectMarkers_ = (void*)& ::EnumProjectMarkers;
extern "C" const void* _1_EnumProjectMarkers2_ = (void*)& ::EnumProjectMarkers2;
extern "C" const void* _1_EnumProjectMarkers3_ = (void*)& ::EnumProjectMarkers3;
extern "C" const void* _1_EnumProjects_ = (void*)& ::EnumProjects;
extern "C" const void* _1_EnumProjExtState_ = (void*)& ::EnumProjExtState;
extern "C" const void* _1_EnumRegionRenderMatrix_ = (void*)& ::EnumRegionRenderMatrix;
extern "C" const void* _1_EnumTrackMIDIProgramNames_ = (void*)& ::EnumTrackMIDIProgramNames;
extern "C" const void* _1_EnumTrackMIDIProgramNamesEx_ = (void*)& ::EnumTrackMIDIProgramNamesEx;
extern "C" const void* _1_Envelope_Evaluate_ = (void*)& ::Envelope_Evaluate;
extern "C" const void* _1_Envelope_FormatValue_ = (void*)& ::Envelope_FormatValue;
extern "C" const void* _1_Envelope_GetParentTake_ = (void*)& ::Envelope_GetParentTake;
extern "C" const void* _1_Envelope_GetParentTrack_ = (void*)& ::Envelope_GetParentTrack;
extern "C" const void* _1_Envelope_SortPoints_ = (void*)& ::Envelope_SortPoints;
extern "C" const void* _1_Envelope_SortPointsEx_ = (void*)& ::Envelope_SortPointsEx;
extern "C" const void* _1_ExecProcess_ = (void*)& ::ExecProcess;
extern "C" const void* _1_file_exists_ = (void*)& ::file_exists;
extern "C" const void* _1_FindTempoTimeSigMarker_ = (void*)& ::FindTempoTimeSigMarker;
extern "C" const void* _1_format_timestr_ = (void*)& ::format_timestr;
extern "C" const void* _1_format_timestr_len_ = (void*)& ::format_timestr_len;
extern "C" const void* _1_format_timestr_pos_ = (void*)& ::format_timestr_pos;
extern "C" const void* _1_FreeHeapPtr_ = (void*)& ::FreeHeapPtr;
extern "C" const void* _1_genGuid_ = (void*)& ::genGuid;
extern "C" const void* _1_get_config_var_ = (void*)& ::get_config_var;
extern "C" const void* _1_get_config_var_string_ = (void*)& ::get_config_var_string;
extern "C" const void* _1_get_ini_file_ = (void*)& ::get_ini_file;
extern "C" const void* _1_get_midi_config_var_ = (void*)& ::get_midi_config_var;
extern "C" const void* _1_GetActionShortcutDesc_ = (void*)& ::GetActionShortcutDesc;
extern "C" const void* _1_GetActiveTake_ = (void*)& ::GetActiveTake;
extern "C" const void* _1_GetAllProjectPlayStates_ = (void*)& ::GetAllProjectPlayStates;
extern "C" const void* _1_GetAppVersion_ = (void*)& ::GetAppVersion;
extern "C" const void* _1_GetArmedCommand_ = (void*)& ::GetArmedCommand;
extern "C" const void* _1_GetAudioAccessorEndTime_ = (void*)& ::GetAudioAccessorEndTime;
extern "C" const void* _1_GetAudioAccessorHash_ = (void*)& ::GetAudioAccessorHash;
extern "C" const void* _1_GetAudioAccessorSamples_ = (void*)& ::GetAudioAccessorSamples;
extern "C" const void* _1_GetAudioAccessorStartTime_ = (void*)& ::GetAudioAccessorStartTime;
extern "C" const void* _1_GetAudioDeviceInfo_ = (void*)& ::GetAudioDeviceInfo;
extern "C" const void* _1_GetColorTheme_ = (void*)& ::GetColorTheme;
extern "C" const void* _1_GetColorThemeStruct_ = (void*)& ::GetColorThemeStruct;
extern "C" const void* _1_GetConfigWantsDock_ = (void*)& ::GetConfigWantsDock;
extern "C" const void* _1_GetContextMenu_ = (void*)& ::GetContextMenu;
extern "C" const void* _1_GetCurrentProjectInLoadSave_ = (void*)& ::GetCurrentProjectInLoadSave;
extern "C" const void* _1_GetCursorContext_ = (void*)& ::GetCursorContext;
extern "C" const void* _1_GetCursorContext2_ = (void*)& ::GetCursorContext2;
extern "C" const void* _1_GetCursorPosition_ = (void*)& ::GetCursorPosition;
extern "C" const void* _1_GetCursorPositionEx_ = (void*)& ::GetCursorPositionEx;
extern "C" const void* _1_GetDisplayedMediaItemColor_ = (void*)& ::GetDisplayedMediaItemColor;
extern "C" const void* _1_GetDisplayedMediaItemColor2_ = (void*)& ::GetDisplayedMediaItemColor2;
extern "C" const void* _1_GetEnvelopeInfo_Value_ = (void*)& ::GetEnvelopeInfo_Value;
extern "C" const void* _1_GetEnvelopeName_ = (void*)& ::GetEnvelopeName;
extern "C" const void* _1_GetEnvelopePoint_ = (void*)& ::GetEnvelopePoint;
extern "C" const void* _1_GetEnvelopePointByTime_ = (void*)& ::GetEnvelopePointByTime;
extern "C" const void* _1_GetEnvelopePointByTimeEx_ = (void*)& ::GetEnvelopePointByTimeEx;
extern "C" const void* _1_GetEnvelopePointEx_ = (void*)& ::GetEnvelopePointEx;
extern "C" const void* _1_GetEnvelopeScalingMode_ = (void*)& ::GetEnvelopeScalingMode;
extern "C" const void* _1_GetEnvelopeStateChunk_ = (void*)& ::GetEnvelopeStateChunk;
extern "C" const void* _1_GetExePath_ = (void*)& ::GetExePath;
extern "C" const void* _1_GetExtState_ = (void*)& ::GetExtState;
extern "C" const void* _1_GetFocusedFX_ = (void*)& ::GetFocusedFX;
extern "C" const void* _1_GetFocusedFX2_ = (void*)& ::GetFocusedFX2;
extern "C" const void* _1_GetFreeDiskSpaceForRecordPath_ = (void*)& ::GetFreeDiskSpaceForRecordPath;
extern "C" const void* _1_GetFXEnvelope_ = (void*)& ::GetFXEnvelope;
extern "C" const void* _1_GetGlobalAutomationOverride_ = (void*)& ::GetGlobalAutomationOverride;
extern "C" const void* _1_GetHZoomLevel_ = (void*)& ::GetHZoomLevel;
extern "C" const void* _1_GetIconThemePointer_ = (void*)& ::GetIconThemePointer;
extern "C" const void* _1_GetIconThemePointerForDPI_ = (void*)& ::GetIconThemePointerForDPI;
extern "C" const void* _1_GetIconThemeStruct_ = (void*)& ::GetIconThemeStruct;
extern "C" const void* _1_GetInputChannelName_ = (void*)& ::GetInputChannelName;
extern "C" const void* _1_GetInputOutputLatency_ = (void*)& ::GetInputOutputLatency;
extern "C" const void* _1_GetItemEditingTime2_ = (void*)& ::GetItemEditingTime2;
extern "C" const void* _1_GetItemFromPoint_ = (void*)& ::GetItemFromPoint;
extern "C" const void* _1_GetItemProjectContext_ = (void*)& ::GetItemProjectContext;
extern "C" const void* _1_GetItemStateChunk_ = (void*)& ::GetItemStateChunk;
extern "C" const void* _1_GetLastColorThemeFile_ = (void*)& ::GetLastColorThemeFile;
extern "C" const void* _1_GetLastMarkerAndCurRegion_ = (void*)& ::GetLastMarkerAndCurRegion;
extern "C" const void* _1_GetLastTouchedFX_ = (void*)& ::GetLastTouchedFX;
extern "C" const void* _1_GetLastTouchedTrack_ = (void*)& ::GetLastTouchedTrack;
extern "C" const void* _1_GetMainHwnd_ = (void*)& ::GetMainHwnd;
extern "C" const void* _1_GetMasterMuteSoloFlags_ = (void*)& ::GetMasterMuteSoloFlags;
extern "C" const void* _1_GetMasterTrack_ = (void*)& ::GetMasterTrack;
extern "C" const void* _1_GetMasterTrackVisibility_ = (void*)& ::GetMasterTrackVisibility;
extern "C" const void* _1_GetMaxMidiInputs_ = (void*)& ::GetMaxMidiInputs;
extern "C" const void* _1_GetMaxMidiOutputs_ = (void*)& ::GetMaxMidiOutputs;
extern "C" const void* _1_GetMediaFileMetadata_ = (void*)& ::GetMediaFileMetadata;
extern "C" const void* _1_GetMediaItem_ = (void*)& ::GetMediaItem;
extern "C" const void* _1_GetMediaItem_Track_ = (void*)& ::GetMediaItem_Track;
extern "C" const void* _1_GetMediaItemInfo_Value_ = (void*)& ::GetMediaItemInfo_Value;
extern "C" const void* _1_GetMediaItemNumTakes_ = (void*)& ::GetMediaItemNumTakes;
extern "C" const void* _1_GetMediaItemTake_ = (void*)& ::GetMediaItemTake;
extern "C" const void* _1_GetMediaItemTake_Item_ = (void*)& ::GetMediaItemTake_Item;
extern "C" const void* _1_GetMediaItemTake_Peaks_ = (void*)& ::GetMediaItemTake_Peaks;
extern "C" const void* _1_GetMediaItemTake_Source_ = (void*)& ::GetMediaItemTake_Source;
extern "C" const void* _1_GetMediaItemTake_Track_ = (void*)& ::GetMediaItemTake_Track;
extern "C" const void* _1_GetMediaItemTakeByGUID_ = (void*)& ::GetMediaItemTakeByGUID;
extern "C" const void* _1_GetMediaItemTakeInfo_Value_ = (void*)& ::GetMediaItemTakeInfo_Value;
extern "C" const void* _1_GetMediaItemTrack_ = (void*)& ::GetMediaItemTrack;
extern "C" const void* _1_GetMediaSourceFileName_ = (void*)& ::GetMediaSourceFileName;
extern "C" const void* _1_GetMediaSourceLength_ = (void*)& ::GetMediaSourceLength;
extern "C" const void* _1_GetMediaSourceNumChannels_ = (void*)& ::GetMediaSourceNumChannels;
extern "C" const void* _1_GetMediaSourceParent_ = (void*)& ::GetMediaSourceParent;
extern "C" const void* _1_GetMediaSourceSampleRate_ = (void*)& ::GetMediaSourceSampleRate;
extern "C" const void* _1_GetMediaSourceType_ = (void*)& ::GetMediaSourceType;
extern "C" const void* _1_GetMediaTrackInfo_Value_ = (void*)& ::GetMediaTrackInfo_Value;
extern "C" const void* _1_GetMIDIInputName_ = (void*)& ::GetMIDIInputName;
extern "C" const void* _1_GetMIDIOutputName_ = (void*)& ::GetMIDIOutputName;
extern "C" const void* _1_GetMixerScroll_ = (void*)& ::GetMixerScroll;
extern "C" const void* _1_GetMouseModifier_ = (void*)& ::GetMouseModifier;
extern "C" const void* _1_GetMousePosition_ = (void*)& ::GetMousePosition;
extern "C" const void* _1_GetNumAudioInputs_ = (void*)& ::GetNumAudioInputs;
extern "C" const void* _1_GetNumAudioOutputs_ = (void*)& ::GetNumAudioOutputs;
extern "C" const void* _1_GetNumMIDIInputs_ = (void*)& ::GetNumMIDIInputs;
extern "C" const void* _1_GetNumMIDIOutputs_ = (void*)& ::GetNumMIDIOutputs;
extern "C" const void* _1_GetNumTakeMarkers_ = (void*)& ::GetNumTakeMarkers;
extern "C" const void* _1_GetNumTracks_ = (void*)& ::GetNumTracks;
extern "C" const void* _1_GetOS_ = (void*)& ::GetOS;
extern "C" const void* _1_GetOutputChannelName_ = (void*)& ::GetOutputChannelName;
extern "C" const void* _1_GetOutputLatency_ = (void*)& ::GetOutputLatency;
extern "C" const void* _1_GetParentTrack_ = (void*)& ::GetParentTrack;
extern "C" const void* _1_GetPeakFileName_ = (void*)& ::GetPeakFileName;
extern "C" const void* _1_GetPeakFileNameEx_ = (void*)& ::GetPeakFileNameEx;
extern "C" const void* _1_GetPeakFileNameEx2_ = (void*)& ::GetPeakFileNameEx2;
extern "C" const void* _1_GetPeaksBitmap_ = (void*)& ::GetPeaksBitmap;
extern "C" const void* _1_GetPlayPosition_ = (void*)& ::GetPlayPosition;
extern "C" const void* _1_GetPlayPosition2_ = (void*)& ::GetPlayPosition2;
extern "C" const void* _1_GetPlayPosition2Ex_ = (void*)& ::GetPlayPosition2Ex;
extern "C" const void* _1_GetPlayPositionEx_ = (void*)& ::GetPlayPositionEx;
extern "C" const void* _1_GetPlayState_ = (void*)& ::GetPlayState;
extern "C" const void* _1_GetPlayStateEx_ = (void*)& ::GetPlayStateEx;
extern "C" const void* _1_GetPreferredDiskReadMode_ = (void*)& ::GetPreferredDiskReadMode;
extern "C" const void* _1_GetPreferredDiskReadModePeak_ = (void*)& ::GetPreferredDiskReadModePeak;
extern "C" const void* _1_GetPreferredDiskWriteMode_ = (void*)& ::GetPreferredDiskWriteMode;
extern "C" const void* _1_GetProjectLength_ = (void*)& ::GetProjectLength;
extern "C" const void* _1_GetProjectName_ = (void*)& ::GetProjectName;
extern "C" const void* _1_GetProjectPath_ = (void*)& ::GetProjectPath;
extern "C" const void* _1_GetProjectPathEx_ = (void*)& ::GetProjectPathEx;
extern "C" const void* _1_GetProjectStateChangeCount_ = (void*)& ::GetProjectStateChangeCount;
extern "C" const void* _1_GetProjectTimeOffset_ = (void*)& ::GetProjectTimeOffset;
extern "C" const void* _1_GetProjectTimeSignature_ = (void*)& ::GetProjectTimeSignature;
extern "C" const void* _1_GetProjectTimeSignature2_ = (void*)& ::GetProjectTimeSignature2;
extern "C" const void* _1_GetProjExtState_ = (void*)& ::GetProjExtState;
extern "C" const void* _1_GetResourcePath_ = (void*)& ::GetResourcePath;
extern "C" const void* _1_GetSelectedEnvelope_ = (void*)& ::GetSelectedEnvelope;
extern "C" const void* _1_GetSelectedMediaItem_ = (void*)& ::GetSelectedMediaItem;
extern "C" const void* _1_GetSelectedTrack_ = (void*)& ::GetSelectedTrack;
extern "C" const void* _1_GetSelectedTrack2_ = (void*)& ::GetSelectedTrack2;
extern "C" const void* _1_GetSelectedTrackEnvelope_ = (void*)& ::GetSelectedTrackEnvelope;
extern "C" const void* _1_GetSet_ArrangeView2_ = (void*)& ::GetSet_ArrangeView2;
extern "C" const void* _1_GetSet_LoopTimeRange_ = (void*)& ::GetSet_LoopTimeRange;
extern "C" const void* _1_GetSet_LoopTimeRange2_ = (void*)& ::GetSet_LoopTimeRange2;
extern "C" const void* _1_GetSetAutomationItemInfo_ = (void*)& ::GetSetAutomationItemInfo;
extern "C" const void* _1_GetSetAutomationItemInfo_String_ = (void*)& ::GetSetAutomationItemInfo_String;
extern "C" const void* _1_GetSetEnvelopeInfo_String_ = (void*)& ::GetSetEnvelopeInfo_String;
extern "C" const void* _1_GetSetEnvelopeState_ = (void*)& ::GetSetEnvelopeState;
extern "C" const void* _1_GetSetEnvelopeState2_ = (void*)& ::GetSetEnvelopeState2;
extern "C" const void* _1_GetSetItemState_ = (void*)& ::GetSetItemState;
extern "C" const void* _1_GetSetItemState2_ = (void*)& ::GetSetItemState2;
extern "C" const void* _1_GetSetMediaItemInfo_ = (void*)& ::GetSetMediaItemInfo;
extern "C" const void* _1_GetSetMediaItemInfo_String_ = (void*)& ::GetSetMediaItemInfo_String;
extern "C" const void* _1_GetSetMediaItemTakeInfo_ = (void*)& ::GetSetMediaItemTakeInfo;
extern "C" const void* _1_GetSetMediaItemTakeInfo_String_ = (void*)& ::GetSetMediaItemTakeInfo_String;
extern "C" const void* _1_GetSetMediaTrackInfo_ = (void*)& ::GetSetMediaTrackInfo;
extern "C" const void* _1_GetSetMediaTrackInfo_String_ = (void*)& ::GetSetMediaTrackInfo_String;
extern "C" const void* _1_GetSetObjectState_ = (void*)& ::GetSetObjectState;
extern "C" const void* _1_GetSetObjectState2_ = (void*)& ::GetSetObjectState2;
extern "C" const void* _1_GetSetProjectAuthor_ = (void*)& ::GetSetProjectAuthor;
extern "C" const void* _1_GetSetProjectGrid_ = (void*)& ::GetSetProjectGrid;
extern "C" const void* _1_GetSetProjectInfo_ = (void*)& ::GetSetProjectInfo;
extern "C" const void* _1_GetSetProjectInfo_String_ = (void*)& ::GetSetProjectInfo_String;
extern "C" const void* _1_GetSetProjectNotes_ = (void*)& ::GetSetProjectNotes;
extern "C" const void* _1_GetSetRepeat_ = (void*)& ::GetSetRepeat;
extern "C" const void* _1_GetSetRepeatEx_ = (void*)& ::GetSetRepeatEx;
extern "C" const void* _1_GetSetTrackGroupMembership_ = (void*)& ::GetSetTrackGroupMembership;
extern "C" const void* _1_GetSetTrackGroupMembershipHigh_ = (void*)& ::GetSetTrackGroupMembershipHigh;
extern "C" const void* _1_GetSetTrackMIDISupportFile_ = (void*)& ::GetSetTrackMIDISupportFile;
extern "C" const void* _1_GetSetTrackSendInfo_ = (void*)& ::GetSetTrackSendInfo;
extern "C" const void* _1_GetSetTrackSendInfo_String_ = (void*)& ::GetSetTrackSendInfo_String;
extern "C" const void* _1_GetSetTrackState_ = (void*)& ::GetSetTrackState;
extern "C" const void* _1_GetSetTrackState2_ = (void*)& ::GetSetTrackState2;
extern "C" const void* _1_GetSubProjectFromSource_ = (void*)& ::GetSubProjectFromSource;
extern "C" const void* _1_GetTake_ = (void*)& ::GetTake;
extern "C" const void* _1_GetTakeEnvelope_ = (void*)& ::GetTakeEnvelope;
extern "C" const void* _1_GetTakeEnvelopeByName_ = (void*)& ::GetTakeEnvelopeByName;
extern "C" const void* _1_GetTakeMarker_ = (void*)& ::GetTakeMarker;
extern "C" const void* _1_GetTakeName_ = (void*)& ::GetTakeName;
extern "C" const void* _1_GetTakeNumStretchMarkers_ = (void*)& ::GetTakeNumStretchMarkers;
extern "C" const void* _1_GetTakeStretchMarker_ = (void*)& ::GetTakeStretchMarker;
extern "C" const void* _1_GetTakeStretchMarkerSlope_ = (void*)& ::GetTakeStretchMarkerSlope;
extern "C" const void* _1_GetTCPFXParm_ = (void*)& ::GetTCPFXParm;
extern "C" const void* _1_GetTempoMatchPlayRate_ = (void*)& ::GetTempoMatchPlayRate;
extern "C" const void* _1_GetTempoTimeSigMarker_ = (void*)& ::GetTempoTimeSigMarker;
extern "C" const void* _1_GetThemeColor_ = (void*)& ::GetThemeColor;
extern "C" const void* _1_GetToggleCommandState_ = (void*)& ::GetToggleCommandState;
extern "C" const void* _1_GetToggleCommandState2_ = (void*)& ::GetToggleCommandState2;
extern "C" const void* _1_GetToggleCommandStateEx_ = (void*)& ::GetToggleCommandStateEx;
extern "C" const void* _1_GetToggleCommandStateThroughHooks_ = (void*)& ::GetToggleCommandStateThroughHooks;
extern "C" const void* _1_GetTooltipWindow_ = (void*)& ::GetTooltipWindow;
extern "C" const void* _1_GetTrack_ = (void*)& ::GetTrack;
extern "C" const void* _1_GetTrackAutomationMode_ = (void*)& ::GetTrackAutomationMode;
extern "C" const void* _1_GetTrackColor_ = (void*)& ::GetTrackColor;
extern "C" const void* _1_GetTrackDepth_ = (void*)& ::GetTrackDepth;
extern "C" const void* _1_GetTrackEnvelope_ = (void*)& ::GetTrackEnvelope;
extern "C" const void* _1_GetTrackEnvelopeByChunkName_ = (void*)& ::GetTrackEnvelopeByChunkName;
extern "C" const void* _1_GetTrackEnvelopeByName_ = (void*)& ::GetTrackEnvelopeByName;
extern "C" const void* _1_GetTrackFromPoint_ = (void*)& ::GetTrackFromPoint;
extern "C" const void* _1_GetTrackGUID_ = (void*)& ::GetTrackGUID;
extern "C" const void* _1_GetTrackInfo_ = (void*)& ::GetTrackInfo;
extern "C" const void* _1_GetTrackMediaItem_ = (void*)& ::GetTrackMediaItem;
extern "C" const void* _1_GetTrackMIDILyrics_ = (void*)& ::GetTrackMIDILyrics;
extern "C" const void* _1_GetTrackMIDINoteName_ = (void*)& ::GetTrackMIDINoteName;
extern "C" const void* _1_GetTrackMIDINoteNameEx_ = (void*)& ::GetTrackMIDINoteNameEx;
extern "C" const void* _1_GetTrackMIDINoteRange_ = (void*)& ::GetTrackMIDINoteRange;
extern "C" const void* _1_GetTrackName_ = (void*)& ::GetTrackName;
extern "C" const void* _1_GetTrackNumMediaItems_ = (void*)& ::GetTrackNumMediaItems;
extern "C" const void* _1_GetTrackNumSends_ = (void*)& ::GetTrackNumSends;
extern "C" const void* _1_GetTrackReceiveName_ = (void*)& ::GetTrackReceiveName;
extern "C" const void* _1_GetTrackReceiveUIMute_ = (void*)& ::GetTrackReceiveUIMute;
extern "C" const void* _1_GetTrackReceiveUIVolPan_ = (void*)& ::GetTrackReceiveUIVolPan;
extern "C" const void* _1_GetTrackSendInfo_Value_ = (void*)& ::GetTrackSendInfo_Value;
extern "C" const void* _1_GetTrackSendName_ = (void*)& ::GetTrackSendName;
extern "C" const void* _1_GetTrackSendUIMute_ = (void*)& ::GetTrackSendUIMute;
extern "C" const void* _1_GetTrackSendUIVolPan_ = (void*)& ::GetTrackSendUIVolPan;
extern "C" const void* _1_GetTrackState_ = (void*)& ::GetTrackState;
extern "C" const void* _1_GetTrackStateChunk_ = (void*)& ::GetTrackStateChunk;
extern "C" const void* _1_GetTrackUIMute_ = (void*)& ::GetTrackUIMute;
extern "C" const void* _1_GetTrackUIPan_ = (void*)& ::GetTrackUIPan;
extern "C" const void* _1_GetTrackUIVolPan_ = (void*)& ::GetTrackUIVolPan;
extern "C" const void* _1_GetUnderrunTime_ = (void*)& ::GetUnderrunTime;
extern "C" const void* _1_GetUserFileNameForRead_ = (void*)& ::GetUserFileNameForRead;
extern "C" const void* _1_GetUserInputs_ = (void*)& ::GetUserInputs;
extern "C" const void* _1_GoToMarker_ = (void*)& ::GoToMarker;
extern "C" const void* _1_GoToRegion_ = (void*)& ::GoToRegion;
extern "C" const void* _1_GR_SelectColor_ = (void*)& ::GR_SelectColor;
extern "C" const void* _1_GSC_mainwnd_ = (void*)& ::GSC_mainwnd;
extern "C" const void* _1_guidToString_ = (void*)& ::guidToString;
extern "C" const void* _1_HasExtState_ = (void*)& ::HasExtState;
extern "C" const void* _1_HasTrackMIDIPrograms_ = (void*)& ::HasTrackMIDIPrograms;
extern "C" const void* _1_HasTrackMIDIProgramsEx_ = (void*)& ::HasTrackMIDIProgramsEx;
extern "C" const void* _1_Help_Set_ = (void*)& ::Help_Set;
extern "C" const void* _1_HiresPeaksFromSource_ = (void*)& ::HiresPeaksFromSource;
extern "C" const void* _1_image_resolve_fn_ = (void*)& ::image_resolve_fn;
extern "C" const void* _1_InsertAutomationItem_ = (void*)& ::InsertAutomationItem;
extern "C" const void* _1_InsertEnvelopePoint_ = (void*)& ::InsertEnvelopePoint;
extern "C" const void* _1_InsertEnvelopePointEx_ = (void*)& ::InsertEnvelopePointEx;
extern "C" const void* _1_InsertMedia_ = (void*)& ::InsertMedia;
extern "C" const void* _1_InsertMediaSection_ = (void*)& ::InsertMediaSection;
extern "C" const void* _1_InsertTrackAtIndex_ = (void*)& ::InsertTrackAtIndex;
extern "C" const void* _1_IsInRealTimeAudio_ = (void*)& ::IsInRealTimeAudio;
extern "C" const void* _1_IsItemTakeActiveForPlayback_ = (void*)& ::IsItemTakeActiveForPlayback;
extern "C" const void* _1_IsMediaExtension_ = (void*)& ::IsMediaExtension;
extern "C" const void* _1_IsMediaItemSelected_ = (void*)& ::IsMediaItemSelected;
extern "C" const void* _1_IsProjectDirty_ = (void*)& ::IsProjectDirty;
extern "C" const void* _1_IsREAPER_ = (void*)& ::IsREAPER;
extern "C" const void* _1_IsTrackSelected_ = (void*)& ::IsTrackSelected;
extern "C" const void* _1_IsTrackVisible_ = (void*)& ::IsTrackVisible;
extern "C" const void* _1_joystick_create_ = (void*)& ::joystick_create;
extern "C" const void* _1_joystick_destroy_ = (void*)& ::joystick_destroy;
extern "C" const void* _1_joystick_enum_ = (void*)& ::joystick_enum;
extern "C" const void* _1_joystick_getaxis_ = (void*)& ::joystick_getaxis;
extern "C" const void* _1_joystick_getbuttonmask_ = (void*)& ::joystick_getbuttonmask;
extern "C" const void* _1_joystick_getinfo_ = (void*)& ::joystick_getinfo;
extern "C" const void* _1_joystick_getpov_ = (void*)& ::joystick_getpov;
extern "C" const void* _1_joystick_update_ = (void*)& ::joystick_update;
extern "C" const void* _1_kbd_enumerateActions_ = (void*)& ::kbd_enumerateActions;
extern "C" const void* _1_kbd_formatKeyName_ = (void*)& ::kbd_formatKeyName;
extern "C" const void* _1_kbd_getCommandName_ = (void*)& ::kbd_getCommandName;
extern "C" const void* _1_kbd_getTextFromCmd_ = (void*)& ::kbd_getTextFromCmd;
extern "C" const void* _1_KBD_OnMainActionEx_ = (void*)& ::KBD_OnMainActionEx;
extern "C" const void* _1_kbd_OnMidiEvent_ = (void*)& ::kbd_OnMidiEvent;
extern "C" const void* _1_kbd_OnMidiList_ = (void*)& ::kbd_OnMidiList;
extern "C" const void* _1_kbd_ProcessActionsMenu_ = (void*)& ::kbd_ProcessActionsMenu;
extern "C" const void* _1_kbd_processMidiEventActionEx_ = (void*)& ::kbd_processMidiEventActionEx;
extern "C" const void* _1_kbd_reprocessMenu_ = (void*)& ::kbd_reprocessMenu;
extern "C" const void* _1_kbd_RunCommandThroughHooks_ = (void*)& ::kbd_RunCommandThroughHooks;
extern "C" const void* _1_kbd_translateAccelerator_ = (void*)& ::kbd_translateAccelerator;
extern "C" const void* _1_kbd_translateMouse_ = (void*)& ::kbd_translateMouse;
extern "C" const void* _1_LICE__Destroy_ = (void*)& ::LICE__Destroy;
extern "C" const void* _1_LICE__DestroyFont_ = (void*)& ::LICE__DestroyFont;
extern "C" const void* _1_LICE__DrawText_ = (void*)& ::LICE__DrawText;
extern "C" const void* _1_LICE__GetBits_ = (void*)& ::LICE__GetBits;
extern "C" const void* _1_LICE__GetDC_ = (void*)& ::LICE__GetDC;
extern "C" const void* _1_LICE__GetHeight_ = (void*)& ::LICE__GetHeight;
extern "C" const void* _1_LICE__GetRowSpan_ = (void*)& ::LICE__GetRowSpan;
extern "C" const void* _1_LICE__GetWidth_ = (void*)& ::LICE__GetWidth;
extern "C" const void* _1_LICE__IsFlipped_ = (void*)& ::LICE__IsFlipped;
extern "C" const void* _1_LICE__resize_ = (void*)& ::LICE__resize;
extern "C" const void* _1_LICE__SetBkColor_ = (void*)& ::LICE__SetBkColor;
extern "C" const void* _1_LICE__SetFromHFont_ = (void*)& ::LICE__SetFromHFont;
extern "C" const void* _1_LICE__SetTextColor_ = (void*)& ::LICE__SetTextColor;
extern "C" const void* _1_LICE__SetTextCombineMode_ = (void*)& ::LICE__SetTextCombineMode;
extern "C" const void* _1_LICE_Arc_ = (void*)& ::LICE_Arc;
extern "C" const void* _1_LICE_Blit_ = (void*)& ::LICE_Blit;
extern "C" const void* _1_LICE_Blur_ = (void*)& ::LICE_Blur;
extern "C" const void* _1_LICE_BorderedRect_ = (void*)& ::LICE_BorderedRect;
extern "C" const void* _1_LICE_Circle_ = (void*)& ::LICE_Circle;
extern "C" const void* _1_LICE_Clear_ = (void*)& ::LICE_Clear;
extern "C" const void* _1_LICE_ClearRect_ = (void*)& ::LICE_ClearRect;
extern "C" const void* _1_LICE_ClipLine_ = (void*)& ::LICE_ClipLine;
extern "C" const void* _1_LICE_Copy_ = (void*)& ::LICE_Copy;
extern "C" const void* _1_LICE_CreateBitmap_ = (void*)& ::LICE_CreateBitmap;
extern "C" const void* _1_LICE_CreateFont_ = (void*)& ::LICE_CreateFont;
extern "C" const void* _1_LICE_DrawCBezier_ = (void*)& ::LICE_DrawCBezier;
extern "C" const void* _1_LICE_DrawChar_ = (void*)& ::LICE_DrawChar;
extern "C" const void* _1_LICE_DrawGlyph_ = (void*)& ::LICE_DrawGlyph;
extern "C" const void* _1_LICE_DrawRect_ = (void*)& ::LICE_DrawRect;
extern "C" const void* _1_LICE_DrawText_ = (void*)& ::LICE_DrawText;
extern "C" const void* _1_LICE_FillCBezier_ = (void*)& ::LICE_FillCBezier;
extern "C" const void* _1_LICE_FillCircle_ = (void*)& ::LICE_FillCircle;
extern "C" const void* _1_LICE_FillConvexPolygon_ = (void*)& ::LICE_FillConvexPolygon;
extern "C" const void* _1_LICE_FillRect_ = (void*)& ::LICE_FillRect;
extern "C" const void* _1_LICE_FillTrapezoid_ = (void*)& ::LICE_FillTrapezoid;
extern "C" const void* _1_LICE_FillTriangle_ = (void*)& ::LICE_FillTriangle;
extern "C" const void* _1_LICE_GetPixel_ = (void*)& ::LICE_GetPixel;
extern "C" const void* _1_LICE_GradRect_ = (void*)& ::LICE_GradRect;
extern "C" const void* _1_LICE_Line_ = (void*)& ::LICE_Line;
extern "C" const void* _1_LICE_LineInt_ = (void*)& ::LICE_LineInt;
extern "C" const void* _1_LICE_LoadPNG_ = (void*)& ::LICE_LoadPNG;
extern "C" const void* _1_LICE_LoadPNGFromResource_ = (void*)& ::LICE_LoadPNGFromResource;
extern "C" const void* _1_LICE_MeasureText_ = (void*)& ::LICE_MeasureText;
extern "C" const void* _1_LICE_MultiplyAddRect_ = (void*)& ::LICE_MultiplyAddRect;
extern "C" const void* _1_LICE_PutPixel_ = (void*)& ::LICE_PutPixel;
extern "C" const void* _1_LICE_RotatedBlit_ = (void*)& ::LICE_RotatedBlit;
extern "C" const void* _1_LICE_RoundRect_ = (void*)& ::LICE_RoundRect;
extern "C" const void* _1_LICE_ScaledBlit_ = (void*)& ::LICE_ScaledBlit;
extern "C" const void* _1_LICE_SimpleFill_ = (void*)& ::LICE_SimpleFill;
extern "C" const void* _1_LocalizeString_ = (void*)& ::LocalizeString;
extern "C" const void* _1_Loop_OnArrow_ = (void*)& ::Loop_OnArrow;
extern "C" const void* _1_Main_OnCommand_ = (void*)& ::Main_OnCommand;
extern "C" const void* _1_Main_OnCommandEx_ = (void*)& ::Main_OnCommandEx;
extern "C" const void* _1_Main_openProject_ = (void*)& ::Main_openProject;
extern "C" const void* _1_Main_SaveProject_ = (void*)& ::Main_SaveProject;
extern "C" const void* _1_Main_UpdateLoopInfo_ = (void*)& ::Main_UpdateLoopInfo;
extern "C" const void* _1_MarkProjectDirty_ = (void*)& ::MarkProjectDirty;
extern "C" const void* _1_MarkTrackItemsDirty_ = (void*)& ::MarkTrackItemsDirty;
extern "C" const void* _1_Master_GetPlayRate_ = (void*)& ::Master_GetPlayRate;
extern "C" const void* _1_Master_GetPlayRateAtTime_ = (void*)& ::Master_GetPlayRateAtTime;
extern "C" const void* _1_Master_GetTempo_ = (void*)& ::Master_GetTempo;
extern "C" const void* _1_Master_NormalizePlayRate_ = (void*)& ::Master_NormalizePlayRate;
extern "C" const void* _1_Master_NormalizeTempo_ = (void*)& ::Master_NormalizeTempo;
extern "C" const void* _1_MB_ = (void*)& ::MB;
extern "C" const void* _1_MediaItemDescendsFromTrack_ = (void*)& ::MediaItemDescendsFromTrack;
extern "C" const void* _1_MIDI_CountEvts_ = (void*)& ::MIDI_CountEvts;
extern "C" const void* _1_MIDI_DeleteCC_ = (void*)& ::MIDI_DeleteCC;
extern "C" const void* _1_MIDI_DeleteEvt_ = (void*)& ::MIDI_DeleteEvt;
extern "C" const void* _1_MIDI_DeleteNote_ = (void*)& ::MIDI_DeleteNote;
extern "C" const void* _1_MIDI_DeleteTextSysexEvt_ = (void*)& ::MIDI_DeleteTextSysexEvt;
extern "C" const void* _1_MIDI_DisableSort_ = (void*)& ::MIDI_DisableSort;
extern "C" const void* _1_MIDI_EnumSelCC_ = (void*)& ::MIDI_EnumSelCC;
extern "C" const void* _1_MIDI_EnumSelEvts_ = (void*)& ::MIDI_EnumSelEvts;
extern "C" const void* _1_MIDI_EnumSelNotes_ = (void*)& ::MIDI_EnumSelNotes;
extern "C" const void* _1_MIDI_EnumSelTextSysexEvts_ = (void*)& ::MIDI_EnumSelTextSysexEvts;
extern "C" const void* _1_MIDI_eventlist_Create_ = (void*)& ::MIDI_eventlist_Create;
extern "C" const void* _1_MIDI_eventlist_Destroy_ = (void*)& ::MIDI_eventlist_Destroy;
extern "C" const void* _1_MIDI_GetAllEvts_ = (void*)& ::MIDI_GetAllEvts;
extern "C" const void* _1_MIDI_GetCC_ = (void*)& ::MIDI_GetCC;
extern "C" const void* _1_MIDI_GetCCShape_ = (void*)& ::MIDI_GetCCShape;
extern "C" const void* _1_MIDI_GetEvt_ = (void*)& ::MIDI_GetEvt;
extern "C" const void* _1_MIDI_GetGrid_ = (void*)& ::MIDI_GetGrid;
extern "C" const void* _1_MIDI_GetHash_ = (void*)& ::MIDI_GetHash;
extern "C" const void* _1_MIDI_GetNote_ = (void*)& ::MIDI_GetNote;
extern "C" const void* _1_MIDI_GetPPQPos_EndOfMeasure_ = (void*)& ::MIDI_GetPPQPos_EndOfMeasure;
extern "C" const void* _1_MIDI_GetPPQPos_StartOfMeasure_ = (void*)& ::MIDI_GetPPQPos_StartOfMeasure;
extern "C" const void* _1_MIDI_GetPPQPosFromProjQN_ = (void*)& ::MIDI_GetPPQPosFromProjQN;
extern "C" const void* _1_MIDI_GetPPQPosFromProjTime_ = (void*)& ::MIDI_GetPPQPosFromProjTime;
extern "C" const void* _1_MIDI_GetProjQNFromPPQPos_ = (void*)& ::MIDI_GetProjQNFromPPQPos;
extern "C" const void* _1_MIDI_GetProjTimeFromPPQPos_ = (void*)& ::MIDI_GetProjTimeFromPPQPos;
extern "C" const void* _1_MIDI_GetScale_ = (void*)& ::MIDI_GetScale;
extern "C" const void* _1_MIDI_GetTextSysexEvt_ = (void*)& ::MIDI_GetTextSysexEvt;
extern "C" const void* _1_MIDI_GetTrackHash_ = (void*)& ::MIDI_GetTrackHash;
extern "C" const void* _1_MIDI_InsertCC_ = (void*)& ::MIDI_InsertCC;
extern "C" const void* _1_MIDI_InsertEvt_ = (void*)& ::MIDI_InsertEvt;
extern "C" const void* _1_MIDI_InsertNote_ = (void*)& ::MIDI_InsertNote;
extern "C" const void* _1_MIDI_InsertTextSysexEvt_ = (void*)& ::MIDI_InsertTextSysexEvt;
extern "C" const void* _1_midi_reinit_ = (void*)& ::midi_reinit;
extern "C" const void* _1_MIDI_SelectAll_ = (void*)& ::MIDI_SelectAll;
extern "C" const void* _1_MIDI_SetAllEvts_ = (void*)& ::MIDI_SetAllEvts;
extern "C" const void* _1_MIDI_SetCC_ = (void*)& ::MIDI_SetCC;
extern "C" const void* _1_MIDI_SetCCShape_ = (void*)& ::MIDI_SetCCShape;
extern "C" const void* _1_MIDI_SetEvt_ = (void*)& ::MIDI_SetEvt;
extern "C" const void* _1_MIDI_SetItemExtents_ = (void*)& ::MIDI_SetItemExtents;
extern "C" const void* _1_MIDI_SetNote_ = (void*)& ::MIDI_SetNote;
extern "C" const void* _1_MIDI_SetTextSysexEvt_ = (void*)& ::MIDI_SetTextSysexEvt;
extern "C" const void* _1_MIDI_Sort_ = (void*)& ::MIDI_Sort;
extern "C" const void* _1_MIDIEditor_GetActive_ = (void*)& ::MIDIEditor_GetActive;
extern "C" const void* _1_MIDIEditor_GetMode_ = (void*)& ::MIDIEditor_GetMode;
extern "C" const void* _1_MIDIEditor_GetSetting_int_ = (void*)& ::MIDIEditor_GetSetting_int;
extern "C" const void* _1_MIDIEditor_GetSetting_str_ = (void*)& ::MIDIEditor_GetSetting_str;
extern "C" const void* _1_MIDIEditor_GetTake_ = (void*)& ::MIDIEditor_GetTake;
extern "C" const void* _1_MIDIEditor_LastFocused_OnCommand_ = (void*)& ::MIDIEditor_LastFocused_OnCommand;
extern "C" const void* _1_MIDIEditor_OnCommand_ = (void*)& ::MIDIEditor_OnCommand;
extern "C" const void* _1_MIDIEditor_SetSetting_int_ = (void*)& ::MIDIEditor_SetSetting_int;
extern "C" const void* _1_mkpanstr_ = (void*)& ::mkpanstr;
extern "C" const void* _1_mkvolpanstr_ = (void*)& ::mkvolpanstr;
extern "C" const void* _1_mkvolstr_ = (void*)& ::mkvolstr;
extern "C" const void* _1_MoveEditCursor_ = (void*)& ::MoveEditCursor;
extern "C" const void* _1_MoveMediaItemToTrack_ = (void*)& ::MoveMediaItemToTrack;
extern "C" const void* _1_MuteAllTracks_ = (void*)& ::MuteAllTracks;
extern "C" const void* _1_my_getViewport_ = (void*)& ::my_getViewport;
extern "C" const void* _1_NamedCommandLookup_ = (void*)& ::NamedCommandLookup;
extern "C" const void* _1_OnPauseButton_ = (void*)& ::OnPauseButton;
extern "C" const void* _1_OnPauseButtonEx_ = (void*)& ::OnPauseButtonEx;
extern "C" const void* _1_OnPlayButton_ = (void*)& ::OnPlayButton;
extern "C" const void* _1_OnPlayButtonEx_ = (void*)& ::OnPlayButtonEx;
extern "C" const void* _1_OnStopButton_ = (void*)& ::OnStopButton;
extern "C" const void* _1_OnStopButtonEx_ = (void*)& ::OnStopButtonEx;
extern "C" const void* _1_OpenColorThemeFile_ = (void*)& ::OpenColorThemeFile;
extern "C" const void* _1_OpenMediaExplorer_ = (void*)& ::OpenMediaExplorer;
extern "C" const void* _1_OscLocalMessageToHost_ = (void*)& ::OscLocalMessageToHost;
extern "C" const void* _1_parse_timestr_ = (void*)& ::parse_timestr;
extern "C" const void* _1_parse_timestr_len_ = (void*)& ::parse_timestr_len;
extern "C" const void* _1_parse_timestr_pos_ = (void*)& ::parse_timestr_pos;
extern "C" const void* _1_parsepanstr_ = (void*)& ::parsepanstr;
extern "C" const void* _1_PCM_Sink_Create_ = (void*)& ::PCM_Sink_Create;
extern "C" const void* _1_PCM_Sink_CreateEx_ = (void*)& ::PCM_Sink_CreateEx;
extern "C" const void* _1_PCM_Sink_CreateMIDIFile_ = (void*)& ::PCM_Sink_CreateMIDIFile;
extern "C" const void* _1_PCM_Sink_CreateMIDIFileEx_ = (void*)& ::PCM_Sink_CreateMIDIFileEx;
extern "C" const void* _1_PCM_Sink_Enum_ = (void*)& ::PCM_Sink_Enum;
extern "C" const void* _1_PCM_Sink_GetExtension_ = (void*)& ::PCM_Sink_GetExtension;
extern "C" const void* _1_PCM_Sink_ShowConfig_ = (void*)& ::PCM_Sink_ShowConfig;
extern "C" const void* _1_PCM_Source_CreateFromFile_ = (void*)& ::PCM_Source_CreateFromFile;
extern "C" const void* _1_PCM_Source_CreateFromFileEx_ = (void*)& ::PCM_Source_CreateFromFileEx;
extern "C" const void* _1_PCM_Source_CreateFromSimple_ = (void*)& ::PCM_Source_CreateFromSimple;
extern "C" const void* _1_PCM_Source_CreateFromType_ = (void*)& ::PCM_Source_CreateFromType;
extern "C" const void* _1_PCM_Source_Destroy_ = (void*)& ::PCM_Source_Destroy;
extern "C" const void* _1_PCM_Source_GetPeaks_ = (void*)& ::PCM_Source_GetPeaks;
extern "C" const void* _1_PCM_Source_GetSectionInfo_ = (void*)& ::PCM_Source_GetSectionInfo;
extern "C" const void* _1_PeakBuild_Create_ = (void*)& ::PeakBuild_Create;
extern "C" const void* _1_PeakBuild_CreateEx_ = (void*)& ::PeakBuild_CreateEx;
extern "C" const void* _1_PeakGet_Create_ = (void*)& ::PeakGet_Create;
extern "C" const void* _1_PitchShiftSubModeMenu_ = (void*)& ::PitchShiftSubModeMenu;
extern "C" const void* _1_PlayPreview_ = (void*)& ::PlayPreview;
extern "C" const void* _1_PlayPreviewEx_ = (void*)& ::PlayPreviewEx;
extern "C" const void* _1_PlayTrackPreview_ = (void*)& ::PlayTrackPreview;
extern "C" const void* _1_PlayTrackPreview2_ = (void*)& ::PlayTrackPreview2;
extern "C" const void* _1_PlayTrackPreview2Ex_ = (void*)& ::PlayTrackPreview2Ex;
extern "C" const void* _1_plugin_getapi_ = (void*)& ::plugin_getapi;
extern "C" const void* _1_plugin_getFilterList_ = (void*)& ::plugin_getFilterList;
extern "C" const void* _1_plugin_getImportableProjectFilterList_ = (void*)& ::plugin_getImportableProjectFilterList;
extern "C" const void* _1_plugin_register_ = (void*)& ::plugin_register;
extern "C" const void* _1_PluginWantsAlwaysRunFx_ = (void*)& ::PluginWantsAlwaysRunFx;
extern "C" const void* _1_PreventUIRefresh_ = (void*)& ::PreventUIRefresh;
extern "C" const void* _1_projectconfig_var_addr_ = (void*)& ::projectconfig_var_addr;
extern "C" const void* _1_projectconfig_var_getoffs_ = (void*)& ::projectconfig_var_getoffs;
extern "C" const void* _1_PromptForAction_ = (void*)& ::PromptForAction;
extern "C" const void* _1_realloc_cmd_ptr_ = (void*)& ::realloc_cmd_ptr;
extern "C" const void* _1_ReaperGetPitchShiftAPI_ = (void*)& ::ReaperGetPitchShiftAPI;
extern "C" const void* _1_ReaScriptError_ = (void*)& ::ReaScriptError;
extern "C" const void* _1_RecursiveCreateDirectory_ = (void*)& ::RecursiveCreateDirectory;
extern "C" const void* _1_reduce_open_files_ = (void*)& ::reduce_open_files;
extern "C" const void* _1_RefreshToolbar_ = (void*)& ::RefreshToolbar;
extern "C" const void* _1_RefreshToolbar2_ = (void*)& ::RefreshToolbar2;
extern "C" const void* _1_relative_fn_ = (void*)& ::relative_fn;
extern "C" const void* _1_RemoveTrackSend_ = (void*)& ::RemoveTrackSend;
extern "C" const void* _1_RenderFileSection_ = (void*)& ::RenderFileSection;
extern "C" const void* _1_ReorderSelectedTracks_ = (void*)& ::ReorderSelectedTracks;
extern "C" const void* _1_Resample_EnumModes_ = (void*)& ::Resample_EnumModes;
extern "C" const void* _1_Resampler_Create_ = (void*)& ::Resampler_Create;
extern "C" const void* _1_resolve_fn_ = (void*)& ::resolve_fn;
extern "C" const void* _1_resolve_fn2_ = (void*)& ::resolve_fn2;
extern "C" const void* _1_ReverseNamedCommandLookup_ = (void*)& ::ReverseNamedCommandLookup;
extern "C" const void* _1_ScaleFromEnvelopeMode_ = (void*)& ::ScaleFromEnvelopeMode;
extern "C" const void* _1_ScaleToEnvelopeMode_ = (void*)& ::ScaleToEnvelopeMode;
extern "C" const void* _1_screenset_register_ = (void*)& ::screenset_register;
extern "C" const void* _1_screenset_registerNew_ = (void*)& ::screenset_registerNew;
extern "C" const void* _1_screenset_unregister_ = (void*)& ::screenset_unregister;
extern "C" const void* _1_screenset_unregisterByParam_ = (void*)& ::screenset_unregisterByParam;
extern "C" const void* _1_screenset_updateLastFocus_ = (void*)& ::screenset_updateLastFocus;
extern "C" const void* _1_SectionFromUniqueID_ = (void*)& ::SectionFromUniqueID;
extern "C" const void* _1_SelectAllMediaItems_ = (void*)& ::SelectAllMediaItems;
extern "C" const void* _1_SelectProjectInstance_ = (void*)& ::SelectProjectInstance;
extern "C" const void* _1_SendLocalOscMessage_ = (void*)& ::SendLocalOscMessage;
extern "C" const void* _1_SetActiveTake_ = (void*)& ::SetActiveTake;
extern "C" const void* _1_SetAutomationMode_ = (void*)& ::SetAutomationMode;
extern "C" const void* _1_SetCurrentBPM_ = (void*)& ::SetCurrentBPM;
extern "C" const void* _1_SetCursorContext_ = (void*)& ::SetCursorContext;
extern "C" const void* _1_SetEditCurPos_ = (void*)& ::SetEditCurPos;
extern "C" const void* _1_SetEditCurPos2_ = (void*)& ::SetEditCurPos2;
extern "C" const void* _1_SetEnvelopePoint_ = (void*)& ::SetEnvelopePoint;
extern "C" const void* _1_SetEnvelopePointEx_ = (void*)& ::SetEnvelopePointEx;
extern "C" const void* _1_SetEnvelopeStateChunk_ = (void*)& ::SetEnvelopeStateChunk;
extern "C" const void* _1_SetExtState_ = (void*)& ::SetExtState;
extern "C" const void* _1_SetGlobalAutomationOverride_ = (void*)& ::SetGlobalAutomationOverride;
extern "C" const void* _1_SetItemStateChunk_ = (void*)& ::SetItemStateChunk;
extern "C" const void* _1_SetMasterTrackVisibility_ = (void*)& ::SetMasterTrackVisibility;
extern "C" const void* _1_SetMediaItemInfo_Value_ = (void*)& ::SetMediaItemInfo_Value;
extern "C" const void* _1_SetMediaItemLength_ = (void*)& ::SetMediaItemLength;
extern "C" const void* _1_SetMediaItemPosition_ = (void*)& ::SetMediaItemPosition;
extern "C" const void* _1_SetMediaItemSelected_ = (void*)& ::SetMediaItemSelected;
extern "C" const void* _1_SetMediaItemTake_Source_ = (void*)& ::SetMediaItemTake_Source;
extern "C" const void* _1_SetMediaItemTakeInfo_Value_ = (void*)& ::SetMediaItemTakeInfo_Value;
extern "C" const void* _1_SetMediaTrackInfo_Value_ = (void*)& ::SetMediaTrackInfo_Value;
extern "C" const void* _1_SetMIDIEditorGrid_ = (void*)& ::SetMIDIEditorGrid;
extern "C" const void* _1_SetMixerScroll_ = (void*)& ::SetMixerScroll;
extern "C" const void* _1_SetMouseModifier_ = (void*)& ::SetMouseModifier;
extern "C" const void* _1_SetOnlyTrackSelected_ = (void*)& ::SetOnlyTrackSelected;
extern "C" const void* _1_SetProjectGrid_ = (void*)& ::SetProjectGrid;
extern "C" const void* _1_SetProjectMarker_ = (void*)& ::SetProjectMarker;
extern "C" const void* _1_SetProjectMarker2_ = (void*)& ::SetProjectMarker2;
extern "C" const void* _1_SetProjectMarker3_ = (void*)& ::SetProjectMarker3;
extern "C" const void* _1_SetProjectMarker4_ = (void*)& ::SetProjectMarker4;
extern "C" const void* _1_SetProjectMarkerByIndex_ = (void*)& ::SetProjectMarkerByIndex;
extern "C" const void* _1_SetProjectMarkerByIndex2_ = (void*)& ::SetProjectMarkerByIndex2;
extern "C" const void* _1_SetProjExtState_ = (void*)& ::SetProjExtState;
extern "C" const void* _1_SetRegionRenderMatrix_ = (void*)& ::SetRegionRenderMatrix;
extern "C" const void* _1_SetRenderLastError_ = (void*)& ::SetRenderLastError;
extern "C" const void* _1_SetTakeMarker_ = (void*)& ::SetTakeMarker;
extern "C" const void* _1_SetTakeStretchMarker_ = (void*)& ::SetTakeStretchMarker;
extern "C" const void* _1_SetTakeStretchMarkerSlope_ = (void*)& ::SetTakeStretchMarkerSlope;
extern "C" const void* _1_SetTempoTimeSigMarker_ = (void*)& ::SetTempoTimeSigMarker;
extern "C" const void* _1_SetThemeColor_ = (void*)& ::SetThemeColor;
extern "C" const void* _1_SetToggleCommandState_ = (void*)& ::SetToggleCommandState;
extern "C" const void* _1_SetTrackAutomationMode_ = (void*)& ::SetTrackAutomationMode;
extern "C" const void* _1_SetTrackColor_ = (void*)& ::SetTrackColor;
extern "C" const void* _1_SetTrackMIDILyrics_ = (void*)& ::SetTrackMIDILyrics;
extern "C" const void* _1_SetTrackMIDINoteName_ = (void*)& ::SetTrackMIDINoteName;
extern "C" const void* _1_SetTrackMIDINoteNameEx_ = (void*)& ::SetTrackMIDINoteNameEx;
extern "C" const void* _1_SetTrackSelected_ = (void*)& ::SetTrackSelected;
extern "C" const void* _1_SetTrackSendInfo_Value_ = (void*)& ::SetTrackSendInfo_Value;
extern "C" const void* _1_SetTrackSendUIPan_ = (void*)& ::SetTrackSendUIPan;
extern "C" const void* _1_SetTrackSendUIVol_ = (void*)& ::SetTrackSendUIVol;
extern "C" const void* _1_SetTrackStateChunk_ = (void*)& ::SetTrackStateChunk;
extern "C" const void* _1_ShowActionList_ = (void*)& ::ShowActionList;
extern "C" const void* _1_ShowConsoleMsg_ = (void*)& ::ShowConsoleMsg;
extern "C" const void* _1_ShowMessageBox_ = (void*)& ::ShowMessageBox;
extern "C" const void* _1_ShowPopupMenu_ = (void*)& ::ShowPopupMenu;
extern "C" const void* _1_SLIDER2DB_ = (void*)& ::SLIDER2DB;
extern "C" const void* _1_SnapToGrid_ = (void*)& ::SnapToGrid;
extern "C" const void* _1_SoloAllTracks_ = (void*)& ::SoloAllTracks;
extern "C" const void* _1_Splash_GetWnd_ = (void*)& ::Splash_GetWnd;
extern "C" const void* _1_SplitMediaItem_ = (void*)& ::SplitMediaItem;
extern "C" const void* _1_StopPreview_ = (void*)& ::StopPreview;
extern "C" const void* _1_StopTrackPreview_ = (void*)& ::StopTrackPreview;
extern "C" const void* _1_StopTrackPreview2_ = (void*)& ::StopTrackPreview2;
extern "C" const void* _1_stringToGuid_ = (void*)& ::stringToGuid;
extern "C" const void* _1_StuffMIDIMessage_ = (void*)& ::StuffMIDIMessage;
extern "C" const void* _1_TakeFX_AddByName_ = (void*)& ::TakeFX_AddByName;
extern "C" const void* _1_TakeFX_CopyToTake_ = (void*)& ::TakeFX_CopyToTake;
extern "C" const void* _1_TakeFX_CopyToTrack_ = (void*)& ::TakeFX_CopyToTrack;
extern "C" const void* _1_TakeFX_Delete_ = (void*)& ::TakeFX_Delete;
extern "C" const void* _1_TakeFX_EndParamEdit_ = (void*)& ::TakeFX_EndParamEdit;
extern "C" const void* _1_TakeFX_FormatParamValue_ = (void*)& ::TakeFX_FormatParamValue;
extern "C" const void* _1_TakeFX_FormatParamValueNormalized_ = (void*)& ::TakeFX_FormatParamValueNormalized;
extern "C" const void* _1_TakeFX_GetChainVisible_ = (void*)& ::TakeFX_GetChainVisible;
extern "C" const void* _1_TakeFX_GetCount_ = (void*)& ::TakeFX_GetCount;
extern "C" const void* _1_TakeFX_GetEnabled_ = (void*)& ::TakeFX_GetEnabled;
extern "C" const void* _1_TakeFX_GetEnvelope_ = (void*)& ::TakeFX_GetEnvelope;
extern "C" const void* _1_TakeFX_GetFloatingWindow_ = (void*)& ::TakeFX_GetFloatingWindow;
extern "C" const void* _1_TakeFX_GetFormattedParamValue_ = (void*)& ::TakeFX_GetFormattedParamValue;
extern "C" const void* _1_TakeFX_GetFXGUID_ = (void*)& ::TakeFX_GetFXGUID;
extern "C" const void* _1_TakeFX_GetFXName_ = (void*)& ::TakeFX_GetFXName;
extern "C" const void* _1_TakeFX_GetIOSize_ = (void*)& ::TakeFX_GetIOSize;
extern "C" const void* _1_TakeFX_GetNamedConfigParm_ = (void*)& ::TakeFX_GetNamedConfigParm;
extern "C" const void* _1_TakeFX_GetNumParams_ = (void*)& ::TakeFX_GetNumParams;
extern "C" const void* _1_TakeFX_GetOffline_ = (void*)& ::TakeFX_GetOffline;
extern "C" const void* _1_TakeFX_GetOpen_ = (void*)& ::TakeFX_GetOpen;
extern "C" const void* _1_TakeFX_GetParam_ = (void*)& ::TakeFX_GetParam;
extern "C" const void* _1_TakeFX_GetParameterStepSizes_ = (void*)& ::TakeFX_GetParameterStepSizes;
extern "C" const void* _1_TakeFX_GetParamEx_ = (void*)& ::TakeFX_GetParamEx;
extern "C" const void* _1_TakeFX_GetParamName_ = (void*)& ::TakeFX_GetParamName;
extern "C" const void* _1_TakeFX_GetParamNormalized_ = (void*)& ::TakeFX_GetParamNormalized;
extern "C" const void* _1_TakeFX_GetPinMappings_ = (void*)& ::TakeFX_GetPinMappings;
extern "C" const void* _1_TakeFX_GetPreset_ = (void*)& ::TakeFX_GetPreset;
extern "C" const void* _1_TakeFX_GetPresetIndex_ = (void*)& ::TakeFX_GetPresetIndex;
extern "C" const void* _1_TakeFX_GetUserPresetFilename_ = (void*)& ::TakeFX_GetUserPresetFilename;
extern "C" const void* _1_TakeFX_NavigatePresets_ = (void*)& ::TakeFX_NavigatePresets;
extern "C" const void* _1_TakeFX_SetEnabled_ = (void*)& ::TakeFX_SetEnabled;
extern "C" const void* _1_TakeFX_SetNamedConfigParm_ = (void*)& ::TakeFX_SetNamedConfigParm;
extern "C" const void* _1_TakeFX_SetOffline_ = (void*)& ::TakeFX_SetOffline;
extern "C" const void* _1_TakeFX_SetOpen_ = (void*)& ::TakeFX_SetOpen;
extern "C" const void* _1_TakeFX_SetParam_ = (void*)& ::TakeFX_SetParam;
extern "C" const void* _1_TakeFX_SetParamNormalized_ = (void*)& ::TakeFX_SetParamNormalized;
extern "C" const void* _1_TakeFX_SetPinMappings_ = (void*)& ::TakeFX_SetPinMappings;
extern "C" const void* _1_TakeFX_SetPreset_ = (void*)& ::TakeFX_SetPreset;
extern "C" const void* _1_TakeFX_SetPresetByIndex_ = (void*)& ::TakeFX_SetPresetByIndex;
extern "C" const void* _1_TakeFX_Show_ = (void*)& ::TakeFX_Show;
extern "C" const void* _1_TakeIsMIDI_ = (void*)& ::TakeIsMIDI;
extern "C" const void* _1_ThemeLayout_GetLayout_ = (void*)& ::ThemeLayout_GetLayout;
extern "C" const void* _1_ThemeLayout_GetParameter_ = (void*)& ::ThemeLayout_GetParameter;
extern "C" const void* _1_ThemeLayout_RefreshAll_ = (void*)& ::ThemeLayout_RefreshAll;
extern "C" const void* _1_ThemeLayout_SetLayout_ = (void*)& ::ThemeLayout_SetLayout;
extern "C" const void* _1_ThemeLayout_SetParameter_ = (void*)& ::ThemeLayout_SetParameter;
extern "C" const void* _1_time_precise_ = (void*)& ::time_precise;
extern "C" const void* _1_TimeMap2_beatsToTime_ = (void*)& ::TimeMap2_beatsToTime;
extern "C" const void* _1_TimeMap2_GetDividedBpmAtTime_ = (void*)& ::TimeMap2_GetDividedBpmAtTime;
extern "C" const void* _1_TimeMap2_GetNextChangeTime_ = (void*)& ::TimeMap2_GetNextChangeTime;
extern "C" const void* _1_TimeMap2_QNToTime_ = (void*)& ::TimeMap2_QNToTime;
extern "C" const void* _1_TimeMap2_timeToBeats_ = (void*)& ::TimeMap2_timeToBeats;
extern "C" const void* _1_TimeMap2_timeToQN_ = (void*)& ::TimeMap2_timeToQN;
extern "C" const void* _1_TimeMap_curFrameRate_ = (void*)& ::TimeMap_curFrameRate;
extern "C" const void* _1_TimeMap_GetDividedBpmAtTime_ = (void*)& ::TimeMap_GetDividedBpmAtTime;
extern "C" const void* _1_TimeMap_GetMeasureInfo_ = (void*)& ::TimeMap_GetMeasureInfo;
extern "C" const void* _1_TimeMap_GetMetronomePattern_ = (void*)& ::TimeMap_GetMetronomePattern;
extern "C" const void* _1_TimeMap_GetTimeSigAtTime_ = (void*)& ::TimeMap_GetTimeSigAtTime;
extern "C" const void* _1_TimeMap_QNToMeasures_ = (void*)& ::TimeMap_QNToMeasures;
extern "C" const void* _1_TimeMap_QNToTime_ = (void*)& ::TimeMap_QNToTime;
extern "C" const void* _1_TimeMap_QNToTime_abs_ = (void*)& ::TimeMap_QNToTime_abs;
extern "C" const void* _1_TimeMap_timeToQN_ = (void*)& ::TimeMap_timeToQN;
extern "C" const void* _1_TimeMap_timeToQN_abs_ = (void*)& ::TimeMap_timeToQN_abs;
extern "C" const void* _1_ToggleTrackSendUIMute_ = (void*)& ::ToggleTrackSendUIMute;
extern "C" const void* _1_Track_GetPeakHoldDB_ = (void*)& ::Track_GetPeakHoldDB;
extern "C" const void* _1_Track_GetPeakInfo_ = (void*)& ::Track_GetPeakInfo;
extern "C" const void* _1_TrackCtl_SetToolTip_ = (void*)& ::TrackCtl_SetToolTip;
extern "C" const void* _1_TrackFX_AddByName_ = (void*)& ::TrackFX_AddByName;
extern "C" const void* _1_TrackFX_CopyToTake_ = (void*)& ::TrackFX_CopyToTake;
extern "C" const void* _1_TrackFX_CopyToTrack_ = (void*)& ::TrackFX_CopyToTrack;
extern "C" const void* _1_TrackFX_Delete_ = (void*)& ::TrackFX_Delete;
extern "C" const void* _1_TrackFX_EndParamEdit_ = (void*)& ::TrackFX_EndParamEdit;
extern "C" const void* _1_TrackFX_FormatParamValue_ = (void*)& ::TrackFX_FormatParamValue;
extern "C" const void* _1_TrackFX_FormatParamValueNormalized_ = (void*)& ::TrackFX_FormatParamValueNormalized;
extern "C" const void* _1_TrackFX_GetByName_ = (void*)& ::TrackFX_GetByName;
extern "C" const void* _1_TrackFX_GetChainVisible_ = (void*)& ::TrackFX_GetChainVisible;
extern "C" const void* _1_TrackFX_GetCount_ = (void*)& ::TrackFX_GetCount;
extern "C" const void* _1_TrackFX_GetEnabled_ = (void*)& ::TrackFX_GetEnabled;
extern "C" const void* _1_TrackFX_GetEQ_ = (void*)& ::TrackFX_GetEQ;
extern "C" const void* _1_TrackFX_GetEQBandEnabled_ = (void*)& ::TrackFX_GetEQBandEnabled;
extern "C" const void* _1_TrackFX_GetEQParam_ = (void*)& ::TrackFX_GetEQParam;
extern "C" const void* _1_TrackFX_GetFloatingWindow_ = (void*)& ::TrackFX_GetFloatingWindow;
extern "C" const void* _1_TrackFX_GetFormattedParamValue_ = (void*)& ::TrackFX_GetFormattedParamValue;
extern "C" const void* _1_TrackFX_GetFXGUID_ = (void*)& ::TrackFX_GetFXGUID;
extern "C" const void* _1_TrackFX_GetFXName_ = (void*)& ::TrackFX_GetFXName;
extern "C" const void* _1_TrackFX_GetInstrument_ = (void*)& ::TrackFX_GetInstrument;
extern "C" const void* _1_TrackFX_GetIOSize_ = (void*)& ::TrackFX_GetIOSize;
extern "C" const void* _1_TrackFX_GetNamedConfigParm_ = (void*)& ::TrackFX_GetNamedConfigParm;
extern "C" const void* _1_TrackFX_GetNumParams_ = (void*)& ::TrackFX_GetNumParams;
extern "C" const void* _1_TrackFX_GetOffline_ = (void*)& ::TrackFX_GetOffline;
extern "C" const void* _1_TrackFX_GetOpen_ = (void*)& ::TrackFX_GetOpen;
extern "C" const void* _1_TrackFX_GetParam_ = (void*)& ::TrackFX_GetParam;
extern "C" const void* _1_TrackFX_GetParameterStepSizes_ = (void*)& ::TrackFX_GetParameterStepSizes;
extern "C" const void* _1_TrackFX_GetParamEx_ = (void*)& ::TrackFX_GetParamEx;
extern "C" const void* _1_TrackFX_GetParamName_ = (void*)& ::TrackFX_GetParamName;
extern "C" const void* _1_TrackFX_GetParamNormalized_ = (void*)& ::TrackFX_GetParamNormalized;
extern "C" const void* _1_TrackFX_GetPinMappings_ = (void*)& ::TrackFX_GetPinMappings;
extern "C" const void* _1_TrackFX_GetPreset_ = (void*)& ::TrackFX_GetPreset;
extern "C" const void* _1_TrackFX_GetPresetIndex_ = (void*)& ::TrackFX_GetPresetIndex;
extern "C" const void* _1_TrackFX_GetRecChainVisible_ = (void*)& ::TrackFX_GetRecChainVisible;
extern "C" const void* _1_TrackFX_GetRecCount_ = (void*)& ::TrackFX_GetRecCount;
extern "C" const void* _1_TrackFX_GetUserPresetFilename_ = (void*)& ::TrackFX_GetUserPresetFilename;
extern "C" const void* _1_TrackFX_NavigatePresets_ = (void*)& ::TrackFX_NavigatePresets;
extern "C" const void* _1_TrackFX_SetEnabled_ = (void*)& ::TrackFX_SetEnabled;
extern "C" const void* _1_TrackFX_SetEQBandEnabled_ = (void*)& ::TrackFX_SetEQBandEnabled;
extern "C" const void* _1_TrackFX_SetEQParam_ = (void*)& ::TrackFX_SetEQParam;
extern "C" const void* _1_TrackFX_SetNamedConfigParm_ = (void*)& ::TrackFX_SetNamedConfigParm;
extern "C" const void* _1_TrackFX_SetOffline_ = (void*)& ::TrackFX_SetOffline;
extern "C" const void* _1_TrackFX_SetOpen_ = (void*)& ::TrackFX_SetOpen;
extern "C" const void* _1_TrackFX_SetParam_ = (void*)& ::TrackFX_SetParam;
extern "C" const void* _1_TrackFX_SetParamNormalized_ = (void*)& ::TrackFX_SetParamNormalized;
extern "C" const void* _1_TrackFX_SetPinMappings_ = (void*)& ::TrackFX_SetPinMappings;
extern "C" const void* _1_TrackFX_SetPreset_ = (void*)& ::TrackFX_SetPreset;
extern "C" const void* _1_TrackFX_SetPresetByIndex_ = (void*)& ::TrackFX_SetPresetByIndex;
extern "C" const void* _1_TrackFX_Show_ = (void*)& ::TrackFX_Show;
extern "C" const void* _1_TrackList_AdjustWindows_ = (void*)& ::TrackList_AdjustWindows;
extern "C" const void* _1_TrackList_UpdateAllExternalSurfaces_ = (void*)& ::TrackList_UpdateAllExternalSurfaces;
extern "C" const void* _1_Undo_BeginBlock_ = (void*)& ::Undo_BeginBlock;
extern "C" const void* _1_Undo_BeginBlock2_ = (void*)& ::Undo_BeginBlock2;
extern "C" const void* _1_Undo_CanRedo2_ = (void*)& ::Undo_CanRedo2;
extern "C" const void* _1_Undo_CanUndo2_ = (void*)& ::Undo_CanUndo2;
extern "C" const void* _1_Undo_DoRedo2_ = (void*)& ::Undo_DoRedo2;
extern "C" const void* _1_Undo_DoUndo2_ = (void*)& ::Undo_DoUndo2;
extern "C" const void* _1_Undo_EndBlock_ = (void*)& ::Undo_EndBlock;
extern "C" const void* _1_Undo_EndBlock2_ = (void*)& ::Undo_EndBlock2;
extern "C" const void* _1_Undo_OnStateChange_ = (void*)& ::Undo_OnStateChange;
extern "C" const void* _1_Undo_OnStateChange2_ = (void*)& ::Undo_OnStateChange2;
extern "C" const void* _1_Undo_OnStateChange_Item_ = (void*)& ::Undo_OnStateChange_Item;
extern "C" const void* _1_Undo_OnStateChangeEx_ = (void*)& ::Undo_OnStateChangeEx;
extern "C" const void* _1_Undo_OnStateChangeEx2_ = (void*)& ::Undo_OnStateChangeEx2;
extern "C" const void* _1_update_disk_counters_ = (void*)& ::update_disk_counters;
extern "C" const void* _1_UpdateArrange_ = (void*)& ::UpdateArrange;
extern "C" const void* _1_UpdateItemInProject_ = (void*)& ::UpdateItemInProject;
extern "C" const void* _1_UpdateTimeline_ = (void*)& ::UpdateTimeline;
extern "C" const void* _1_ValidatePtr_ = (void*)& ::ValidatePtr;
extern "C" const void* _1_ValidatePtr2_ = (void*)& ::ValidatePtr2;
extern "C" const void* _1_ViewPrefs_ = (void*)& ::ViewPrefs;
extern "C" const void* _1_WDL_VirtualWnd_ScaledBlitBG_ = (void*)& ::WDL_VirtualWnd_ScaledBlitBG;
extern "C" int _1_REAPERAPI_LoadAPI_(void *(*getAPI)(const char *)) { return ::REAPERAPI_LoadAPI(getAPI); }
